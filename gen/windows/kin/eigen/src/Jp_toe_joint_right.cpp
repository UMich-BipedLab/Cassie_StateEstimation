/*
 * Automatically Generated from Mathematica.
 * Thu 23 May 2019 13:10:07 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_toe_joint_right.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  double t471;
  double t689;
  double t609;
  double t653;
  double t808;
  double t215;
  double t236;
  double t243;
  double t411;
  double t572;
  double t656;
  double t809;
  double t825;
  double t914;
  double t1101;
  double t1105;
  double t1142;
  double t60;
  double t1255;
  double t1259;
  double t1298;
  double t1314;
  double t1375;
  double t1378;
  double t1590;
  double t1632;
  double t1635;
  double t1647;
  double t1893;
  double t1926;
  double t1929;
  double t1937;
  double t1939;
  double t1946;
  double t2060;
  double t2124;
  double t2254;
  double t2264;
  double t2440;
  double t2457;
  double t2494;
  double t2502;
  double t2530;
  double t2538;
  double t2553;
  double t2579;
  double t2584;
  double t2587;
  double t2663;
  double t2668;
  double t2672;
  double t2700;
  double t2713;
  double t2714;
  double t2727;
  double t2773;
  double t2793;
  double t2795;
  double t2935;
  double t2939;
  double t2965;
  double t3013;
  double t3049;
  double t3053;
  double t3113;
  double t3269;
  double t3322;
  double t3362;
  double t3466;
  double t3501;
  double t3512;
  double t266;
  double t445;
  double t447;
  double t580;
  double t597;
  double t926;
  double t960;
  double t1054;
  double t1086;
  double t1202;
  double t1209;
  double t1217;
  double t3708;
  double t3740;
  double t3761;
  double t3767;
  double t3855;
  double t3870;
  double t1450;
  double t1594;
  double t1597;
  double t3888;
  double t3902;
  double t3911;
  double t1876;
  double t1877;
  double t1891;
  double t2003;
  double t2065;
  double t2075;
  double t3945;
  double t3958;
  double t3970;
  double t4097;
  double t4113;
  double t4125;
  double t2379;
  double t2382;
  double t2395;
  double t2550;
  double t2570;
  double t2571;
  double t4159;
  double t4220;
  double t4239;
  double t4260;
  double t4267;
  double t4272;
  double t2623;
  double t2625;
  double t2632;
  double t2725;
  double t2746;
  double t2771;
  double t4314;
  double t4315;
  double t4329;
  double t4405;
  double t4434;
  double t4472;
  double t2817;
  double t2824;
  double t2917;
  double t3065;
  double t3192;
  double t3245;
  double t4539;
  double t4560;
  double t4564;
  double t4591;
  double t4600;
  double t4618;
  double t3410;
  double t3419;
  double t3463;
  double t4657;
  double t4682;
  double t4725;
  double t4733;
  double t4743;
  double t4750;
  double t4938;
  double t4948;
  double t4959;
  double t4980;
  double t4986;
  double t4993;
  double t5063;
  double t5116;
  double t5121;
  double t5186;
  double t5198;
  double t5203;
  double t5245;
  double t5260;
  double t5270;
  double t5314;
  double t5320;
  double t5355;
  double t5382;
  double t5384;
  double t5392;
  double t5451;
  double t5490;
  double t5558;
  double t5575;
  double t5615;
  double t5655;
  double t5729;
  double t5740;
  double t5837;
  double t5877;
  double t5913;
  double t5923;
  double t6006;
  double t6047;
  double t6064;
  double t6075;
  double t6080;
  double t6086;
  double t6150;
  double t6157;
  double t6181;
  double t6208;
  double t6235;
  double t6243;
  double t6273;
  double t6287;
  double t6298;
  double t6306;
  double t6320;
  double t6334;
  double t6347;
  double t6358;
  double t6383;
  double t6388;
  double t6392;
  double t6394;
  double t6427;
  double t6461;
  double t6514;
  double t6531;
  double t6533;
  double t6555;
  double t6565;
  double t6570;
  double t6571;
  double t6840;
  double t6842;
  double t6857;
  double t6881;
  double t6886;
  double t6897;
  double t6978;
  double t7013;
  double t7026;
  double t7041;
  double t7046;
  double t7050;
  double t7072;
  double t7084;
  double t7097;
  double t7103;
  double t7121;
  double t7166;
  double t7205;
  double t7206;
  double t7210;
  double t7227;
  double t7233;
  double t7234;
  double t7242;
  double t7283;
  double t7311;
  double t7335;
  double t7352;
  double t7359;
  double t7372;
  double t7379;
  double t7398;
  double t7679;
  double t7680;
  double t7704;
  double t7773;
  double t7774;
  double t7726;
  double t7731;
  double t7742;
  double t7841;
  double t7847;
  double t7865;
  double t7880;
  double t7882;
  double t7888;
  double t7908;
  double t7911;
  double t7921;
  double t7956;
  double t7965;
  double t7971;
  double t7995;
  double t8004;
  double t8005;
  double t8041;
  double t8045;
  double t8049;
  double t8058;
  double t8064;
  double t8072;
  double t8087;
  double t8110;
  double t8114;
  double t8171;
  double t8173;
  double t8174;
  double t8264;
  double t8268;
  double t8278;
  double t8224;
  double t8229;
  double t8300;
  double t8303;
  double t8321;
  double t8339;
  double t8350;
  double t8363;
  double t8380;
  double t8381;
  double t8391;
  double t8409;
  double t8415;
  double t8428;
  double t8448;
  double t8452;
  double t8463;
  double t8473;
  double t8474;
  double t8475;
  double t8481;
  double t8486;
  double t8495;
  double t8504;
  double t8516;
  double t8520;
  double t8682;
  double t8707;
  double t8719;
  double t8636;
  double t8652;
  double t8663;
  double t8743;
  double t8744;
  double t8749;
  double t8767;
  double t8770;
  double t8776;
  double t8780;
  double t8790;
  double t8806;
  double t8808;
  double t8829;
  double t8849;
  double t8875;
  double t8879;
  double t8895;
  double t8920;
  double t8923;
  double t8928;
  double t8938;
  double t8943;
  double t8954;
  double t8958;
  double t8965;
  double t8975;
  double t9085;
  double t9087;
  double t9155;
  double t9168;
  double t9170;
  double t9210;
  double t9211;
  double t9217;
  double t9227;
  double t9235;
  double t9236;
  double t9251;
  double t9254;
  double t9267;
  double t9278;
  double t9290;
  double t9298;
  double t9306;
  double t9308;
  double t9315;
  double t9330;
  double t9350;
  double t9357;
  double t9369;
  double t9370;
  double t9378;
  double t9468;
  double t9475;
  double t9481;
  double t9493;
  double t9495;
  double t9485;
  double t9489;
  double t9529;
  double t9573;
  double t9575;
  double t9591;
  double t9604;
  double t9629;
  double t9655;
  double t9663;
  double t9679;
  double t9698;
  double t9718;
  double t9736;
  double t9752;
  double t9756;
  double t9759;
  double t9767;
  double t9768;
  double t9777;
  double t9790;
  double t9802;
  double t9805;
  double t9815;
  double t9824;
  double t9828;
  double t8677;
  double t8731;
  double t8737;
  double t8742;
  double t8764;
  double t8779;
  double t8807;
  double t8861;
  double t8905;
  double t8937;
  double t8956;
  double t8989;
  double t8990;
  double t9010;
  double t9013;
  double t9018;
  double t9021;
  double t9033;
  double t9039;
  double t9042;
  double t4003;
  double t4019;
  double t4023;
  double t10065;
  double t10074;
  double t10077;
  double t10099;
  double t10106;
  double t10117;
  double t10126;
  double t10147;
  double t10148;
  double t10151;
  double t10156;
  double t10163;
  double t10167;
  double t10171;
  double t10179;
  double t10196;
  double t10205;
  double t10220;
  double t9927;
  double t9931;
  double t9940;
  double t9964;
  double t9967;
  double t10298;
  double t10306;
  double t10307;
  double t10315;
  double t10323;
  double t10327;
  double t10362;
  double t10369;
  double t10370;
  double t10380;
  double t10383;
  double t10393;
  double t10395;
  double t10396;
  double t10404;
  double t10417;
  double t10429;
  double t10431;
  double t10449;
  double t10453;
  double t10455;
  double t10462;
  double t10467;
  double t10469;
  double t10510;
  double t10517;
  double t10519;
  double t10531;
  double t10533;
  double t10537;
  double t10557;
  double t10561;
  double t10562;
  double t10564;
  double t10566;
  double t10568;
  double t10576;
  double t10577;
  double t10578;
  double t10584;
  double t10586;
  double t10589;
  double t10596;
  double t10597;
  double t10601;
  double t10610;
  double t10614;
  double t10615;
  double t10666;
  double t10667;
  double t10671;
  double t10674;
  double t10675;
  double t10679;
  double t10681;
  double t10683;
  double t10692;
  double t10693;
  double t10695;
  double t10710;
  double t10711;
  double t10717;
  double t10720;
  double t10723;
  double t10724;
  double t10728;
  double t10732;
  double t10736;
  double t10648;
  double t10652;
  double t10657;
  double t10658;
  double t10662;
  double t10759;
  double t10760;
  double t10762;
  double t10766;
  double t10768;
  double t10771;
  double t10776;
  double t10777;
  double t10778;
  double t10783;
  double t10784;
  double t10793;
  double t10796;
  double t10800;
  double t10802;
  double t10806;
  double t10807;
  double t10809;
  double t10812;
  double t10815;
  double t10817;
  double t10825;
  double t10826;
  double t10829;
  double t10833;
  double t10835;
  double t10838;
  double t10861;
  double t10862;
  double t10863;
  double t10866;
  double t10870;
  double t10871;
  double t10878;
  double t10881;
  double t10884;
  double t10888;
  double t10889;
  double t10890;
  double t10895;
  double t10901;
  double t10902;
  double t10906;
  double t10907;
  double t10908;
  double t10910;
  double t10911;
  double t10914;
  double t10917;
  double t10918;
  double t10924;
  double t10934;
  double t10935;
  double t10938;
  double t10974;
  double t10975;
  double t10977;
  double t10978;
  double t10979;
  double t10981;
  double t10982;
  double t10986;
  double t10988;
  double t10991;
  double t10993;
  double t10996;
  double t10997;
  double t10960;
  double t10962;
  double t10963;
  double t10966;
  double t10967;
  double t11012;
  double t11013;
  double t11014;
  double t11018;
  double t11021;
  double t11023;
  double t11024;
  double t11027;
  double t11028;
  double t11029;
  double t11031;
  double t11032;
  double t11033;
  double t11035;
  double t11036;
  double t11037;
  double t11039;
  double t11041;
  double t11042;
  double t11060;
  double t11062;
  double t11063;
  double t11066;
  double t11068;
  double t11070;
  double t11071;
  double t11074;
  double t11076;
  double t11077;
  double t11082;
  double t11083;
  double t11085;
  double t11087;
  double t11089;
  double t11090;
  double t11093;
  double t11094;
  double t11096;
  double t11122;
  double t11123;
  double t11127;
  double t11128;
  double t11131;
  double t11132;
  double t11133;
  double t11109;
  double t11110;
  double t11113;
  double t11115;
  double t11116;
  double t11151;
  double t11152;
  double t11153;
  double t11156;
  double t11157;
  double t11159;
  double t11162;
  double t11165;
  double t11166;
  double t11168;
  double t11172;
  double t11173;
  double t11174;
  double t11188;
  double t11189;
  double t11192;
  double t11194;
  double t11196;
  double t11200;
  double t11201;
  double t11203;
  double t11204;
  double t11205;
  double t11207;
  double t11208;
  double t11209;
  double t11237;
  double t11238;
  double t4840;
  double t11225;
  double t11228;
  double t11229;
  double t11231;
  double t11232;
  double t11249;
  double t11250;
  double t11252;
  double t11256;
  double t11257;
  double t11259;
  double t11261;
  double t11279;
  double t11280;
  double t11281;
  double t11286;
  double t11287;
  double t11292;
  double t11293;
  double t11240;
  double t4861;
  double t4865;
  double t11310;
  double t11311;
  double t11313;
  double t11314;
  double t11315;
  double t11264;
  double t11325;
  double t11326;
  double t11327;
  double t11271;
  double t11296;
  double t11338;
  double t11339;
  double t11340;
  double t11304;
  t471 = Sin(var1[3]);
  t689 = Cos(var1[3]);
  t609 = Cos(var1[5]);
  t653 = Sin(var1[4]);
  t808 = Sin(var1[5]);
  t215 = Cos(var1[14]);
  t236 = -1.*t215;
  t243 = 1. + t236;
  t411 = Sin(var1[14]);
  t572 = Sin(var1[13]);
  t656 = -1.*t609*t471*t653;
  t809 = t689*t808;
  t825 = t656 + t809;
  t914 = Cos(var1[13]);
  t1101 = -1.*t689*t609;
  t1105 = -1.*t471*t653*t808;
  t1142 = t1101 + t1105;
  t60 = Cos(var1[4]);
  t1255 = t572*t825;
  t1259 = t914*t1142;
  t1298 = t1255 + t1259;
  t1314 = Cos(var1[15]);
  t1375 = -1.*t1314;
  t1378 = 1. + t1375;
  t1590 = Sin(var1[15]);
  t1632 = t914*t825;
  t1635 = -1.*t572*t1142;
  t1647 = t1632 + t1635;
  t1893 = -1.*t215*t60*t471;
  t1926 = t411*t1298;
  t1929 = t1893 + t1926;
  t1937 = Cos(var1[16]);
  t1939 = -1.*t1937;
  t1946 = 1. + t1939;
  t2060 = Sin(var1[16]);
  t2124 = t1590*t1647;
  t2254 = t1314*t1929;
  t2264 = t2124 + t2254;
  t2440 = t1314*t1647;
  t2457 = -1.*t1590*t1929;
  t2494 = t2440 + t2457;
  t2502 = Cos(var1[17]);
  t2530 = -1.*t2502;
  t2538 = 1. + t2530;
  t2553 = Sin(var1[17]);
  t2579 = -1.*t2060*t2264;
  t2584 = t1937*t2494;
  t2587 = t2579 + t2584;
  t2663 = t1937*t2264;
  t2668 = t2060*t2494;
  t2672 = t2663 + t2668;
  t2700 = Cos(var1[18]);
  t2713 = -1.*t2700;
  t2714 = 1. + t2713;
  t2727 = Sin(var1[18]);
  t2773 = t2553*t2587;
  t2793 = t2502*t2672;
  t2795 = t2773 + t2793;
  t2935 = t2502*t2587;
  t2939 = -1.*t2553*t2672;
  t2965 = t2935 + t2939;
  t3013 = Cos(var1[19]);
  t3049 = -1.*t3013;
  t3053 = 1. + t3049;
  t3113 = Sin(var1[19]);
  t3269 = -1.*t2727*t2795;
  t3322 = t2700*t2965;
  t3362 = t3269 + t3322;
  t3466 = t2700*t2795;
  t3501 = t2727*t2965;
  t3512 = t3466 + t3501;
  t266 = -0.049*t243;
  t445 = -0.135*t411;
  t447 = 0. + t266 + t445;
  t580 = 0.135*t572;
  t597 = 0. + t580;
  t926 = -1.*t914;
  t960 = 1. + t926;
  t1054 = -0.135*t960;
  t1086 = 0. + t1054;
  t1202 = -0.135*t243;
  t1209 = 0.049*t411;
  t1217 = 0. + t1202 + t1209;
  t3708 = t689*t609*t653;
  t3740 = t471*t808;
  t3761 = t3708 + t3740;
  t3767 = -1.*t609*t471;
  t3855 = t689*t653*t808;
  t3870 = t3767 + t3855;
  t1450 = -0.09*t1378;
  t1594 = 0.049*t1590;
  t1597 = 0. + t1450 + t1594;
  t3888 = t572*t3761;
  t3902 = t914*t3870;
  t3911 = t3888 + t3902;
  t1876 = -0.049*t1378;
  t1877 = -0.09*t1590;
  t1891 = 0. + t1876 + t1877;
  t2003 = -0.049*t1946;
  t2065 = -0.21*t2060;
  t2075 = 0. + t2003 + t2065;
  t3945 = t914*t3761;
  t3958 = -1.*t572*t3870;
  t3970 = t3945 + t3958;
  t4097 = t215*t689*t60;
  t4113 = t411*t3911;
  t4125 = t4097 + t4113;
  t2379 = -0.21*t1946;
  t2382 = 0.049*t2060;
  t2395 = 0. + t2379 + t2382;
  t2550 = -0.2707*t2538;
  t2570 = 0.0016*t2553;
  t2571 = 0. + t2550 + t2570;
  t4159 = t1590*t3970;
  t4220 = t1314*t4125;
  t4239 = t4159 + t4220;
  t4260 = t1314*t3970;
  t4267 = -1.*t1590*t4125;
  t4272 = t4260 + t4267;
  t2623 = -0.0016*t2538;
  t2625 = -0.2707*t2553;
  t2632 = 0. + t2623 + t2625;
  t2725 = 0.0184*t2714;
  t2746 = -0.7055*t2727;
  t2771 = 0. + t2725 + t2746;
  t4314 = -1.*t2060*t4239;
  t4315 = t1937*t4272;
  t4329 = t4314 + t4315;
  t4405 = t1937*t4239;
  t4434 = t2060*t4272;
  t4472 = t4405 + t4434;
  t2817 = -0.7055*t2714;
  t2824 = -0.0184*t2727;
  t2917 = 0. + t2817 + t2824;
  t3065 = -1.1135*t3053;
  t3192 = 0.0216*t3113;
  t3245 = 0. + t3065 + t3192;
  t4539 = t2553*t4329;
  t4560 = t2502*t4472;
  t4564 = t4539 + t4560;
  t4591 = t2502*t4329;
  t4600 = -1.*t2553*t4472;
  t4618 = t4591 + t4600;
  t3410 = -0.0216*t3053;
  t3419 = -1.1135*t3113;
  t3463 = 0. + t3410 + t3419;
  t4657 = -1.*t2727*t4564;
  t4682 = t2700*t4618;
  t4725 = t4657 + t4682;
  t4733 = t2700*t4564;
  t4743 = t2727*t4618;
  t4750 = t4733 + t4743;
  t4938 = t689*t60*t609*t572;
  t4948 = t914*t689*t60*t808;
  t4959 = t4938 + t4948;
  t4980 = t914*t689*t60*t609;
  t4986 = -1.*t689*t60*t572*t808;
  t4993 = t4980 + t4986;
  t5063 = -1.*t215*t689*t653;
  t5116 = t411*t4959;
  t5121 = t5063 + t5116;
  t5186 = t1590*t4993;
  t5198 = t1314*t5121;
  t5203 = t5186 + t5198;
  t5245 = t1314*t4993;
  t5260 = -1.*t1590*t5121;
  t5270 = t5245 + t5260;
  t5314 = -1.*t2060*t5203;
  t5320 = t1937*t5270;
  t5355 = t5314 + t5320;
  t5382 = t1937*t5203;
  t5384 = t2060*t5270;
  t5392 = t5382 + t5384;
  t5451 = t2553*t5355;
  t5490 = t2502*t5392;
  t5558 = t5451 + t5490;
  t5575 = t2502*t5355;
  t5615 = -1.*t2553*t5392;
  t5655 = t5575 + t5615;
  t5729 = -1.*t2727*t5558;
  t5740 = t2700*t5655;
  t5837 = t5729 + t5740;
  t5877 = t2700*t5558;
  t5913 = t2727*t5655;
  t5923 = t5877 + t5913;
  t6006 = t60*t609*t572*t471;
  t6047 = t914*t60*t471*t808;
  t6064 = t6006 + t6047;
  t6075 = t914*t60*t609*t471;
  t6080 = -1.*t60*t572*t471*t808;
  t6086 = t6075 + t6080;
  t6150 = -1.*t215*t471*t653;
  t6157 = t411*t6064;
  t6181 = t6150 + t6157;
  t6208 = t1590*t6086;
  t6235 = t1314*t6181;
  t6243 = t6208 + t6235;
  t6273 = t1314*t6086;
  t6287 = -1.*t1590*t6181;
  t6298 = t6273 + t6287;
  t6306 = -1.*t2060*t6243;
  t6320 = t1937*t6298;
  t6334 = t6306 + t6320;
  t6347 = t1937*t6243;
  t6358 = t2060*t6298;
  t6383 = t6347 + t6358;
  t6388 = t2553*t6334;
  t6392 = t2502*t6383;
  t6394 = t6388 + t6392;
  t6427 = t2502*t6334;
  t6461 = -1.*t2553*t6383;
  t6514 = t6427 + t6461;
  t6531 = -1.*t2727*t6394;
  t6533 = t2700*t6514;
  t6555 = t6531 + t6533;
  t6565 = t2700*t6394;
  t6570 = t2727*t6514;
  t6571 = t6565 + t6570;
  t6840 = -1.*t609*t572*t653;
  t6842 = -1.*t914*t653*t808;
  t6857 = t6840 + t6842;
  t6881 = -1.*t914*t609*t653;
  t6886 = t572*t653*t808;
  t6897 = t6881 + t6886;
  t6978 = -1.*t215*t60;
  t7013 = t411*t6857;
  t7026 = t6978 + t7013;
  t7041 = t1590*t6897;
  t7046 = t1314*t7026;
  t7050 = t7041 + t7046;
  t7072 = t1314*t6897;
  t7084 = -1.*t1590*t7026;
  t7097 = t7072 + t7084;
  t7103 = -1.*t2060*t7050;
  t7121 = t1937*t7097;
  t7166 = t7103 + t7121;
  t7205 = t1937*t7050;
  t7206 = t2060*t7097;
  t7210 = t7205 + t7206;
  t7227 = t2553*t7166;
  t7233 = t2502*t7210;
  t7234 = t7227 + t7233;
  t7242 = t2502*t7166;
  t7283 = -1.*t2553*t7210;
  t7311 = t7242 + t7283;
  t7335 = -1.*t2727*t7234;
  t7352 = t2700*t7311;
  t7359 = t7335 + t7352;
  t7372 = t2700*t7234;
  t7379 = t2727*t7311;
  t7398 = t7372 + t7379;
  t7679 = t609*t471;
  t7680 = -1.*t689*t653*t808;
  t7704 = t7679 + t7680;
  t7773 = t572*t7704;
  t7774 = t3945 + t7773;
  t7726 = -1.*t572*t3761;
  t7731 = t914*t7704;
  t7742 = t7726 + t7731;
  t7841 = t1590*t7742;
  t7847 = t1314*t411*t7774;
  t7865 = t7841 + t7847;
  t7880 = t1314*t7742;
  t7882 = -1.*t411*t1590*t7774;
  t7888 = t7880 + t7882;
  t7908 = -1.*t2060*t7865;
  t7911 = t1937*t7888;
  t7921 = t7908 + t7911;
  t7956 = t1937*t7865;
  t7965 = t2060*t7888;
  t7971 = t7956 + t7965;
  t7995 = t2553*t7921;
  t8004 = t2502*t7971;
  t8005 = t7995 + t8004;
  t8041 = t2502*t7921;
  t8045 = -1.*t2553*t7971;
  t8049 = t8041 + t8045;
  t8058 = -1.*t2727*t8005;
  t8064 = t2700*t8049;
  t8072 = t8058 + t8064;
  t8087 = t2700*t8005;
  t8110 = t2727*t8049;
  t8114 = t8087 + t8110;
  t8171 = t609*t471*t653;
  t8173 = -1.*t689*t808;
  t8174 = t8171 + t8173;
  t8264 = t914*t8174;
  t8268 = t572*t1142;
  t8278 = t8264 + t8268;
  t8224 = -1.*t572*t8174;
  t8229 = t8224 + t1259;
  t8300 = t1590*t8229;
  t8303 = t1314*t411*t8278;
  t8321 = t8300 + t8303;
  t8339 = t1314*t8229;
  t8350 = -1.*t411*t1590*t8278;
  t8363 = t8339 + t8350;
  t8380 = -1.*t2060*t8321;
  t8381 = t1937*t8363;
  t8391 = t8380 + t8381;
  t8409 = t1937*t8321;
  t8415 = t2060*t8363;
  t8428 = t8409 + t8415;
  t8448 = t2553*t8391;
  t8452 = t2502*t8428;
  t8463 = t8448 + t8452;
  t8473 = t2502*t8391;
  t8474 = -1.*t2553*t8428;
  t8475 = t8473 + t8474;
  t8481 = -1.*t2727*t8463;
  t8486 = t2700*t8475;
  t8495 = t8481 + t8486;
  t8504 = t2700*t8463;
  t8516 = t2727*t8475;
  t8520 = t8504 + t8516;
  t8682 = t914*t60*t609;
  t8707 = -1.*t60*t572*t808;
  t8719 = t8682 + t8707;
  t8636 = -1.*t60*t609*t572;
  t8652 = -1.*t914*t60*t808;
  t8663 = t8636 + t8652;
  t8743 = t1590*t8663;
  t8744 = t1314*t411*t8719;
  t8749 = t8743 + t8744;
  t8767 = t1314*t8663;
  t8770 = -1.*t411*t1590*t8719;
  t8776 = t8767 + t8770;
  t8780 = -1.*t2060*t8749;
  t8790 = t1937*t8776;
  t8806 = t8780 + t8790;
  t8808 = t1937*t8749;
  t8829 = t2060*t8776;
  t8849 = t8808 + t8829;
  t8875 = t2553*t8806;
  t8879 = t2502*t8849;
  t8895 = t8875 + t8879;
  t8920 = t2502*t8806;
  t8923 = -1.*t2553*t8849;
  t8928 = t8920 + t8923;
  t8938 = -1.*t2727*t8895;
  t8943 = t2700*t8928;
  t8954 = t8938 + t8943;
  t8958 = t2700*t8895;
  t8965 = t2727*t8928;
  t8975 = t8958 + t8965;
  t9085 = -1.*t914*t3870;
  t9087 = t7726 + t9085;
  t9155 = t1590*t9087;
  t9168 = t1314*t411*t3970;
  t9170 = t9155 + t9168;
  t9210 = t1314*t9087;
  t9211 = -1.*t411*t1590*t3970;
  t9217 = t9210 + t9211;
  t9227 = -1.*t2060*t9170;
  t9235 = t1937*t9217;
  t9236 = t9227 + t9235;
  t9251 = t1937*t9170;
  t9254 = t2060*t9217;
  t9267 = t9251 + t9254;
  t9278 = t2553*t9236;
  t9290 = t2502*t9267;
  t9298 = t9278 + t9290;
  t9306 = t2502*t9236;
  t9308 = -1.*t2553*t9267;
  t9315 = t9306 + t9308;
  t9330 = -1.*t2727*t9298;
  t9350 = t2700*t9315;
  t9357 = t9330 + t9350;
  t9369 = t2700*t9298;
  t9370 = t2727*t9315;
  t9378 = t9369 + t9370;
  t9468 = t689*t609;
  t9475 = t471*t653*t808;
  t9481 = t9468 + t9475;
  t9493 = -1.*t572*t9481;
  t9495 = t8264 + t9493;
  t9485 = -1.*t914*t9481;
  t9489 = t8224 + t9485;
  t9529 = t1590*t9489;
  t9573 = t1314*t411*t9495;
  t9575 = t9529 + t9573;
  t9591 = t1314*t9489;
  t9604 = -1.*t411*t1590*t9495;
  t9629 = t9591 + t9604;
  t9655 = -1.*t2060*t9575;
  t9663 = t1937*t9629;
  t9679 = t9655 + t9663;
  t9698 = t1937*t9575;
  t9718 = t2060*t9629;
  t9736 = t9698 + t9718;
  t9752 = t2553*t9679;
  t9756 = t2502*t9736;
  t9759 = t9752 + t9756;
  t9767 = t2502*t9679;
  t9768 = -1.*t2553*t9736;
  t9777 = t9767 + t9768;
  t9790 = -1.*t2727*t9759;
  t9802 = t2700*t9777;
  t9805 = t9790 + t9802;
  t9815 = t2700*t9759;
  t9824 = t2727*t9777;
  t9828 = t9815 + t9824;
  t8677 = t1597*t8663;
  t8731 = -0.1305*t215*t8719;
  t8737 = t1217*t8719;
  t8742 = t411*t1891*t8719;
  t8764 = t2075*t8749;
  t8779 = t2395*t8776;
  t8807 = t2571*t8806;
  t8861 = t2632*t8849;
  t8905 = t2771*t8895;
  t8937 = t2917*t8928;
  t8956 = t3245*t8954;
  t8989 = t3463*t8975;
  t8990 = t3113*t8954;
  t9010 = t3013*t8975;
  t9013 = t8990 + t9010;
  t9018 = -0.0216*t9013;
  t9021 = t3013*t8954;
  t9033 = -1.*t3113*t8975;
  t9039 = t9021 + t9033;
  t9042 = -1.1135*t9039;
  t4003 = -1.*t689*t60*t411;
  t4019 = t215*t3911;
  t4023 = t4003 + t4019;
  t10065 = -1.*t1937*t1590*t4023;
  t10074 = -1.*t1314*t2060*t4023;
  t10077 = t10065 + t10074;
  t10099 = t1314*t1937*t4023;
  t10106 = -1.*t1590*t2060*t4023;
  t10117 = t10099 + t10106;
  t10126 = t2553*t10077;
  t10147 = t2502*t10117;
  t10148 = t10126 + t10147;
  t10151 = t2502*t10077;
  t10156 = -1.*t2553*t10117;
  t10163 = t10151 + t10156;
  t10167 = -1.*t2727*t10148;
  t10171 = t2700*t10163;
  t10179 = t10167 + t10171;
  t10196 = t2700*t10148;
  t10205 = t2727*t10163;
  t10220 = t10196 + t10205;
  t9927 = -0.135*t215;
  t9931 = -0.049*t411;
  t9940 = t9927 + t9931;
  t9964 = 0.049*t215;
  t9967 = t9964 + t445;
  t10298 = t572*t8174;
  t10306 = t914*t9481;
  t10307 = t10298 + t10306;
  t10315 = -1.*t60*t411*t471;
  t10323 = t215*t10307;
  t10327 = t10315 + t10323;
  t10362 = -1.*t1937*t1590*t10327;
  t10369 = -1.*t1314*t2060*t10327;
  t10370 = t10362 + t10369;
  t10380 = t1314*t1937*t10327;
  t10383 = -1.*t1590*t2060*t10327;
  t10393 = t10380 + t10383;
  t10395 = t2553*t10370;
  t10396 = t2502*t10393;
  t10404 = t10395 + t10396;
  t10417 = t2502*t10370;
  t10429 = -1.*t2553*t10393;
  t10431 = t10417 + t10429;
  t10449 = -1.*t2727*t10404;
  t10453 = t2700*t10431;
  t10455 = t10449 + t10453;
  t10462 = t2700*t10404;
  t10467 = t2727*t10431;
  t10469 = t10462 + t10467;
  t10510 = t60*t609*t572;
  t10517 = t914*t60*t808;
  t10519 = t10510 + t10517;
  t10531 = t411*t653;
  t10533 = t215*t10519;
  t10537 = t10531 + t10533;
  t10557 = -1.*t1937*t1590*t10537;
  t10561 = -1.*t1314*t2060*t10537;
  t10562 = t10557 + t10561;
  t10564 = t1314*t1937*t10537;
  t10566 = -1.*t1590*t2060*t10537;
  t10568 = t10564 + t10566;
  t10576 = t2553*t10562;
  t10577 = t2502*t10568;
  t10578 = t10576 + t10577;
  t10584 = t2502*t10562;
  t10586 = -1.*t2553*t10568;
  t10589 = t10584 + t10586;
  t10596 = -1.*t2727*t10578;
  t10597 = t2700*t10589;
  t10601 = t10596 + t10597;
  t10610 = t2700*t10578;
  t10614 = t2727*t10589;
  t10615 = t10610 + t10614;
  t10666 = -1.*t1590*t3970;
  t10667 = -1.*t1314*t4125;
  t10671 = t10666 + t10667;
  t10674 = t2060*t10671;
  t10675 = t10674 + t4315;
  t10679 = t1937*t10671;
  t10681 = -1.*t2060*t4272;
  t10683 = t10679 + t10681;
  t10692 = -1.*t2553*t10675;
  t10693 = t2502*t10683;
  t10695 = t10692 + t10693;
  t10710 = t2502*t10675;
  t10711 = t2553*t10683;
  t10717 = t10710 + t10711;
  t10720 = t2727*t10695;
  t10723 = t2700*t10717;
  t10724 = t10720 + t10723;
  t10728 = t2700*t10695;
  t10732 = -1.*t2727*t10717;
  t10736 = t10728 + t10732;
  t10648 = 0.049*t1314;
  t10652 = t10648 + t1877;
  t10657 = -0.09*t1314;
  t10658 = -0.049*t1590;
  t10662 = t10657 + t10658;
  t10759 = t215*t60*t471;
  t10760 = t411*t10307;
  t10762 = t10759 + t10760;
  t10766 = -1.*t1590*t9495;
  t10768 = -1.*t1314*t10762;
  t10771 = t10766 + t10768;
  t10776 = t1314*t9495;
  t10777 = -1.*t1590*t10762;
  t10778 = t10776 + t10777;
  t10783 = t2060*t10771;
  t10784 = t1937*t10778;
  t10793 = t10783 + t10784;
  t10796 = t1937*t10771;
  t10800 = -1.*t2060*t10778;
  t10802 = t10796 + t10800;
  t10806 = -1.*t2553*t10793;
  t10807 = t2502*t10802;
  t10809 = t10806 + t10807;
  t10812 = t2502*t10793;
  t10815 = t2553*t10802;
  t10817 = t10812 + t10815;
  t10825 = t2727*t10809;
  t10826 = t2700*t10817;
  t10829 = t10825 + t10826;
  t10833 = t2700*t10809;
  t10835 = -1.*t2727*t10817;
  t10838 = t10833 + t10835;
  t10861 = -1.*t215*t653;
  t10862 = t411*t10519;
  t10863 = t10861 + t10862;
  t10866 = -1.*t1590*t8719;
  t10870 = -1.*t1314*t10863;
  t10871 = t10866 + t10870;
  t10878 = t1314*t8719;
  t10881 = -1.*t1590*t10863;
  t10884 = t10878 + t10881;
  t10888 = t2060*t10871;
  t10889 = t1937*t10884;
  t10890 = t10888 + t10889;
  t10895 = t1937*t10871;
  t10901 = -1.*t2060*t10884;
  t10902 = t10895 + t10901;
  t10906 = -1.*t2553*t10890;
  t10907 = t2502*t10902;
  t10908 = t10906 + t10907;
  t10910 = t2502*t10890;
  t10911 = t2553*t10902;
  t10914 = t10910 + t10911;
  t10917 = t2727*t10908;
  t10918 = t2700*t10914;
  t10924 = t10917 + t10918;
  t10934 = t2700*t10908;
  t10935 = -1.*t2727*t10914;
  t10938 = t10934 + t10935;
  t10974 = -1.*t1937*t4239;
  t10975 = t10974 + t10681;
  t10977 = -1.*t2553*t4329;
  t10978 = t2502*t10975;
  t10979 = t10977 + t10978;
  t10981 = t2553*t10975;
  t10982 = t4591 + t10981;
  t10986 = t2727*t10979;
  t10988 = t2700*t10982;
  t10991 = t10986 + t10988;
  t10993 = t2700*t10979;
  t10996 = -1.*t2727*t10982;
  t10997 = t10993 + t10996;
  t10960 = -0.21*t1937;
  t10962 = -0.049*t2060;
  t10963 = t10960 + t10962;
  t10966 = 0.049*t1937;
  t10967 = t10966 + t2065;
  t11012 = t1590*t9495;
  t11013 = t1314*t10762;
  t11014 = t11012 + t11013;
  t11018 = -1.*t2060*t11014;
  t11021 = t11018 + t10784;
  t11023 = -1.*t1937*t11014;
  t11024 = t11023 + t10800;
  t11027 = -1.*t2553*t11021;
  t11028 = t2502*t11024;
  t11029 = t11027 + t11028;
  t11031 = t2502*t11021;
  t11032 = t2553*t11024;
  t11033 = t11031 + t11032;
  t11035 = t2727*t11029;
  t11036 = t2700*t11033;
  t11037 = t11035 + t11036;
  t11039 = t2700*t11029;
  t11041 = -1.*t2727*t11033;
  t11042 = t11039 + t11041;
  t11060 = t1590*t8719;
  t11062 = t1314*t10863;
  t11063 = t11060 + t11062;
  t11066 = -1.*t2060*t11063;
  t11068 = t11066 + t10889;
  t11070 = -1.*t1937*t11063;
  t11071 = t11070 + t10901;
  t11074 = -1.*t2553*t11068;
  t11076 = t2502*t11071;
  t11077 = t11074 + t11076;
  t11082 = t2502*t11068;
  t11083 = t2553*t11071;
  t11085 = t11082 + t11083;
  t11087 = t2727*t11077;
  t11089 = t2700*t11085;
  t11090 = t11087 + t11089;
  t11093 = t2700*t11077;
  t11094 = -1.*t2727*t11085;
  t11096 = t11093 + t11094;
  t11122 = -1.*t2502*t4472;
  t11123 = t10977 + t11122;
  t11127 = t2727*t11123;
  t11128 = t11127 + t4682;
  t11131 = t2700*t11123;
  t11132 = -1.*t2727*t4618;
  t11133 = t11131 + t11132;
  t11109 = 0.0016*t2502;
  t11110 = t11109 + t2625;
  t11113 = -0.2707*t2502;
  t11115 = -0.0016*t2553;
  t11116 = t11113 + t11115;
  t11151 = t1937*t11014;
  t11152 = t2060*t10778;
  t11153 = t11151 + t11152;
  t11156 = -1.*t2502*t11153;
  t11157 = t11027 + t11156;
  t11159 = -1.*t2553*t11153;
  t11162 = t11031 + t11159;
  t11165 = t2727*t11157;
  t11166 = t2700*t11162;
  t11168 = t11165 + t11166;
  t11172 = t2700*t11157;
  t11173 = -1.*t2727*t11162;
  t11174 = t11172 + t11173;
  t11188 = t1937*t11063;
  t11189 = t2060*t10884;
  t11192 = t11188 + t11189;
  t11194 = -1.*t2502*t11192;
  t11196 = t11074 + t11194;
  t11200 = -1.*t2553*t11192;
  t11201 = t11082 + t11200;
  t11203 = t2727*t11196;
  t11204 = t2700*t11201;
  t11205 = t11203 + t11204;
  t11207 = t2700*t11196;
  t11208 = -1.*t2727*t11201;
  t11209 = t11207 + t11208;
  t11237 = -1.*t2700*t4564;
  t11238 = t11237 + t11132;
  t4840 = t3013*t4725;
  t11225 = -0.7055*t2700;
  t11228 = 0.0184*t2727;
  t11229 = t11225 + t11228;
  t11231 = -0.0184*t2700;
  t11232 = t11231 + t2746;
  t11249 = t2553*t11021;
  t11250 = t2502*t11153;
  t11252 = t11249 + t11250;
  t11256 = -1.*t2727*t11252;
  t11257 = t11256 + t11166;
  t11259 = -1.*t2700*t11252;
  t11261 = t11259 + t11173;
  t11279 = t2553*t11068;
  t11280 = t2502*t11192;
  t11281 = t11279 + t11280;
  t11286 = -1.*t2727*t11281;
  t11287 = t11286 + t11204;
  t11292 = -1.*t2700*t11281;
  t11293 = t11292 + t11208;
  t11240 = -1.*t3113*t4725;
  t4861 = -1.*t3113*t4750;
  t4865 = t4840 + t4861;
  t11310 = 0.0216*t3013;
  t11311 = t11310 + t3419;
  t11313 = -1.1135*t3013;
  t11314 = -0.0216*t3113;
  t11315 = t11313 + t11314;
  t11264 = -1.*t3113*t11257;
  t11325 = t2700*t11252;
  t11326 = t2727*t11162;
  t11327 = t11325 + t11326;
  t11271 = t3013*t11257;
  t11296 = -1.*t3113*t11287;
  t11338 = t2700*t11281;
  t11339 = t2727*t11201;
  t11340 = t11338 + t11339;
  t11304 = t3013*t11287;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1086*t1142 + t1217*t1298 + t1597*t1647 + t1891*t1929 + t2075*t2264 + t2395*t2494 + t2571*t2587 + t2632*t2672 + t2771*t2795 + t2917*t2965 + t3245*t3362 + t3463*t3512 - 0.0216*(t3113*t3362 + t3013*t3512) - 1.1135*(t3013*t3362 - 1.*t3113*t3512) - 1.*t447*t471*t60 - 0.1305*(t1298*t215 + t411*t471*t60) + t597*t825;
  p_output1(10)=t1086*t3870 + t1217*t3911 + t1597*t3970 - 0.1305*t4023 + t1891*t4125 + t2075*t4239 + t2395*t4272 + t2571*t4329 + t2632*t4472 + t2771*t4564 + t2917*t4618 + t3245*t4725 + t3463*t4750 - 0.0216*(t3113*t4725 + t3013*t4750) - 1.1135*t4865 + t3761*t597 + t447*t60*t689;
  p_output1(11)=0;
  p_output1(12)=t1217*t4959 + t1597*t4993 + t1891*t5121 + t2075*t5203 + t2395*t5270 + t2571*t5355 + t2632*t5392 + t2771*t5558 + t2917*t5655 + t3245*t5837 + t3463*t5923 - 0.0216*(t3113*t5837 + t3013*t5923) - 1.1135*(t3013*t5837 - 1.*t3113*t5923) + t597*t60*t609*t689 - 1.*t447*t653*t689 - 0.1305*(t215*t4959 + t411*t653*t689) + t1086*t60*t689*t808;
  p_output1(13)=t1217*t6064 + t1597*t6086 + t471*t597*t60*t609 + t1891*t6181 + t2075*t6243 + t2395*t6298 + t2571*t6334 + t2632*t6383 + t2771*t6394 + t2917*t6514 - 1.*t447*t471*t653 - 0.1305*(t215*t6064 + t411*t471*t653) + t3245*t6555 + t3463*t6571 - 0.0216*(t3113*t6555 + t3013*t6571) - 1.1135*(t3013*t6555 - 1.*t3113*t6571) + t1086*t471*t60*t808;
  p_output1(14)=-1.*t447*t60 - 1.*t597*t609*t653 + t1217*t6857 - 0.1305*(t411*t60 + t215*t6857) + t1597*t6897 + t1891*t7026 + t2075*t7050 + t2395*t7097 + t2571*t7166 + t2632*t7210 + t2771*t7234 + t2917*t7311 + t3245*t7359 + t3463*t7398 - 0.0216*(t3113*t7359 + t3013*t7398) - 1.1135*(t3013*t7359 - 1.*t3113*t7398) - 1.*t1086*t653*t808;
  p_output1(15)=t1086*t3761 + t597*t7704 + t1597*t7742 + t1217*t7774 - 0.1305*t215*t7774 + t1891*t411*t7774 + t2075*t7865 + t2395*t7888 + t2571*t7921 + t2632*t7971 + t2771*t8005 + t2917*t8049 + t3245*t8072 + t3463*t8114 - 0.0216*(t3113*t8072 + t3013*t8114) - 1.1135*(t3013*t8072 - 1.*t3113*t8114);
  p_output1(16)=t1142*t597 + t1086*t8174 + t1597*t8229 + t1217*t8278 - 0.1305*t215*t8278 + t1891*t411*t8278 + t2075*t8321 + t2395*t8363 + t2571*t8391 + t2632*t8428 + t2771*t8463 + t2917*t8475 + t3245*t8495 + t3463*t8520 - 0.0216*(t3113*t8495 + t3013*t8520) - 1.1135*(t3013*t8495 - 1.*t3113*t8520);
  p_output1(17)=t1086*t60*t609 - 1.*t597*t60*t808 + t8677 + t8731 + t8737 + t8742 + t8764 + t8779 + t8807 + t8861 + t8905 + t8937 + t8956 + t8989 + t9018 + t9042;
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=0;
  p_output1(34)=0;
  p_output1(35)=0;
  p_output1(36)=0;
  p_output1(37)=0;
  p_output1(38)=0;
  p_output1(39)=t1217*t3970 - 0.1305*t215*t3970 + t1891*t3970*t411 - 0.135*t3870*t572 + t1597*t9087 + 0.135*t3761*t914 + t2075*t9170 + t2395*t9217 + t2571*t9236 + t2632*t9267 + t2771*t9298 + t2917*t9315 + t3245*t9357 + t3463*t9378 - 0.0216*(t3113*t9357 + t3013*t9378) - 1.1135*(t3013*t9357 - 1.*t3113*t9378);
  p_output1(40)=0.135*t8174*t914 - 0.135*t572*t9481 + t1597*t9489 + t1217*t9495 - 0.1305*t215*t9495 + t1891*t411*t9495 + t2075*t9575 + t2395*t9629 + t2571*t9679 + t2632*t9736 + t2771*t9759 + t2917*t9777 + t3245*t9805 + t3463*t9828 - 0.0216*(t3113*t9805 + t3013*t9828) - 1.1135*(t3013*t9805 - 1.*t3113*t9828);
  p_output1(41)=-0.135*t572*t60*t808 + t8677 + t8731 + t8737 + t8742 + t8764 + t8779 + t8807 + t8861 + t8905 + t8937 + t8956 + t8989 + t9018 + t9042 + 0.135*t60*t609*t914;
  p_output1(42)=t10077*t2571 + t10117*t2632 + t10148*t2771 + t10163*t2917 - 0.0216*(t10220*t3013 + t10179*t3113) - 1.1135*(t10179*t3013 - 1.*t10220*t3113) + t10179*t3245 + t10220*t3463 + t1891*t4023 + t1314*t2075*t4023 - 1.*t1590*t2395*t4023 - 0.1305*(-1.*t3911*t411 - 1.*t215*t60*t689) + t60*t689*t9940 + t3911*t9967;
  p_output1(43)=t10327*t1891 + t10327*t1314*t2075 - 1.*t10327*t1590*t2395 + t10370*t2571 + t10393*t2632 + t10404*t2771 + t10431*t2917 - 0.0216*(t10469*t3013 + t10455*t3113) - 1.1135*(t10455*t3013 - 1.*t10469*t3113) + t10455*t3245 + t10469*t3463 - 0.1305*(t1893 - 1.*t10307*t411) + t471*t60*t9940 + t10307*t9967;
  p_output1(44)=t10537*t1891 + t10537*t1314*t2075 - 1.*t10537*t1590*t2395 + t10562*t2571 + t10568*t2632 + t10578*t2771 + t10589*t2917 - 0.0216*(t10615*t3013 + t10601*t3113) - 1.1135*(t10601*t3013 - 1.*t10615*t3113) + t10601*t3245 + t10615*t3463 - 0.1305*(-1.*t10519*t411 + t215*t653) - 1.*t653*t9940 + t10519*t9967;
  p_output1(45)=t10671*t2395 + t10683*t2571 + t10675*t2632 + t10717*t2771 + t10695*t2917 - 1.1135*(t10736*t3013 - 1.*t10724*t3113) - 0.0216*(t10724*t3013 + t10736*t3113) + t10736*t3245 + t10724*t3463 + t10652*t3970 + t10662*t4125 + t2075*t4272;
  p_output1(46)=t10662*t10762 + t10778*t2075 + t10771*t2395 + t10802*t2571 + t10793*t2632 + t10817*t2771 + t10809*t2917 - 1.1135*(t10838*t3013 - 1.*t10829*t3113) - 0.0216*(t10829*t3013 + t10838*t3113) + t10838*t3245 + t10829*t3463 + t10652*t9495;
  p_output1(47)=t10662*t10863 + t10884*t2075 + t10871*t2395 + t10902*t2571 + t10890*t2632 + t10914*t2771 + t10908*t2917 - 1.1135*(t10938*t3013 - 1.*t10924*t3113) - 0.0216*(t10924*t3013 + t10938*t3113) + t10938*t3245 + t10924*t3463 + t10652*t8719;
  p_output1(48)=t10975*t2571 + t10982*t2771 + t10979*t2917 - 1.1135*(t10997*t3013 - 1.*t10991*t3113) - 0.0216*(t10991*t3013 + t10997*t3113) + t10997*t3245 + t10991*t3463 + t10963*t4239 + t10967*t4272 + t2632*t4329;
  p_output1(49)=t10778*t10967 + t10963*t11014 + t11024*t2571 + t11021*t2632 + t11033*t2771 + t11029*t2917 - 1.1135*(t11042*t3013 - 1.*t11037*t3113) - 0.0216*(t11037*t3013 + t11042*t3113) + t11042*t3245 + t11037*t3463;
  p_output1(50)=t10884*t10967 + t10963*t11063 + t11071*t2571 + t11068*t2632 + t11085*t2771 + t11077*t2917 - 1.1135*(t11096*t3013 - 1.*t11090*t3113) - 0.0216*(t11090*t3013 + t11096*t3113) + t11096*t3245 + t11090*t3463;
  p_output1(51)=t11123*t2917 - 1.1135*(t11133*t3013 - 1.*t11128*t3113) - 0.0216*(t11128*t3013 + t11133*t3113) + t11133*t3245 + t11128*t3463 + t11110*t4329 + t11116*t4472 + t2771*t4618;
  p_output1(52)=t11021*t11110 + t11116*t11153 + t11162*t2771 + t11157*t2917 - 1.1135*(t11174*t3013 - 1.*t11168*t3113) - 0.0216*(t11168*t3013 + t11174*t3113) + t11174*t3245 + t11168*t3463;
  p_output1(53)=t11068*t11110 + t11116*t11192 + t11201*t2771 + t11196*t2917 - 1.1135*(t11209*t3013 - 1.*t11205*t3113) - 0.0216*(t11205*t3013 + t11209*t3113) + t11209*t3245 + t11205*t3463;
  p_output1(54)=-1.1135*(t11240 + t11238*t3013) + t11238*t3245 + t11229*t4564 + t11232*t4618 + t3463*t4725 - 0.0216*(t11238*t3113 + t4840);
  p_output1(55)=t11162*t11232 + t11229*t11252 - 1.1135*(t11264 + t11261*t3013) - 0.0216*(t11271 + t11261*t3113) + t11261*t3245 + t11257*t3463;
  p_output1(56)=t11201*t11232 + t11229*t11281 - 1.1135*(t11296 + t11293*t3013) - 0.0216*(t11304 + t11293*t3113) + t11293*t3245 + t11287*t3463;
  p_output1(57)=t11311*t4725 + t11315*t4750 - 1.1135*(t11240 - 1.*t3013*t4750) - 0.0216*t4865;
  p_output1(58)=t11257*t11311 + t11315*t11327 - 1.1135*(t11264 - 1.*t11327*t3013) - 0.0216*(t11271 - 1.*t11327*t3113);
  p_output1(59)=t11287*t11311 + t11315*t11340 - 1.1135*(t11296 - 1.*t11340*t3013) - 0.0216*(t11304 - 1.*t11340*t3113);
}


       
Eigen::Matrix<double,3,20> Jp_toe_joint_right(const Eigen::Matrix<double,20,1> &var1)
//void Jp_toe_joint_right(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,20>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



