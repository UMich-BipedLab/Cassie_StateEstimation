/*
 * Automatically Generated from Mathematica.
 * Thu 23 May 2019 13:10:02 GMT-04:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_ankle_joint_right.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  double t278;
  double t479;
  double t394;
  double t409;
  double t494;
  double t22;
  double t48;
  double t55;
  double t104;
  double t300;
  double t473;
  double t587;
  double t588;
  double t744;
  double t952;
  double t992;
  double t1009;
  double t5;
  double t1186;
  double t1254;
  double t1261;
  double t1359;
  double t1529;
  double t1559;
  double t1640;
  double t1664;
  double t1684;
  double t1689;
  double t1881;
  double t1922;
  double t1940;
  double t1945;
  double t1961;
  double t1990;
  double t2023;
  double t2079;
  double t2189;
  double t2225;
  double t2429;
  double t2449;
  double t2477;
  double t2602;
  double t2621;
  double t2686;
  double t2751;
  double t2778;
  double t2871;
  double t2874;
  double t3083;
  double t3104;
  double t3109;
  double t3145;
  double t3156;
  double t3184;
  double t3205;
  double t3383;
  double t3385;
  double t3396;
  double t3488;
  double t3628;
  double t3690;
  double t91;
  double t169;
  double t254;
  double t314;
  double t373;
  double t800;
  double t842;
  double t876;
  double t937;
  double t1080;
  double t1126;
  double t1131;
  double t4069;
  double t4082;
  double t4121;
  double t4345;
  double t4358;
  double t4391;
  double t1592;
  double t1642;
  double t1648;
  double t4418;
  double t4458;
  double t4500;
  double t1828;
  double t1833;
  double t1838;
  double t2001;
  double t2043;
  double t2050;
  double t4507;
  double t4568;
  double t4583;
  double t4907;
  double t4941;
  double t4944;
  double t2294;
  double t2307;
  double t2314;
  double t2693;
  double t2763;
  double t2775;
  double t5077;
  double t5113;
  double t5152;
  double t5229;
  double t5286;
  double t5296;
  double t2938;
  double t2942;
  double t2972;
  double t3194;
  double t3223;
  double t3252;
  double t5364;
  double t5404;
  double t5408;
  double t5453;
  double t5470;
  double t5513;
  double t3425;
  double t3482;
  double t3484;
  double t5600;
  double t5603;
  double t5647;
  double t5673;
  double t5674;
  double t5685;
  double t6238;
  double t6247;
  double t6273;
  double t6320;
  double t6411;
  double t6555;
  double t6593;
  double t6596;
  double t6602;
  double t6616;
  double t6647;
  double t6697;
  double t6738;
  double t6739;
  double t6752;
  double t6787;
  double t6790;
  double t6852;
  double t6876;
  double t6886;
  double t6903;
  double t6943;
  double t6978;
  double t6988;
  double t7026;
  double t7030;
  double t7036;
  double t7469;
  double t7482;
  double t7502;
  double t7557;
  double t7625;
  double t7638;
  double t7686;
  double t7687;
  double t7690;
  double t7711;
  double t7723;
  double t7766;
  double t7821;
  double t7825;
  double t7826;
  double t7843;
  double t7855;
  double t7868;
  double t7880;
  double t7893;
  double t7902;
  double t7925;
  double t7928;
  double t7944;
  double t7965;
  double t7983;
  double t7998;
  double t8183;
  double t8188;
  double t8191;
  double t8244;
  double t8268;
  double t8274;
  double t8332;
  double t8336;
  double t8351;
  double t8378;
  double t8380;
  double t8386;
  double t8391;
  double t8392;
  double t8402;
  double t8414;
  double t8452;
  double t8463;
  double t8469;
  double t8473;
  double t8490;
  double t8504;
  double t8516;
  double t8534;
  double t8547;
  double t8556;
  double t8568;
  double t8749;
  double t8777;
  double t8779;
  double t8808;
  double t8809;
  double t8784;
  double t8790;
  double t8791;
  double t8875;
  double t8879;
  double t8880;
  double t8905;
  double t8914;
  double t8923;
  double t8930;
  double t8938;
  double t8943;
  double t8963;
  double t8965;
  double t8970;
  double t8985;
  double t8993;
  double t9000;
  double t9018;
  double t9027;
  double t9036;
  double t9170;
  double t9189;
  double t9197;
  double t9227;
  double t9236;
  double t9239;
  double t9215;
  double t9216;
  double t9272;
  double t9278;
  double t9296;
  double t9310;
  double t9319;
  double t9346;
  double t9358;
  double t9369;
  double t9370;
  double t9378;
  double t9388;
  double t9400;
  double t9414;
  double t9416;
  double t9418;
  double t9432;
  double t9434;
  double t9440;
  double t9529;
  double t9530;
  double t9548;
  double t9498;
  double t9499;
  double t9505;
  double t9575;
  double t9578;
  double t9608;
  double t9629;
  double t9634;
  double t9640;
  double t9645;
  double t9655;
  double t9663;
  double t9687;
  double t9698;
  double t9700;
  double t9718;
  double t9725;
  double t9730;
  double t9736;
  double t9746;
  double t9748;
  double t9800;
  double t9802;
  double t9828;
  double t9833;
  double t9839;
  double t9846;
  double t9849;
  double t9853;
  double t9860;
  double t9869;
  double t9876;
  double t9881;
  double t9882;
  double t9883;
  double t9904;
  double t9910;
  double t9912;
  double t9923;
  double t9936;
  double t9938;
  double t9982;
  double t9986;
  double t9989;
  double t10013;
  double t10014;
  double t9996;
  double t9997;
  double t10053;
  double t10058;
  double t10064;
  double t10070;
  double t10071;
  double t10074;
  double t10084;
  double t10088;
  double t10092;
  double t10099;
  double t10101;
  double t10104;
  double t10106;
  double t10117;
  double t10118;
  double t10125;
  double t10127;
  double t10132;
  double t9524;
  double t9552;
  double t9564;
  double t9568;
  double t9623;
  double t9644;
  double t9667;
  double t9708;
  double t9734;
  double t9750;
  double t9751;
  double t9752;
  double t9757;
  double t9762;
  double t9764;
  double t9767;
  double t9768;
  double t9775;
  double t4742;
  double t4808;
  double t4849;
  double t10285;
  double t10293;
  double t10297;
  double t10301;
  double t10303;
  double t10304;
  double t10307;
  double t10308;
  double t10311;
  double t10315;
  double t10318;
  double t10322;
  double t10195;
  double t10196;
  double t10216;
  double t10228;
  double t10233;
  double t10362;
  double t10369;
  double t10374;
  double t10378;
  double t10383;
  double t10387;
  double t10410;
  double t10414;
  double t10416;
  double t10422;
  double t10424;
  double t10427;
  double t10431;
  double t10433;
  double t10437;
  double t10444;
  double t10445;
  double t10446;
  double t10478;
  double t10482;
  double t10483;
  double t10495;
  double t10500;
  double t10501;
  double t10511;
  double t10515;
  double t10516;
  double t10519;
  double t10520;
  double t10523;
  double t10527;
  double t10528;
  double t10529;
  double t10533;
  double t10534;
  double t10536;
  double t10573;
  double t10574;
  double t10576;
  double t10579;
  double t10580;
  double t10589;
  double t10592;
  double t10593;
  double t10598;
  double t10601;
  double t10603;
  double t10608;
  double t10610;
  double t10611;
  double t10561;
  double t10562;
  double t10564;
  double t10566;
  double t10568;
  double t10630;
  double t10631;
  double t10633;
  double t10635;
  double t10636;
  double t10637;
  double t10641;
  double t10643;
  double t10644;
  double t10648;
  double t10649;
  double t10651;
  double t10653;
  double t10654;
  double t10657;
  double t10659;
  double t10662;
  double t10663;
  double t10666;
  double t10667;
  double t10670;
  double t10682;
  double t10683;
  double t10685;
  double t10688;
  double t10691;
  double t10692;
  double t10695;
  double t10697;
  double t10700;
  double t10703;
  double t10707;
  double t10709;
  double t10711;
  double t10712;
  double t10714;
  double t10716;
  double t10717;
  double t10718;
  double t10720;
  double t10721;
  double t10722;
  double t10751;
  double t10753;
  double t10756;
  double t10757;
  double t10758;
  double t10760;
  double t10761;
  double t10739;
  double t10741;
  double t10742;
  double t10745;
  double t10747;
  double t10778;
  double t10780;
  double t10781;
  double t10786;
  double t10789;
  double t10791;
  double t10793;
  double t10795;
  double t10796;
  double t10797;
  double t10799;
  double t10800;
  double t10801;
  double t10815;
  double t10817;
  double t10822;
  double t10827;
  double t10828;
  double t10830;
  double t10832;
  double t10834;
  double t10835;
  double t10836;
  double t10839;
  double t10841;
  double t10842;
  double t10867;
  double t10868;
  double t5837;
  double t10860;
  double t10861;
  double t10863;
  double t10864;
  double t10865;
  double t10889;
  double t10890;
  double t10891;
  double t10893;
  double t10894;
  double t10896;
  double t10897;
  double t10910;
  double t10911;
  double t10913;
  double t10915;
  double t10917;
  double t10919;
  double t10921;
  double t5760;
  double t5849;
  double t10883;
  double t10937;
  double t10938;
  double t10939;
  double t10943;
  double t10944;
  double t10955;
  double t10957;
  double t10959;
  double t10900;
  double t10905;
  double t10969;
  double t10970;
  double t10971;
  double t10927;
  double t10932;
  t278 = Sin(var1[3]);
  t479 = Cos(var1[3]);
  t394 = Cos(var1[5]);
  t409 = Sin(var1[4]);
  t494 = Sin(var1[5]);
  t22 = Cos(var1[14]);
  t48 = -1.*t22;
  t55 = 1. + t48;
  t104 = Sin(var1[14]);
  t300 = Sin(var1[13]);
  t473 = -1.*t394*t278*t409;
  t587 = t479*t494;
  t588 = t473 + t587;
  t744 = Cos(var1[13]);
  t952 = -1.*t479*t394;
  t992 = -1.*t278*t409*t494;
  t1009 = t952 + t992;
  t5 = Cos(var1[4]);
  t1186 = t300*t588;
  t1254 = t744*t1009;
  t1261 = t1186 + t1254;
  t1359 = Cos(var1[15]);
  t1529 = -1.*t1359;
  t1559 = 1. + t1529;
  t1640 = Sin(var1[15]);
  t1664 = t744*t588;
  t1684 = -1.*t300*t1009;
  t1689 = t1664 + t1684;
  t1881 = -1.*t22*t5*t278;
  t1922 = t104*t1261;
  t1940 = t1881 + t1922;
  t1945 = Cos(var1[16]);
  t1961 = -1.*t1945;
  t1990 = 1. + t1961;
  t2023 = Sin(var1[16]);
  t2079 = t1640*t1689;
  t2189 = t1359*t1940;
  t2225 = t2079 + t2189;
  t2429 = t1359*t1689;
  t2449 = -1.*t1640*t1940;
  t2477 = t2429 + t2449;
  t2602 = Cos(var1[17]);
  t2621 = -1.*t2602;
  t2686 = 1. + t2621;
  t2751 = Sin(var1[17]);
  t2778 = -1.*t2023*t2225;
  t2871 = t1945*t2477;
  t2874 = t2778 + t2871;
  t3083 = t1945*t2225;
  t3104 = t2023*t2477;
  t3109 = t3083 + t3104;
  t3145 = Cos(var1[18]);
  t3156 = -1.*t3145;
  t3184 = 1. + t3156;
  t3205 = Sin(var1[18]);
  t3383 = t2751*t2874;
  t3385 = t2602*t3109;
  t3396 = t3383 + t3385;
  t3488 = t2602*t2874;
  t3628 = -1.*t2751*t3109;
  t3690 = t3488 + t3628;
  t91 = -0.049*t55;
  t169 = -0.135*t104;
  t254 = 0. + t91 + t169;
  t314 = 0.135*t300;
  t373 = 0. + t314;
  t800 = -1.*t744;
  t842 = 1. + t800;
  t876 = -0.135*t842;
  t937 = 0. + t876;
  t1080 = -0.135*t55;
  t1126 = 0.049*t104;
  t1131 = 0. + t1080 + t1126;
  t4069 = t479*t394*t409;
  t4082 = t278*t494;
  t4121 = t4069 + t4082;
  t4345 = -1.*t394*t278;
  t4358 = t479*t409*t494;
  t4391 = t4345 + t4358;
  t1592 = -0.09*t1559;
  t1642 = 0.049*t1640;
  t1648 = 0. + t1592 + t1642;
  t4418 = t300*t4121;
  t4458 = t744*t4391;
  t4500 = t4418 + t4458;
  t1828 = -0.049*t1559;
  t1833 = -0.09*t1640;
  t1838 = 0. + t1828 + t1833;
  t2001 = -0.049*t1990;
  t2043 = -0.21*t2023;
  t2050 = 0. + t2001 + t2043;
  t4507 = t744*t4121;
  t4568 = -1.*t300*t4391;
  t4583 = t4507 + t4568;
  t4907 = t22*t479*t5;
  t4941 = t104*t4500;
  t4944 = t4907 + t4941;
  t2294 = -0.21*t1990;
  t2307 = 0.049*t2023;
  t2314 = 0. + t2294 + t2307;
  t2693 = -0.2707*t2686;
  t2763 = 0.0016*t2751;
  t2775 = 0. + t2693 + t2763;
  t5077 = t1640*t4583;
  t5113 = t1359*t4944;
  t5152 = t5077 + t5113;
  t5229 = t1359*t4583;
  t5286 = -1.*t1640*t4944;
  t5296 = t5229 + t5286;
  t2938 = -0.0016*t2686;
  t2942 = -0.2707*t2751;
  t2972 = 0. + t2938 + t2942;
  t3194 = 0.0184*t3184;
  t3223 = -0.7055*t3205;
  t3252 = 0. + t3194 + t3223;
  t5364 = -1.*t2023*t5152;
  t5404 = t1945*t5296;
  t5408 = t5364 + t5404;
  t5453 = t1945*t5152;
  t5470 = t2023*t5296;
  t5513 = t5453 + t5470;
  t3425 = -0.7055*t3184;
  t3482 = -0.0184*t3205;
  t3484 = 0. + t3425 + t3482;
  t5600 = t2751*t5408;
  t5603 = t2602*t5513;
  t5647 = t5600 + t5603;
  t5673 = t2602*t5408;
  t5674 = -1.*t2751*t5513;
  t5685 = t5673 + t5674;
  t6238 = t479*t5*t394*t300;
  t6247 = t744*t479*t5*t494;
  t6273 = t6238 + t6247;
  t6320 = t744*t479*t5*t394;
  t6411 = -1.*t479*t5*t300*t494;
  t6555 = t6320 + t6411;
  t6593 = -1.*t22*t479*t409;
  t6596 = t104*t6273;
  t6602 = t6593 + t6596;
  t6616 = t1640*t6555;
  t6647 = t1359*t6602;
  t6697 = t6616 + t6647;
  t6738 = t1359*t6555;
  t6739 = -1.*t1640*t6602;
  t6752 = t6738 + t6739;
  t6787 = -1.*t2023*t6697;
  t6790 = t1945*t6752;
  t6852 = t6787 + t6790;
  t6876 = t1945*t6697;
  t6886 = t2023*t6752;
  t6903 = t6876 + t6886;
  t6943 = t2751*t6852;
  t6978 = t2602*t6903;
  t6988 = t6943 + t6978;
  t7026 = t2602*t6852;
  t7030 = -1.*t2751*t6903;
  t7036 = t7026 + t7030;
  t7469 = t5*t394*t300*t278;
  t7482 = t744*t5*t278*t494;
  t7502 = t7469 + t7482;
  t7557 = t744*t5*t394*t278;
  t7625 = -1.*t5*t300*t278*t494;
  t7638 = t7557 + t7625;
  t7686 = -1.*t22*t278*t409;
  t7687 = t104*t7502;
  t7690 = t7686 + t7687;
  t7711 = t1640*t7638;
  t7723 = t1359*t7690;
  t7766 = t7711 + t7723;
  t7821 = t1359*t7638;
  t7825 = -1.*t1640*t7690;
  t7826 = t7821 + t7825;
  t7843 = -1.*t2023*t7766;
  t7855 = t1945*t7826;
  t7868 = t7843 + t7855;
  t7880 = t1945*t7766;
  t7893 = t2023*t7826;
  t7902 = t7880 + t7893;
  t7925 = t2751*t7868;
  t7928 = t2602*t7902;
  t7944 = t7925 + t7928;
  t7965 = t2602*t7868;
  t7983 = -1.*t2751*t7902;
  t7998 = t7965 + t7983;
  t8183 = -1.*t394*t300*t409;
  t8188 = -1.*t744*t409*t494;
  t8191 = t8183 + t8188;
  t8244 = -1.*t744*t394*t409;
  t8268 = t300*t409*t494;
  t8274 = t8244 + t8268;
  t8332 = -1.*t22*t5;
  t8336 = t104*t8191;
  t8351 = t8332 + t8336;
  t8378 = t1640*t8274;
  t8380 = t1359*t8351;
  t8386 = t8378 + t8380;
  t8391 = t1359*t8274;
  t8392 = -1.*t1640*t8351;
  t8402 = t8391 + t8392;
  t8414 = -1.*t2023*t8386;
  t8452 = t1945*t8402;
  t8463 = t8414 + t8452;
  t8469 = t1945*t8386;
  t8473 = t2023*t8402;
  t8490 = t8469 + t8473;
  t8504 = t2751*t8463;
  t8516 = t2602*t8490;
  t8534 = t8504 + t8516;
  t8547 = t2602*t8463;
  t8556 = -1.*t2751*t8490;
  t8568 = t8547 + t8556;
  t8749 = t394*t278;
  t8777 = -1.*t479*t409*t494;
  t8779 = t8749 + t8777;
  t8808 = t300*t8779;
  t8809 = t4507 + t8808;
  t8784 = -1.*t300*t4121;
  t8790 = t744*t8779;
  t8791 = t8784 + t8790;
  t8875 = t1640*t8791;
  t8879 = t1359*t104*t8809;
  t8880 = t8875 + t8879;
  t8905 = t1359*t8791;
  t8914 = -1.*t104*t1640*t8809;
  t8923 = t8905 + t8914;
  t8930 = -1.*t2023*t8880;
  t8938 = t1945*t8923;
  t8943 = t8930 + t8938;
  t8963 = t1945*t8880;
  t8965 = t2023*t8923;
  t8970 = t8963 + t8965;
  t8985 = t2751*t8943;
  t8993 = t2602*t8970;
  t9000 = t8985 + t8993;
  t9018 = t2602*t8943;
  t9027 = -1.*t2751*t8970;
  t9036 = t9018 + t9027;
  t9170 = t394*t278*t409;
  t9189 = -1.*t479*t494;
  t9197 = t9170 + t9189;
  t9227 = t744*t9197;
  t9236 = t300*t1009;
  t9239 = t9227 + t9236;
  t9215 = -1.*t300*t9197;
  t9216 = t9215 + t1254;
  t9272 = t1640*t9216;
  t9278 = t1359*t104*t9239;
  t9296 = t9272 + t9278;
  t9310 = t1359*t9216;
  t9319 = -1.*t104*t1640*t9239;
  t9346 = t9310 + t9319;
  t9358 = -1.*t2023*t9296;
  t9369 = t1945*t9346;
  t9370 = t9358 + t9369;
  t9378 = t1945*t9296;
  t9388 = t2023*t9346;
  t9400 = t9378 + t9388;
  t9414 = t2751*t9370;
  t9416 = t2602*t9400;
  t9418 = t9414 + t9416;
  t9432 = t2602*t9370;
  t9434 = -1.*t2751*t9400;
  t9440 = t9432 + t9434;
  t9529 = t744*t5*t394;
  t9530 = -1.*t5*t300*t494;
  t9548 = t9529 + t9530;
  t9498 = -1.*t5*t394*t300;
  t9499 = -1.*t744*t5*t494;
  t9505 = t9498 + t9499;
  t9575 = t1640*t9505;
  t9578 = t1359*t104*t9548;
  t9608 = t9575 + t9578;
  t9629 = t1359*t9505;
  t9634 = -1.*t104*t1640*t9548;
  t9640 = t9629 + t9634;
  t9645 = -1.*t2023*t9608;
  t9655 = t1945*t9640;
  t9663 = t9645 + t9655;
  t9687 = t1945*t9608;
  t9698 = t2023*t9640;
  t9700 = t9687 + t9698;
  t9718 = t2751*t9663;
  t9725 = t2602*t9700;
  t9730 = t9718 + t9725;
  t9736 = t2602*t9663;
  t9746 = -1.*t2751*t9700;
  t9748 = t9736 + t9746;
  t9800 = -1.*t744*t4391;
  t9802 = t8784 + t9800;
  t9828 = t1640*t9802;
  t9833 = t1359*t104*t4583;
  t9839 = t9828 + t9833;
  t9846 = t1359*t9802;
  t9849 = -1.*t104*t1640*t4583;
  t9853 = t9846 + t9849;
  t9860 = -1.*t2023*t9839;
  t9869 = t1945*t9853;
  t9876 = t9860 + t9869;
  t9881 = t1945*t9839;
  t9882 = t2023*t9853;
  t9883 = t9881 + t9882;
  t9904 = t2751*t9876;
  t9910 = t2602*t9883;
  t9912 = t9904 + t9910;
  t9923 = t2602*t9876;
  t9936 = -1.*t2751*t9883;
  t9938 = t9923 + t9936;
  t9982 = t479*t394;
  t9986 = t278*t409*t494;
  t9989 = t9982 + t9986;
  t10013 = -1.*t300*t9989;
  t10014 = t9227 + t10013;
  t9996 = -1.*t744*t9989;
  t9997 = t9215 + t9996;
  t10053 = t1640*t9997;
  t10058 = t1359*t104*t10014;
  t10064 = t10053 + t10058;
  t10070 = t1359*t9997;
  t10071 = -1.*t104*t1640*t10014;
  t10074 = t10070 + t10071;
  t10084 = -1.*t2023*t10064;
  t10088 = t1945*t10074;
  t10092 = t10084 + t10088;
  t10099 = t1945*t10064;
  t10101 = t2023*t10074;
  t10104 = t10099 + t10101;
  t10106 = t2751*t10092;
  t10117 = t2602*t10104;
  t10118 = t10106 + t10117;
  t10125 = t2602*t10092;
  t10127 = -1.*t2751*t10104;
  t10132 = t10125 + t10127;
  t9524 = t1648*t9505;
  t9552 = -0.1305*t22*t9548;
  t9564 = t1131*t9548;
  t9568 = t104*t1838*t9548;
  t9623 = t2050*t9608;
  t9644 = t2314*t9640;
  t9667 = t2775*t9663;
  t9708 = t2972*t9700;
  t9734 = t3252*t9730;
  t9750 = t3484*t9748;
  t9751 = -1.*t3205*t9730;
  t9752 = t3145*t9748;
  t9757 = t9751 + t9752;
  t9762 = -0.7055*t9757;
  t9764 = t3145*t9730;
  t9767 = t3205*t9748;
  t9768 = t9764 + t9767;
  t9775 = 0.0184*t9768;
  t4742 = -1.*t479*t5*t104;
  t4808 = t22*t4500;
  t4849 = t4742 + t4808;
  t10285 = -1.*t1945*t1640*t4849;
  t10293 = -1.*t1359*t2023*t4849;
  t10297 = t10285 + t10293;
  t10301 = t1359*t1945*t4849;
  t10303 = -1.*t1640*t2023*t4849;
  t10304 = t10301 + t10303;
  t10307 = t2751*t10297;
  t10308 = t2602*t10304;
  t10311 = t10307 + t10308;
  t10315 = t2602*t10297;
  t10318 = -1.*t2751*t10304;
  t10322 = t10315 + t10318;
  t10195 = -0.135*t22;
  t10196 = -0.049*t104;
  t10216 = t10195 + t10196;
  t10228 = 0.049*t22;
  t10233 = t10228 + t169;
  t10362 = t300*t9197;
  t10369 = t744*t9989;
  t10374 = t10362 + t10369;
  t10378 = -1.*t5*t104*t278;
  t10383 = t22*t10374;
  t10387 = t10378 + t10383;
  t10410 = -1.*t1945*t1640*t10387;
  t10414 = -1.*t1359*t2023*t10387;
  t10416 = t10410 + t10414;
  t10422 = t1359*t1945*t10387;
  t10424 = -1.*t1640*t2023*t10387;
  t10427 = t10422 + t10424;
  t10431 = t2751*t10416;
  t10433 = t2602*t10427;
  t10437 = t10431 + t10433;
  t10444 = t2602*t10416;
  t10445 = -1.*t2751*t10427;
  t10446 = t10444 + t10445;
  t10478 = t5*t394*t300;
  t10482 = t744*t5*t494;
  t10483 = t10478 + t10482;
  t10495 = t104*t409;
  t10500 = t22*t10483;
  t10501 = t10495 + t10500;
  t10511 = -1.*t1945*t1640*t10501;
  t10515 = -1.*t1359*t2023*t10501;
  t10516 = t10511 + t10515;
  t10519 = t1359*t1945*t10501;
  t10520 = -1.*t1640*t2023*t10501;
  t10523 = t10519 + t10520;
  t10527 = t2751*t10516;
  t10528 = t2602*t10523;
  t10529 = t10527 + t10528;
  t10533 = t2602*t10516;
  t10534 = -1.*t2751*t10523;
  t10536 = t10533 + t10534;
  t10573 = -1.*t1640*t4583;
  t10574 = -1.*t1359*t4944;
  t10576 = t10573 + t10574;
  t10579 = t2023*t10576;
  t10580 = t10579 + t5404;
  t10589 = t1945*t10576;
  t10592 = -1.*t2023*t5296;
  t10593 = t10589 + t10592;
  t10598 = -1.*t2751*t10580;
  t10601 = t2602*t10593;
  t10603 = t10598 + t10601;
  t10608 = t2602*t10580;
  t10610 = t2751*t10593;
  t10611 = t10608 + t10610;
  t10561 = 0.049*t1359;
  t10562 = t10561 + t1833;
  t10564 = -0.09*t1359;
  t10566 = -0.049*t1640;
  t10568 = t10564 + t10566;
  t10630 = t22*t5*t278;
  t10631 = t104*t10374;
  t10633 = t10630 + t10631;
  t10635 = -1.*t1640*t10014;
  t10636 = -1.*t1359*t10633;
  t10637 = t10635 + t10636;
  t10641 = t1359*t10014;
  t10643 = -1.*t1640*t10633;
  t10644 = t10641 + t10643;
  t10648 = t2023*t10637;
  t10649 = t1945*t10644;
  t10651 = t10648 + t10649;
  t10653 = t1945*t10637;
  t10654 = -1.*t2023*t10644;
  t10657 = t10653 + t10654;
  t10659 = -1.*t2751*t10651;
  t10662 = t2602*t10657;
  t10663 = t10659 + t10662;
  t10666 = t2602*t10651;
  t10667 = t2751*t10657;
  t10670 = t10666 + t10667;
  t10682 = -1.*t22*t409;
  t10683 = t104*t10483;
  t10685 = t10682 + t10683;
  t10688 = -1.*t1640*t9548;
  t10691 = -1.*t1359*t10685;
  t10692 = t10688 + t10691;
  t10695 = t1359*t9548;
  t10697 = -1.*t1640*t10685;
  t10700 = t10695 + t10697;
  t10703 = t2023*t10692;
  t10707 = t1945*t10700;
  t10709 = t10703 + t10707;
  t10711 = t1945*t10692;
  t10712 = -1.*t2023*t10700;
  t10714 = t10711 + t10712;
  t10716 = -1.*t2751*t10709;
  t10717 = t2602*t10714;
  t10718 = t10716 + t10717;
  t10720 = t2602*t10709;
  t10721 = t2751*t10714;
  t10722 = t10720 + t10721;
  t10751 = -1.*t1945*t5152;
  t10753 = t10751 + t10592;
  t10756 = -1.*t2751*t5408;
  t10757 = t2602*t10753;
  t10758 = t10756 + t10757;
  t10760 = t2751*t10753;
  t10761 = t5673 + t10760;
  t10739 = -0.21*t1945;
  t10741 = -0.049*t2023;
  t10742 = t10739 + t10741;
  t10745 = 0.049*t1945;
  t10747 = t10745 + t2043;
  t10778 = t1640*t10014;
  t10780 = t1359*t10633;
  t10781 = t10778 + t10780;
  t10786 = -1.*t2023*t10781;
  t10789 = t10786 + t10649;
  t10791 = -1.*t1945*t10781;
  t10793 = t10791 + t10654;
  t10795 = -1.*t2751*t10789;
  t10796 = t2602*t10793;
  t10797 = t10795 + t10796;
  t10799 = t2602*t10789;
  t10800 = t2751*t10793;
  t10801 = t10799 + t10800;
  t10815 = t1640*t9548;
  t10817 = t1359*t10685;
  t10822 = t10815 + t10817;
  t10827 = -1.*t2023*t10822;
  t10828 = t10827 + t10707;
  t10830 = -1.*t1945*t10822;
  t10832 = t10830 + t10712;
  t10834 = -1.*t2751*t10828;
  t10835 = t2602*t10832;
  t10836 = t10834 + t10835;
  t10839 = t2602*t10828;
  t10841 = t2751*t10832;
  t10842 = t10839 + t10841;
  t10867 = -1.*t2602*t5513;
  t10868 = t10756 + t10867;
  t5837 = t3145*t5685;
  t10860 = 0.0016*t2602;
  t10861 = t10860 + t2942;
  t10863 = -0.2707*t2602;
  t10864 = -0.0016*t2751;
  t10865 = t10863 + t10864;
  t10889 = t1945*t10781;
  t10890 = t2023*t10644;
  t10891 = t10889 + t10890;
  t10893 = -1.*t2602*t10891;
  t10894 = t10795 + t10893;
  t10896 = -1.*t2751*t10891;
  t10897 = t10799 + t10896;
  t10910 = t1945*t10822;
  t10911 = t2023*t10700;
  t10913 = t10910 + t10911;
  t10915 = -1.*t2602*t10913;
  t10917 = t10834 + t10915;
  t10919 = -1.*t2751*t10913;
  t10921 = t10839 + t10919;
  t5760 = -1.*t3205*t5647;
  t5849 = t5760 + t5837;
  t10883 = -1.*t3205*t5685;
  t10937 = -0.7055*t3145;
  t10938 = 0.0184*t3205;
  t10939 = t10937 + t10938;
  t10943 = -0.0184*t3145;
  t10944 = t10943 + t3223;
  t10955 = t2751*t10789;
  t10957 = t2602*t10891;
  t10959 = t10955 + t10957;
  t10900 = t3145*t10897;
  t10905 = -1.*t3205*t10897;
  t10969 = t2751*t10828;
  t10970 = t2602*t10913;
  t10971 = t10969 + t10970;
  t10927 = t3145*t10921;
  t10932 = -1.*t3205*t10921;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1131*t1261 + t1648*t1689 + t1838*t1940 + t2050*t2225 + t2314*t2477 + t2775*t2874 + t2972*t3109 + t3252*t3396 + t3484*t3690 - 0.7055*(-1.*t3205*t3396 + t3145*t3690) + 0.0184*(t3145*t3396 + t3205*t3690) - 1.*t254*t278*t5 - 0.1305*(t1261*t22 + t104*t278*t5) + t373*t588 + t1009*t937;
  p_output1(10)=t373*t4121 + t1131*t4500 + t1648*t4583 - 0.1305*t4849 + t1838*t4944 + t254*t479*t5 + t2050*t5152 + t2314*t5296 + t2775*t5408 + t2972*t5513 + t3252*t5647 + t3484*t5685 + 0.0184*(t3145*t5647 + t3205*t5685) - 0.7055*t5849 + t4391*t937;
  p_output1(11)=0;
  p_output1(12)=-1.*t254*t409*t479 + t373*t394*t479*t5 + t1131*t6273 - 0.1305*(t104*t409*t479 + t22*t6273) + t1648*t6555 + t1838*t6602 + t2050*t6697 + t2314*t6752 + t2775*t6852 + t2972*t6903 + t3252*t6988 + t3484*t7036 - 0.7055*(-1.*t3205*t6988 + t3145*t7036) + 0.0184*(t3145*t6988 + t3205*t7036) + t479*t494*t5*t937;
  p_output1(13)=-1.*t254*t278*t409 + t278*t373*t394*t5 + t1131*t7502 - 0.1305*(t104*t278*t409 + t22*t7502) + t1648*t7638 + t1838*t7690 + t2050*t7766 + t2314*t7826 + t2775*t7868 + t2972*t7902 + t3252*t7944 + t3484*t7998 - 0.7055*(-1.*t3205*t7944 + t3145*t7998) + 0.0184*(t3145*t7944 + t3205*t7998) + t278*t494*t5*t937;
  p_output1(14)=-1.*t373*t394*t409 - 1.*t254*t5 + t1131*t8191 - 0.1305*(t104*t5 + t22*t8191) + t1648*t8274 + t1838*t8351 + t2050*t8386 + t2314*t8402 + t2775*t8463 + t2972*t8490 + t3252*t8534 + t3484*t8568 - 0.7055*(-1.*t3205*t8534 + t3145*t8568) + 0.0184*(t3145*t8534 + t3205*t8568) - 1.*t409*t494*t937;
  p_output1(15)=t373*t8779 + t1648*t8791 + t1131*t8809 + t104*t1838*t8809 - 0.1305*t22*t8809 + t2050*t8880 + t2314*t8923 + t2775*t8943 + t2972*t8970 + t3252*t9000 + t3484*t9036 - 0.7055*(-1.*t3205*t9000 + t3145*t9036) + 0.0184*(t3145*t9000 + t3205*t9036) + t4121*t937;
  p_output1(16)=t1009*t373 + t1648*t9216 + t1131*t9239 + t104*t1838*t9239 - 0.1305*t22*t9239 + t2050*t9296 + t2314*t9346 + t9197*t937 + t2775*t9370 + t2972*t9400 + t3252*t9418 + t3484*t9440 - 0.7055*(-1.*t3205*t9418 + t3145*t9440) + 0.0184*(t3145*t9418 + t3205*t9440);
  p_output1(17)=-1.*t373*t494*t5 + t394*t5*t937 + t9524 + t9552 + t9564 + t9568 + t9623 + t9644 + t9667 + t9708 + t9734 + t9750 + t9762 + t9775;
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=0;
  p_output1(34)=0;
  p_output1(35)=0;
  p_output1(36)=0;
  p_output1(37)=0;
  p_output1(38)=0;
  p_output1(39)=-0.135*t300*t4391 + t1131*t4583 + t104*t1838*t4583 - 0.1305*t22*t4583 + 0.135*t4121*t744 + t1648*t9802 + t2050*t9839 + t2314*t9853 + t2775*t9876 + t2972*t9883 + t3252*t9912 + t3484*t9938 - 0.7055*(-1.*t3205*t9912 + t3145*t9938) + 0.0184*(t3145*t9912 + t3205*t9938);
  p_output1(40)=t10014*t1131 + t10014*t104*t1838 + t10064*t2050 - 0.1305*t10014*t22 + t10074*t2314 + t10092*t2775 + t10104*t2972 - 0.7055*(t10132*t3145 - 1.*t10118*t3205) + 0.0184*(t10118*t3145 + t10132*t3205) + t10118*t3252 + t10132*t3484 + 0.135*t744*t9197 - 0.135*t300*t9989 + t1648*t9997;
  p_output1(41)=-0.135*t300*t494*t5 + 0.135*t394*t5*t744 + t9524 + t9552 + t9564 + t9568 + t9623 + t9644 + t9667 + t9708 + t9734 + t9750 + t9762 + t9775;
  p_output1(42)=t10297*t2775 + t10304*t2972 - 0.7055*(t10322*t3145 - 1.*t10311*t3205) + 0.0184*(t10311*t3145 + t10322*t3205) + t10311*t3252 + t10322*t3484 + t10233*t4500 + t1838*t4849 + t1359*t2050*t4849 - 1.*t1640*t2314*t4849 + t10216*t479*t5 - 0.1305*(-1.*t104*t4500 - 1.*t22*t479*t5);
  p_output1(43)=t10233*t10374 + t10387*t1838 - 0.1305*(-1.*t10374*t104 + t1881) + t10387*t1359*t2050 - 1.*t10387*t1640*t2314 + t10416*t2775 + t10427*t2972 - 0.7055*(t10446*t3145 - 1.*t10437*t3205) + 0.0184*(t10437*t3145 + t10446*t3205) + t10437*t3252 + t10446*t3484 + t10216*t278*t5;
  p_output1(44)=t10233*t10483 + t10501*t1838 + t10501*t1359*t2050 - 1.*t10501*t1640*t2314 + t10516*t2775 + t10523*t2972 - 0.7055*(t10536*t3145 - 1.*t10529*t3205) + 0.0184*(t10529*t3145 + t10536*t3205) + t10529*t3252 + t10536*t3484 - 1.*t10216*t409 - 0.1305*(-1.*t104*t10483 + t22*t409);
  p_output1(45)=t10576*t2314 + t10593*t2775 + t10580*t2972 + 0.0184*(t10611*t3145 + t10603*t3205) - 0.7055*(t10603*t3145 - 1.*t10611*t3205) + t10611*t3252 + t10603*t3484 + t10562*t4583 + t10568*t4944 + t2050*t5296;
  p_output1(46)=t10014*t10562 + t10568*t10633 + t10644*t2050 + t10637*t2314 + t10657*t2775 + t10651*t2972 + 0.0184*(t10670*t3145 + t10663*t3205) - 0.7055*(t10663*t3145 - 1.*t10670*t3205) + t10670*t3252 + t10663*t3484;
  p_output1(47)=t10568*t10685 + t10700*t2050 + t10692*t2314 + t10714*t2775 + t10709*t2972 + 0.0184*(t10722*t3145 + t10718*t3205) - 0.7055*(t10718*t3145 - 1.*t10722*t3205) + t10722*t3252 + t10718*t3484 + t10562*t9548;
  p_output1(48)=t10753*t2775 + 0.0184*(t10761*t3145 + t10758*t3205) - 0.7055*(t10758*t3145 - 1.*t10761*t3205) + t10761*t3252 + t10758*t3484 + t10742*t5152 + t10747*t5296 + t2972*t5408;
  p_output1(49)=t10644*t10747 + t10742*t10781 + t10793*t2775 + t10789*t2972 + 0.0184*(t10801*t3145 + t10797*t3205) - 0.7055*(t10797*t3145 - 1.*t10801*t3205) + t10801*t3252 + t10797*t3484;
  p_output1(50)=t10700*t10747 + t10742*t10822 + t10832*t2775 + t10828*t2972 + 0.0184*(t10842*t3145 + t10836*t3205) - 0.7055*(t10836*t3145 - 1.*t10842*t3205) + t10842*t3252 + t10836*t3484;
  p_output1(51)=-0.7055*(t10883 + t10868*t3145) + t10868*t3484 + t10861*t5408 + t10865*t5513 + t3252*t5685 + 0.0184*(t10868*t3205 + t5837);
  p_output1(52)=t10789*t10861 + t10865*t10891 - 0.7055*(t10905 + t10894*t3145) + 0.0184*(t10900 + t10894*t3205) + t10897*t3252 + t10894*t3484;
  p_output1(53)=t10828*t10861 + t10865*t10913 - 0.7055*(t10932 + t10917*t3145) + 0.0184*(t10927 + t10917*t3205) + t10921*t3252 + t10917*t3484;
  p_output1(54)=t10939*t5647 - 0.7055*(t10883 - 1.*t3145*t5647) + t10944*t5685 + 0.0184*t5849;
  p_output1(55)=t10897*t10944 + t10939*t10959 - 0.7055*(t10905 - 1.*t10959*t3145) + 0.0184*(t10900 - 1.*t10959*t3205);
  p_output1(56)=t10921*t10944 + t10939*t10971 - 0.7055*(t10932 - 1.*t10971*t3145) + 0.0184*(t10927 - 1.*t10971*t3205);
  p_output1(57)=0;
  p_output1(58)=0;
  p_output1(59)=0;
}


       
Eigen::Matrix<double,3,20> Jp_ankle_joint_right(const Eigen::Matrix<double,20,1> &var1)
//void Jp_ankle_joint_right(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,20>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



