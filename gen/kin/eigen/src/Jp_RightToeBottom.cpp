/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 22:44:47 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_RightToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  double t488;
  double t826;
  double t768;
  double t787;
  double t840;
  double t67;
  double t234;
  double t267;
  double t360;
  double t542;
  double t795;
  double t867;
  double t903;
  double t944;
  double t1088;
  double t1096;
  double t1100;
  double t36;
  double t1207;
  double t1245;
  double t1251;
  double t1276;
  double t1279;
  double t1284;
  double t1348;
  double t1568;
  double t1577;
  double t1603;
  double t1916;
  double t1944;
  double t1970;
  double t2013;
  double t2035;
  double t2036;
  double t2128;
  double t2239;
  double t2247;
  double t2274;
  double t2547;
  double t2626;
  double t2657;
  double t2665;
  double t2686;
  double t2695;
  double t2711;
  double t2781;
  double t2796;
  double t2830;
  double t2977;
  double t3002;
  double t3033;
  double t3064;
  double t3085;
  double t3092;
  double t3130;
  double t3199;
  double t3267;
  double t3278;
  double t3353;
  double t3380;
  double t3410;
  double t3441;
  double t3464;
  double t3493;
  double t3558;
  double t3580;
  double t3598;
  double t3615;
  double t3678;
  double t3679;
  double t3699;
  double t273;
  double t376;
  double t416;
  double t580;
  double t657;
  double t949;
  double t988;
  double t1050;
  double t1069;
  double t1158;
  double t1159;
  double t1169;
  double t4098;
  double t4099;
  double t4100;
  double t4175;
  double t4177;
  double t4189;
  double t1305;
  double t1427;
  double t1533;
  double t4202;
  double t4205;
  double t4207;
  double t1878;
  double t1901;
  double t1905;
  double t2053;
  double t2144;
  double t2206;
  double t4237;
  double t4238;
  double t4267;
  double t4359;
  double t4364;
  double t4365;
  double t2328;
  double t2380;
  double t2382;
  double t2698;
  double t2715;
  double t2739;
  double t4379;
  double t4406;
  double t4412;
  double t4430;
  double t4431;
  double t4463;
  double t2845;
  double t2850;
  double t2955;
  double t3118;
  double t3134;
  double t3143;
  double t4472;
  double t4482;
  double t4497;
  double t4517;
  double t4528;
  double t4537;
  double t3292;
  double t3316;
  double t3341;
  double t3541;
  double t3575;
  double t3578;
  double t4587;
  double t4588;
  double t4605;
  double t4637;
  double t4641;
  double t4647;
  double t3640;
  double t3643;
  double t3650;
  double t4651;
  double t4654;
  double t4659;
  double t4684;
  double t4692;
  double t4714;
  double t4852;
  double t4853;
  double t4857;
  double t4866;
  double t4873;
  double t4876;
  double t4987;
  double t4991;
  double t4992;
  double t5014;
  double t5037;
  double t5040;
  double t5059;
  double t5066;
  double t5071;
  double t5081;
  double t5082;
  double t5113;
  double t5124;
  double t5130;
  double t5143;
  double t5148;
  double t5160;
  double t5169;
  double t5171;
  double t5178;
  double t5184;
  double t5189;
  double t5194;
  double t5197;
  double t5209;
  double t5211;
  double t5226;
  double t5300;
  double t5301;
  double t5308;
  double t5310;
  double t5312;
  double t5315;
  double t5379;
  double t5381;
  double t5393;
  double t5408;
  double t5409;
  double t5425;
  double t5429;
  double t5436;
  double t5440;
  double t5462;
  double t5463;
  double t5464;
  double t5468;
  double t5474;
  double t5482;
  double t5491;
  double t5493;
  double t5495;
  double t5505;
  double t5509;
  double t5510;
  double t5521;
  double t5532;
  double t5544;
  double t5549;
  double t5551;
  double t5552;
  double t5636;
  double t5641;
  double t5645;
  double t5655;
  double t5658;
  double t5660;
  double t5693;
  double t5708;
  double t5717;
  double t5726;
  double t5727;
  double t5730;
  double t5749;
  double t5766;
  double t5771;
  double t5779;
  double t5786;
  double t5789;
  double t5797;
  double t5799;
  double t5804;
  double t5813;
  double t5819;
  double t5823;
  double t5841;
  double t5842;
  double t5845;
  double t5855;
  double t5856;
  double t5861;
  double t5868;
  double t5870;
  double t5874;
  double t5920;
  double t5921;
  double t5930;
  double t5968;
  double t5980;
  double t5948;
  double t5949;
  double t5956;
  double t5991;
  double t5994;
  double t6008;
  double t6022;
  double t6023;
  double t6031;
  double t6045;
  double t6056;
  double t6058;
  double t6061;
  double t6065;
  double t6066;
  double t6069;
  double t6070;
  double t6072;
  double t6082;
  double t6083;
  double t6084;
  double t6092;
  double t6094;
  double t6101;
  double t6130;
  double t6131;
  double t6139;
  double t6193;
  double t6198;
  double t6200;
  double t6225;
  double t6230;
  double t6232;
  double t6215;
  double t6216;
  double t6246;
  double t6249;
  double t6254;
  double t6261;
  double t6290;
  double t6293;
  double t6298;
  double t6312;
  double t6320;
  double t6340;
  double t6343;
  double t6347;
  double t6353;
  double t6362;
  double t6364;
  double t6378;
  double t6383;
  double t6385;
  double t6398;
  double t6404;
  double t6411;
  double t6424;
  double t6431;
  double t6446;
  double t6572;
  double t6574;
  double t6578;
  double t6531;
  double t6533;
  double t6555;
  double t6594;
  double t6603;
  double t6606;
  double t6614;
  double t6635;
  double t6642;
  double t6648;
  double t6649;
  double t6657;
  double t6663;
  double t6665;
  double t6666;
  double t6678;
  double t6681;
  double t6687;
  double t6691;
  double t6693;
  double t6696;
  double t6702;
  double t6706;
  double t6708;
  double t6737;
  double t6748;
  double t6751;
  double t6810;
  double t6821;
  double t6855;
  double t6858;
  double t6870;
  double t6872;
  double t6877;
  double t6887;
  double t6895;
  double t6896;
  double t6908;
  double t6918;
  double t6928;
  double t6940;
  double t6949;
  double t6957;
  double t6959;
  double t6963;
  double t6968;
  double t6972;
  double t6992;
  double t7013;
  double t7023;
  double t7035;
  double t7044;
  double t7048;
  double t7097;
  double t7102;
  double t7119;
  double t7142;
  double t7146;
  double t7125;
  double t7132;
  double t7184;
  double t7185;
  double t7186;
  double t7194;
  double t7207;
  double t7219;
  double t7231;
  double t7237;
  double t7242;
  double t7254;
  double t7255;
  double t7256;
  double t7266;
  double t7269;
  double t7280;
  double t7296;
  double t7299;
  double t7306;
  double t7318;
  double t7321;
  double t7334;
  double t7341;
  double t7348;
  double t7349;
  double t6563;
  double t6586;
  double t6592;
  double t6593;
  double t6608;
  double t6643;
  double t6662;
  double t6677;
  double t6690;
  double t6700;
  double t6727;
  double t6757;
  double t6759;
  double t6762;
  double t6763;
  double t6767;
  double t6773;
  double t6776;
  double t6783;
  double t6785;
  double t4339;
  double t4343;
  double t4353;
  double t7510;
  double t7515;
  double t7526;
  double t7538;
  double t7541;
  double t7547;
  double t7559;
  double t7560;
  double t7565;
  double t7579;
  double t7594;
  double t7595;
  double t7610;
  double t7632;
  double t7637;
  double t7649;
  double t7650;
  double t7656;
  double t7412;
  double t7416;
  double t7417;
  double t7427;
  double t7428;
  double t7703;
  double t7704;
  double t7706;
  double t7708;
  double t7711;
  double t7719;
  double t7757;
  double t7762;
  double t7775;
  double t7780;
  double t7781;
  double t7787;
  double t7807;
  double t7808;
  double t7817;
  double t7845;
  double t7849;
  double t7866;
  double t7882;
  double t7889;
  double t7891;
  double t7900;
  double t7901;
  double t7903;
  double t7965;
  double t7972;
  double t7976;
  double t7984;
  double t7985;
  double t7989;
  double t8020;
  double t8029;
  double t8037;
  double t8043;
  double t8053;
  double t8056;
  double t8070;
  double t8079;
  double t8092;
  double t8103;
  double t8109;
  double t8113;
  double t8121;
  double t8122;
  double t8126;
  double t8129;
  double t8135;
  double t8136;
  double t8214;
  double t8215;
  double t8216;
  double t8222;
  double t8226;
  double t8232;
  double t8239;
  double t8242;
  double t8244;
  double t8246;
  double t8250;
  double t8271;
  double t8280;
  double t8282;
  double t8289;
  double t8298;
  double t8301;
  double t8312;
  double t8314;
  double t8317;
  double t8185;
  double t8188;
  double t8193;
  double t8197;
  double t8199;
  double t8411;
  double t8412;
  double t8419;
  double t8425;
  double t8432;
  double t8433;
  double t8448;
  double t8453;
  double t8454;
  double t8465;
  double t8473;
  double t8474;
  double t8484;
  double t8487;
  double t8495;
  double t8511;
  double t8514;
  double t8531;
  double t8537;
  double t8551;
  double t8553;
  double t8573;
  double t8577;
  double t8586;
  double t8600;
  double t8607;
  double t8608;
  double t8642;
  double t8646;
  double t8652;
  double t8664;
  double t8674;
  double t8677;
  double t8686;
  double t8691;
  double t8693;
  double t8697;
  double t8711;
  double t8718;
  double t8722;
  double t8730;
  double t8736;
  double t8742;
  double t8751;
  double t8753;
  double t8773;
  double t8777;
  double t8780;
  double t8790;
  double t8798;
  double t8799;
  double t8812;
  double t8816;
  double t8819;
  double t8905;
  double t8906;
  double t8908;
  double t8913;
  double t8914;
  double t8919;
  double t8923;
  double t8946;
  double t8950;
  double t8952;
  double t8984;
  double t8988;
  double t8991;
  double t8868;
  double t8869;
  double t8871;
  double t8881;
  double t8886;
  double t9061;
  double t9074;
  double t9078;
  double t9085;
  double t9086;
  double t9094;
  double t9101;
  double t9106;
  double t9123;
  double t9125;
  double t9149;
  double t9157;
  double t9160;
  double t9172;
  double t9174;
  double t9178;
  double t9191;
  double t9202;
  double t9207;
  double t9282;
  double t9290;
  double t9291;
  double t9305;
  double t9307;
  double t9309;
  double t9310;
  double t9318;
  double t9319;
  double t9320;
  double t9332;
  double t9340;
  double t9361;
  double t9373;
  double t9391;
  double t9393;
  double t9416;
  double t9420;
  double t9428;
  double t9542;
  double t9550;
  double t9568;
  double t9570;
  double t9572;
  double t9577;
  double t9582;
  double t9494;
  double t9499;
  double t9531;
  double t9535;
  double t9537;
  double t9631;
  double t9640;
  double t9641;
  double t9647;
  double t9653;
  double t9663;
  double t9665;
  double t9675;
  double t9682;
  double t9689;
  double t9696;
  double t9701;
  double t9702;
  double t9775;
  double t9786;
  double t9787;
  double t9796;
  double t9797;
  double t9812;
  double t9817;
  double t9833;
  double t9847;
  double t9849;
  double t9860;
  double t9863;
  double t9865;
  double t9988;
  double t9994;
  double t4782;
  double t9926;
  double t9928;
  double t9937;
  double t9963;
  double t9965;
  double t10059;
  double t10064;
  double t10065;
  double t10074;
  double t10079;
  double t10084;
  double t10085;
  double t10123;
  double t10126;
  double t10132;
  double t10141;
  double t10148;
  double t10156;
  double t10163;
  double t10007;
  double t4786;
  double t4801;
  double t10265;
  double t10272;
  double t10280;
  double t10283;
  double t10284;
  double t10095;
  double t10332;
  double t10333;
  double t10334;
  double t10111;
  double t10187;
  double t10420;
  double t10436;
  double t10463;
  double t10220;
  t488 = Sin(var1[3]);
  t826 = Cos(var1[3]);
  t768 = Cos(var1[5]);
  t787 = Sin(var1[4]);
  t840 = Sin(var1[5]);
  t67 = Cos(var1[14]);
  t234 = -1.*t67;
  t267 = 1. + t234;
  t360 = Sin(var1[14]);
  t542 = Sin(var1[13]);
  t795 = -1.*t768*t488*t787;
  t867 = t826*t840;
  t903 = t795 + t867;
  t944 = Cos(var1[13]);
  t1088 = -1.*t826*t768;
  t1096 = -1.*t488*t787*t840;
  t1100 = t1088 + t1096;
  t36 = Cos(var1[4]);
  t1207 = t542*t903;
  t1245 = t944*t1100;
  t1251 = t1207 + t1245;
  t1276 = Cos(var1[15]);
  t1279 = -1.*t1276;
  t1284 = 1. + t1279;
  t1348 = Sin(var1[15]);
  t1568 = t944*t903;
  t1577 = -1.*t542*t1100;
  t1603 = t1568 + t1577;
  t1916 = -1.*t67*t36*t488;
  t1944 = t360*t1251;
  t1970 = t1916 + t1944;
  t2013 = Cos(var1[16]);
  t2035 = -1.*t2013;
  t2036 = 1. + t2035;
  t2128 = Sin(var1[16]);
  t2239 = t1348*t1603;
  t2247 = t1276*t1970;
  t2274 = t2239 + t2247;
  t2547 = t1276*t1603;
  t2626 = -1.*t1348*t1970;
  t2657 = t2547 + t2626;
  t2665 = Cos(var1[17]);
  t2686 = -1.*t2665;
  t2695 = 1. + t2686;
  t2711 = Sin(var1[17]);
  t2781 = -1.*t2128*t2274;
  t2796 = t2013*t2657;
  t2830 = t2781 + t2796;
  t2977 = t2013*t2274;
  t3002 = t2128*t2657;
  t3033 = t2977 + t3002;
  t3064 = Cos(var1[18]);
  t3085 = -1.*t3064;
  t3092 = 1. + t3085;
  t3130 = Sin(var1[18]);
  t3199 = t2711*t2830;
  t3267 = t2665*t3033;
  t3278 = t3199 + t3267;
  t3353 = t2665*t2830;
  t3380 = -1.*t2711*t3033;
  t3410 = t3353 + t3380;
  t3441 = Cos(var1[19]);
  t3464 = -1.*t3441;
  t3493 = 1. + t3464;
  t3558 = Sin(var1[19]);
  t3580 = -1.*t3130*t3278;
  t3598 = t3064*t3410;
  t3615 = t3580 + t3598;
  t3678 = t3064*t3278;
  t3679 = t3130*t3410;
  t3699 = t3678 + t3679;
  t273 = -0.049*t267;
  t376 = -0.135*t360;
  t416 = 0. + t273 + t376;
  t580 = 0.135*t542;
  t657 = 0. + t580;
  t949 = -1.*t944;
  t988 = 1. + t949;
  t1050 = -0.135*t988;
  t1069 = 0. + t1050;
  t1158 = -0.135*t267;
  t1159 = 0.049*t360;
  t1169 = 0. + t1158 + t1159;
  t4098 = t826*t768*t787;
  t4099 = t488*t840;
  t4100 = t4098 + t4099;
  t4175 = -1.*t768*t488;
  t4177 = t826*t787*t840;
  t4189 = t4175 + t4177;
  t1305 = -0.09*t1284;
  t1427 = 0.049*t1348;
  t1533 = 0. + t1305 + t1427;
  t4202 = t542*t4100;
  t4205 = t944*t4189;
  t4207 = t4202 + t4205;
  t1878 = -0.049*t1284;
  t1901 = -0.09*t1348;
  t1905 = 0. + t1878 + t1901;
  t2053 = -0.049*t2036;
  t2144 = -0.21*t2128;
  t2206 = 0. + t2053 + t2144;
  t4237 = t944*t4100;
  t4238 = -1.*t542*t4189;
  t4267 = t4237 + t4238;
  t4359 = t67*t826*t36;
  t4364 = t360*t4207;
  t4365 = t4359 + t4364;
  t2328 = -0.21*t2036;
  t2380 = 0.049*t2128;
  t2382 = 0. + t2328 + t2380;
  t2698 = -0.2707*t2695;
  t2715 = 0.0016*t2711;
  t2739 = 0. + t2698 + t2715;
  t4379 = t1348*t4267;
  t4406 = t1276*t4365;
  t4412 = t4379 + t4406;
  t4430 = t1276*t4267;
  t4431 = -1.*t1348*t4365;
  t4463 = t4430 + t4431;
  t2845 = -0.0016*t2695;
  t2850 = -0.2707*t2711;
  t2955 = 0. + t2845 + t2850;
  t3118 = 0.0184*t3092;
  t3134 = -0.7055*t3130;
  t3143 = 0. + t3118 + t3134;
  t4472 = -1.*t2128*t4412;
  t4482 = t2013*t4463;
  t4497 = t4472 + t4482;
  t4517 = t2013*t4412;
  t4528 = t2128*t4463;
  t4537 = t4517 + t4528;
  t3292 = -0.7055*t3092;
  t3316 = -0.0184*t3130;
  t3341 = 0. + t3292 + t3316;
  t3541 = -1.1135*t3493;
  t3575 = 0.0216*t3558;
  t3578 = 0. + t3541 + t3575;
  t4587 = t2711*t4497;
  t4588 = t2665*t4537;
  t4605 = t4587 + t4588;
  t4637 = t2665*t4497;
  t4641 = -1.*t2711*t4537;
  t4647 = t4637 + t4641;
  t3640 = -0.0216*t3493;
  t3643 = -1.1135*t3558;
  t3650 = 0. + t3640 + t3643;
  t4651 = -1.*t3130*t4605;
  t4654 = t3064*t4647;
  t4659 = t4651 + t4654;
  t4684 = t3064*t4605;
  t4692 = t3130*t4647;
  t4714 = t4684 + t4692;
  t4852 = t826*t36*t768*t542;
  t4853 = t944*t826*t36*t840;
  t4857 = t4852 + t4853;
  t4866 = t944*t826*t36*t768;
  t4873 = -1.*t826*t36*t542*t840;
  t4876 = t4866 + t4873;
  t4987 = -1.*t67*t826*t787;
  t4991 = t360*t4857;
  t4992 = t4987 + t4991;
  t5014 = t1348*t4876;
  t5037 = t1276*t4992;
  t5040 = t5014 + t5037;
  t5059 = t1276*t4876;
  t5066 = -1.*t1348*t4992;
  t5071 = t5059 + t5066;
  t5081 = -1.*t2128*t5040;
  t5082 = t2013*t5071;
  t5113 = t5081 + t5082;
  t5124 = t2013*t5040;
  t5130 = t2128*t5071;
  t5143 = t5124 + t5130;
  t5148 = t2711*t5113;
  t5160 = t2665*t5143;
  t5169 = t5148 + t5160;
  t5171 = t2665*t5113;
  t5178 = -1.*t2711*t5143;
  t5184 = t5171 + t5178;
  t5189 = -1.*t3130*t5169;
  t5194 = t3064*t5184;
  t5197 = t5189 + t5194;
  t5209 = t3064*t5169;
  t5211 = t3130*t5184;
  t5226 = t5209 + t5211;
  t5300 = t36*t768*t542*t488;
  t5301 = t944*t36*t488*t840;
  t5308 = t5300 + t5301;
  t5310 = t944*t36*t768*t488;
  t5312 = -1.*t36*t542*t488*t840;
  t5315 = t5310 + t5312;
  t5379 = -1.*t67*t488*t787;
  t5381 = t360*t5308;
  t5393 = t5379 + t5381;
  t5408 = t1348*t5315;
  t5409 = t1276*t5393;
  t5425 = t5408 + t5409;
  t5429 = t1276*t5315;
  t5436 = -1.*t1348*t5393;
  t5440 = t5429 + t5436;
  t5462 = -1.*t2128*t5425;
  t5463 = t2013*t5440;
  t5464 = t5462 + t5463;
  t5468 = t2013*t5425;
  t5474 = t2128*t5440;
  t5482 = t5468 + t5474;
  t5491 = t2711*t5464;
  t5493 = t2665*t5482;
  t5495 = t5491 + t5493;
  t5505 = t2665*t5464;
  t5509 = -1.*t2711*t5482;
  t5510 = t5505 + t5509;
  t5521 = -1.*t3130*t5495;
  t5532 = t3064*t5510;
  t5544 = t5521 + t5532;
  t5549 = t3064*t5495;
  t5551 = t3130*t5510;
  t5552 = t5549 + t5551;
  t5636 = -1.*t768*t542*t787;
  t5641 = -1.*t944*t787*t840;
  t5645 = t5636 + t5641;
  t5655 = -1.*t944*t768*t787;
  t5658 = t542*t787*t840;
  t5660 = t5655 + t5658;
  t5693 = -1.*t67*t36;
  t5708 = t360*t5645;
  t5717 = t5693 + t5708;
  t5726 = t1348*t5660;
  t5727 = t1276*t5717;
  t5730 = t5726 + t5727;
  t5749 = t1276*t5660;
  t5766 = -1.*t1348*t5717;
  t5771 = t5749 + t5766;
  t5779 = -1.*t2128*t5730;
  t5786 = t2013*t5771;
  t5789 = t5779 + t5786;
  t5797 = t2013*t5730;
  t5799 = t2128*t5771;
  t5804 = t5797 + t5799;
  t5813 = t2711*t5789;
  t5819 = t2665*t5804;
  t5823 = t5813 + t5819;
  t5841 = t2665*t5789;
  t5842 = -1.*t2711*t5804;
  t5845 = t5841 + t5842;
  t5855 = -1.*t3130*t5823;
  t5856 = t3064*t5845;
  t5861 = t5855 + t5856;
  t5868 = t3064*t5823;
  t5870 = t3130*t5845;
  t5874 = t5868 + t5870;
  t5920 = t768*t488;
  t5921 = -1.*t826*t787*t840;
  t5930 = t5920 + t5921;
  t5968 = t542*t5930;
  t5980 = t4237 + t5968;
  t5948 = -1.*t542*t4100;
  t5949 = t944*t5930;
  t5956 = t5948 + t5949;
  t5991 = t1348*t5956;
  t5994 = t1276*t360*t5980;
  t6008 = t5991 + t5994;
  t6022 = t1276*t5956;
  t6023 = -1.*t360*t1348*t5980;
  t6031 = t6022 + t6023;
  t6045 = -1.*t2128*t6008;
  t6056 = t2013*t6031;
  t6058 = t6045 + t6056;
  t6061 = t2013*t6008;
  t6065 = t2128*t6031;
  t6066 = t6061 + t6065;
  t6069 = t2711*t6058;
  t6070 = t2665*t6066;
  t6072 = t6069 + t6070;
  t6082 = t2665*t6058;
  t6083 = -1.*t2711*t6066;
  t6084 = t6082 + t6083;
  t6092 = -1.*t3130*t6072;
  t6094 = t3064*t6084;
  t6101 = t6092 + t6094;
  t6130 = t3064*t6072;
  t6131 = t3130*t6084;
  t6139 = t6130 + t6131;
  t6193 = t768*t488*t787;
  t6198 = -1.*t826*t840;
  t6200 = t6193 + t6198;
  t6225 = t944*t6200;
  t6230 = t542*t1100;
  t6232 = t6225 + t6230;
  t6215 = -1.*t542*t6200;
  t6216 = t6215 + t1245;
  t6246 = t1348*t6216;
  t6249 = t1276*t360*t6232;
  t6254 = t6246 + t6249;
  t6261 = t1276*t6216;
  t6290 = -1.*t360*t1348*t6232;
  t6293 = t6261 + t6290;
  t6298 = -1.*t2128*t6254;
  t6312 = t2013*t6293;
  t6320 = t6298 + t6312;
  t6340 = t2013*t6254;
  t6343 = t2128*t6293;
  t6347 = t6340 + t6343;
  t6353 = t2711*t6320;
  t6362 = t2665*t6347;
  t6364 = t6353 + t6362;
  t6378 = t2665*t6320;
  t6383 = -1.*t2711*t6347;
  t6385 = t6378 + t6383;
  t6398 = -1.*t3130*t6364;
  t6404 = t3064*t6385;
  t6411 = t6398 + t6404;
  t6424 = t3064*t6364;
  t6431 = t3130*t6385;
  t6446 = t6424 + t6431;
  t6572 = t944*t36*t768;
  t6574 = -1.*t36*t542*t840;
  t6578 = t6572 + t6574;
  t6531 = -1.*t36*t768*t542;
  t6533 = -1.*t944*t36*t840;
  t6555 = t6531 + t6533;
  t6594 = t1348*t6555;
  t6603 = t1276*t360*t6578;
  t6606 = t6594 + t6603;
  t6614 = t1276*t6555;
  t6635 = -1.*t360*t1348*t6578;
  t6642 = t6614 + t6635;
  t6648 = -1.*t2128*t6606;
  t6649 = t2013*t6642;
  t6657 = t6648 + t6649;
  t6663 = t2013*t6606;
  t6665 = t2128*t6642;
  t6666 = t6663 + t6665;
  t6678 = t2711*t6657;
  t6681 = t2665*t6666;
  t6687 = t6678 + t6681;
  t6691 = t2665*t6657;
  t6693 = -1.*t2711*t6666;
  t6696 = t6691 + t6693;
  t6702 = -1.*t3130*t6687;
  t6706 = t3064*t6696;
  t6708 = t6702 + t6706;
  t6737 = t3064*t6687;
  t6748 = t3130*t6696;
  t6751 = t6737 + t6748;
  t6810 = -1.*t944*t4189;
  t6821 = t5948 + t6810;
  t6855 = t1348*t6821;
  t6858 = t1276*t360*t4267;
  t6870 = t6855 + t6858;
  t6872 = t1276*t6821;
  t6877 = -1.*t360*t1348*t4267;
  t6887 = t6872 + t6877;
  t6895 = -1.*t2128*t6870;
  t6896 = t2013*t6887;
  t6908 = t6895 + t6896;
  t6918 = t2013*t6870;
  t6928 = t2128*t6887;
  t6940 = t6918 + t6928;
  t6949 = t2711*t6908;
  t6957 = t2665*t6940;
  t6959 = t6949 + t6957;
  t6963 = t2665*t6908;
  t6968 = -1.*t2711*t6940;
  t6972 = t6963 + t6968;
  t6992 = -1.*t3130*t6959;
  t7013 = t3064*t6972;
  t7023 = t6992 + t7013;
  t7035 = t3064*t6959;
  t7044 = t3130*t6972;
  t7048 = t7035 + t7044;
  t7097 = t826*t768;
  t7102 = t488*t787*t840;
  t7119 = t7097 + t7102;
  t7142 = -1.*t542*t7119;
  t7146 = t6225 + t7142;
  t7125 = -1.*t944*t7119;
  t7132 = t6215 + t7125;
  t7184 = t1348*t7132;
  t7185 = t1276*t360*t7146;
  t7186 = t7184 + t7185;
  t7194 = t1276*t7132;
  t7207 = -1.*t360*t1348*t7146;
  t7219 = t7194 + t7207;
  t7231 = -1.*t2128*t7186;
  t7237 = t2013*t7219;
  t7242 = t7231 + t7237;
  t7254 = t2013*t7186;
  t7255 = t2128*t7219;
  t7256 = t7254 + t7255;
  t7266 = t2711*t7242;
  t7269 = t2665*t7256;
  t7280 = t7266 + t7269;
  t7296 = t2665*t7242;
  t7299 = -1.*t2711*t7256;
  t7306 = t7296 + t7299;
  t7318 = -1.*t3130*t7280;
  t7321 = t3064*t7306;
  t7334 = t7318 + t7321;
  t7341 = t3064*t7280;
  t7348 = t3130*t7306;
  t7349 = t7341 + t7348;
  t6563 = t1533*t6555;
  t6586 = -0.1305*t67*t6578;
  t6592 = t1169*t6578;
  t6593 = t360*t1905*t6578;
  t6608 = t2206*t6606;
  t6643 = t2382*t6642;
  t6662 = t2739*t6657;
  t6677 = t2955*t6666;
  t6690 = t3143*t6687;
  t6700 = t3341*t6696;
  t6727 = t3578*t6708;
  t6757 = t3650*t6751;
  t6759 = t3558*t6708;
  t6762 = t3441*t6751;
  t6763 = t6759 + t6762;
  t6767 = 0.0306*t6763;
  t6773 = t3441*t6708;
  t6776 = -1.*t3558*t6751;
  t6783 = t6773 + t6776;
  t6785 = -1.1312*t6783;
  t4339 = -1.*t826*t36*t360;
  t4343 = t67*t4207;
  t4353 = t4339 + t4343;
  t7510 = -1.*t2013*t1348*t4353;
  t7515 = -1.*t1276*t2128*t4353;
  t7526 = t7510 + t7515;
  t7538 = t1276*t2013*t4353;
  t7541 = -1.*t1348*t2128*t4353;
  t7547 = t7538 + t7541;
  t7559 = t2711*t7526;
  t7560 = t2665*t7547;
  t7565 = t7559 + t7560;
  t7579 = t2665*t7526;
  t7594 = -1.*t2711*t7547;
  t7595 = t7579 + t7594;
  t7610 = -1.*t3130*t7565;
  t7632 = t3064*t7595;
  t7637 = t7610 + t7632;
  t7649 = t3064*t7565;
  t7650 = t3130*t7595;
  t7656 = t7649 + t7650;
  t7412 = -0.135*t67;
  t7416 = -0.049*t360;
  t7417 = t7412 + t7416;
  t7427 = 0.049*t67;
  t7428 = t7427 + t376;
  t7703 = t542*t6200;
  t7704 = t944*t7119;
  t7706 = t7703 + t7704;
  t7708 = -1.*t36*t360*t488;
  t7711 = t67*t7706;
  t7719 = t7708 + t7711;
  t7757 = -1.*t2013*t1348*t7719;
  t7762 = -1.*t1276*t2128*t7719;
  t7775 = t7757 + t7762;
  t7780 = t1276*t2013*t7719;
  t7781 = -1.*t1348*t2128*t7719;
  t7787 = t7780 + t7781;
  t7807 = t2711*t7775;
  t7808 = t2665*t7787;
  t7817 = t7807 + t7808;
  t7845 = t2665*t7775;
  t7849 = -1.*t2711*t7787;
  t7866 = t7845 + t7849;
  t7882 = -1.*t3130*t7817;
  t7889 = t3064*t7866;
  t7891 = t7882 + t7889;
  t7900 = t3064*t7817;
  t7901 = t3130*t7866;
  t7903 = t7900 + t7901;
  t7965 = t36*t768*t542;
  t7972 = t944*t36*t840;
  t7976 = t7965 + t7972;
  t7984 = t360*t787;
  t7985 = t67*t7976;
  t7989 = t7984 + t7985;
  t8020 = -1.*t2013*t1348*t7989;
  t8029 = -1.*t1276*t2128*t7989;
  t8037 = t8020 + t8029;
  t8043 = t1276*t2013*t7989;
  t8053 = -1.*t1348*t2128*t7989;
  t8056 = t8043 + t8053;
  t8070 = t2711*t8037;
  t8079 = t2665*t8056;
  t8092 = t8070 + t8079;
  t8103 = t2665*t8037;
  t8109 = -1.*t2711*t8056;
  t8113 = t8103 + t8109;
  t8121 = -1.*t3130*t8092;
  t8122 = t3064*t8113;
  t8126 = t8121 + t8122;
  t8129 = t3064*t8092;
  t8135 = t3130*t8113;
  t8136 = t8129 + t8135;
  t8214 = -1.*t1348*t4267;
  t8215 = -1.*t1276*t4365;
  t8216 = t8214 + t8215;
  t8222 = t2128*t8216;
  t8226 = t8222 + t4482;
  t8232 = t2013*t8216;
  t8239 = -1.*t2128*t4463;
  t8242 = t8232 + t8239;
  t8244 = -1.*t2711*t8226;
  t8246 = t2665*t8242;
  t8250 = t8244 + t8246;
  t8271 = t2665*t8226;
  t8280 = t2711*t8242;
  t8282 = t8271 + t8280;
  t8289 = t3130*t8250;
  t8298 = t3064*t8282;
  t8301 = t8289 + t8298;
  t8312 = t3064*t8250;
  t8314 = -1.*t3130*t8282;
  t8317 = t8312 + t8314;
  t8185 = 0.049*t1276;
  t8188 = t8185 + t1901;
  t8193 = -0.09*t1276;
  t8197 = -0.049*t1348;
  t8199 = t8193 + t8197;
  t8411 = t67*t36*t488;
  t8412 = t360*t7706;
  t8419 = t8411 + t8412;
  t8425 = -1.*t1348*t7146;
  t8432 = -1.*t1276*t8419;
  t8433 = t8425 + t8432;
  t8448 = t1276*t7146;
  t8453 = -1.*t1348*t8419;
  t8454 = t8448 + t8453;
  t8465 = t2128*t8433;
  t8473 = t2013*t8454;
  t8474 = t8465 + t8473;
  t8484 = t2013*t8433;
  t8487 = -1.*t2128*t8454;
  t8495 = t8484 + t8487;
  t8511 = -1.*t2711*t8474;
  t8514 = t2665*t8495;
  t8531 = t8511 + t8514;
  t8537 = t2665*t8474;
  t8551 = t2711*t8495;
  t8553 = t8537 + t8551;
  t8573 = t3130*t8531;
  t8577 = t3064*t8553;
  t8586 = t8573 + t8577;
  t8600 = t3064*t8531;
  t8607 = -1.*t3130*t8553;
  t8608 = t8600 + t8607;
  t8642 = -1.*t67*t787;
  t8646 = t360*t7976;
  t8652 = t8642 + t8646;
  t8664 = -1.*t1348*t6578;
  t8674 = -1.*t1276*t8652;
  t8677 = t8664 + t8674;
  t8686 = t1276*t6578;
  t8691 = -1.*t1348*t8652;
  t8693 = t8686 + t8691;
  t8697 = t2128*t8677;
  t8711 = t2013*t8693;
  t8718 = t8697 + t8711;
  t8722 = t2013*t8677;
  t8730 = -1.*t2128*t8693;
  t8736 = t8722 + t8730;
  t8742 = -1.*t2711*t8718;
  t8751 = t2665*t8736;
  t8753 = t8742 + t8751;
  t8773 = t2665*t8718;
  t8777 = t2711*t8736;
  t8780 = t8773 + t8777;
  t8790 = t3130*t8753;
  t8798 = t3064*t8780;
  t8799 = t8790 + t8798;
  t8812 = t3064*t8753;
  t8816 = -1.*t3130*t8780;
  t8819 = t8812 + t8816;
  t8905 = -1.*t2013*t4412;
  t8906 = t8905 + t8239;
  t8908 = -1.*t2711*t4497;
  t8913 = t2665*t8906;
  t8914 = t8908 + t8913;
  t8919 = t2711*t8906;
  t8923 = t4637 + t8919;
  t8946 = t3130*t8914;
  t8950 = t3064*t8923;
  t8952 = t8946 + t8950;
  t8984 = t3064*t8914;
  t8988 = -1.*t3130*t8923;
  t8991 = t8984 + t8988;
  t8868 = -0.21*t2013;
  t8869 = -0.049*t2128;
  t8871 = t8868 + t8869;
  t8881 = 0.049*t2013;
  t8886 = t8881 + t2144;
  t9061 = t1348*t7146;
  t9074 = t1276*t8419;
  t9078 = t9061 + t9074;
  t9085 = -1.*t2128*t9078;
  t9086 = t9085 + t8473;
  t9094 = -1.*t2013*t9078;
  t9101 = t9094 + t8487;
  t9106 = -1.*t2711*t9086;
  t9123 = t2665*t9101;
  t9125 = t9106 + t9123;
  t9149 = t2665*t9086;
  t9157 = t2711*t9101;
  t9160 = t9149 + t9157;
  t9172 = t3130*t9125;
  t9174 = t3064*t9160;
  t9178 = t9172 + t9174;
  t9191 = t3064*t9125;
  t9202 = -1.*t3130*t9160;
  t9207 = t9191 + t9202;
  t9282 = t1348*t6578;
  t9290 = t1276*t8652;
  t9291 = t9282 + t9290;
  t9305 = -1.*t2128*t9291;
  t9307 = t9305 + t8711;
  t9309 = -1.*t2013*t9291;
  t9310 = t9309 + t8730;
  t9318 = -1.*t2711*t9307;
  t9319 = t2665*t9310;
  t9320 = t9318 + t9319;
  t9332 = t2665*t9307;
  t9340 = t2711*t9310;
  t9361 = t9332 + t9340;
  t9373 = t3130*t9320;
  t9391 = t3064*t9361;
  t9393 = t9373 + t9391;
  t9416 = t3064*t9320;
  t9420 = -1.*t3130*t9361;
  t9428 = t9416 + t9420;
  t9542 = -1.*t2665*t4537;
  t9550 = t8908 + t9542;
  t9568 = t3130*t9550;
  t9570 = t9568 + t4654;
  t9572 = t3064*t9550;
  t9577 = -1.*t3130*t4647;
  t9582 = t9572 + t9577;
  t9494 = 0.0016*t2665;
  t9499 = t9494 + t2850;
  t9531 = -0.2707*t2665;
  t9535 = -0.0016*t2711;
  t9537 = t9531 + t9535;
  t9631 = t2013*t9078;
  t9640 = t2128*t8454;
  t9641 = t9631 + t9640;
  t9647 = -1.*t2665*t9641;
  t9653 = t9106 + t9647;
  t9663 = -1.*t2711*t9641;
  t9665 = t9149 + t9663;
  t9675 = t3130*t9653;
  t9682 = t3064*t9665;
  t9689 = t9675 + t9682;
  t9696 = t3064*t9653;
  t9701 = -1.*t3130*t9665;
  t9702 = t9696 + t9701;
  t9775 = t2013*t9291;
  t9786 = t2128*t8693;
  t9787 = t9775 + t9786;
  t9796 = -1.*t2665*t9787;
  t9797 = t9318 + t9796;
  t9812 = -1.*t2711*t9787;
  t9817 = t9332 + t9812;
  t9833 = t3130*t9797;
  t9847 = t3064*t9817;
  t9849 = t9833 + t9847;
  t9860 = t3064*t9797;
  t9863 = -1.*t3130*t9817;
  t9865 = t9860 + t9863;
  t9988 = -1.*t3064*t4605;
  t9994 = t9988 + t9577;
  t4782 = t3441*t4659;
  t9926 = -0.7055*t3064;
  t9928 = 0.0184*t3130;
  t9937 = t9926 + t9928;
  t9963 = -0.0184*t3064;
  t9965 = t9963 + t3134;
  t10059 = t2711*t9086;
  t10064 = t2665*t9641;
  t10065 = t10059 + t10064;
  t10074 = -1.*t3130*t10065;
  t10079 = t10074 + t9682;
  t10084 = -1.*t3064*t10065;
  t10085 = t10084 + t9701;
  t10123 = t2711*t9307;
  t10126 = t2665*t9787;
  t10132 = t10123 + t10126;
  t10141 = -1.*t3130*t10132;
  t10148 = t10141 + t9847;
  t10156 = -1.*t3064*t10132;
  t10163 = t10156 + t9863;
  t10007 = -1.*t3558*t4659;
  t4786 = -1.*t3558*t4714;
  t4801 = t4782 + t4786;
  t10265 = 0.0216*t3441;
  t10272 = t10265 + t3643;
  t10280 = -1.1135*t3441;
  t10283 = -0.0216*t3558;
  t10284 = t10280 + t10283;
  t10095 = -1.*t3558*t10079;
  t10332 = t3064*t10065;
  t10333 = t3130*t9665;
  t10334 = t10332 + t10333;
  t10111 = t3441*t10079;
  t10187 = -1.*t3558*t10148;
  t10420 = t3064*t10132;
  t10436 = t3130*t9817;
  t10463 = t10420 + t10436;
  t10220 = t3441*t10148;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1069*t1100 + t1169*t1251 + t1533*t1603 + t1905*t1970 + t2206*t2274 + t2382*t2657 + t2739*t2830 + t2955*t3033 + t3143*t3278 + t3341*t3410 + t3578*t3615 + t3650*t3699 + 0.0306*(t3558*t3615 + t3441*t3699) - 1.1312*(t3441*t3615 - 1.*t3558*t3699) - 1.*t36*t416*t488 - 0.1305*(t36*t360*t488 + t1251*t67) + t657*t903;
  p_output1(10)=t1069*t4189 + t1169*t4207 + t1533*t4267 - 0.1305*t4353 + t1905*t4365 + t2206*t4412 + t2382*t4463 + t2739*t4497 + t2955*t4537 + t3143*t4605 + t3341*t4647 + t3578*t4659 + t3650*t4714 + 0.0306*(t3558*t4659 + t3441*t4714) - 1.1312*t4801 + t4100*t657 + t36*t416*t826;
  p_output1(11)=0;
  p_output1(12)=t1169*t4857 + t1533*t4876 + t1905*t4992 + t2206*t5040 + t2382*t5071 + t2739*t5113 + t2955*t5143 + t3143*t5169 + t3341*t5184 + t3578*t5197 + t3650*t5226 + 0.0306*(t3558*t5197 + t3441*t5226) - 1.1312*(t3441*t5197 - 1.*t3558*t5226) + t36*t657*t768*t826 - 1.*t416*t787*t826 - 0.1305*(t4857*t67 + t360*t787*t826) + t1069*t36*t826*t840;
  p_output1(13)=t1169*t5308 + t1533*t5315 + t1905*t5393 + t2206*t5425 + t2382*t5440 + t2739*t5464 + t2955*t5482 + t3143*t5495 + t3341*t5510 + t3578*t5544 + t3650*t5552 + 0.0306*(t3558*t5544 + t3441*t5552) - 1.1312*(t3441*t5544 - 1.*t3558*t5552) + t36*t488*t657*t768 - 1.*t416*t488*t787 - 0.1305*(t5308*t67 + t360*t488*t787) + t1069*t36*t488*t840;
  p_output1(14)=-1.*t36*t416 + t1169*t5645 + t1533*t5660 + t1905*t5717 + t2206*t5730 + t2382*t5771 + t2739*t5789 + t2955*t5804 + t3143*t5823 + t3341*t5845 + t3578*t5861 + t3650*t5874 + 0.0306*(t3558*t5861 + t3441*t5874) - 1.1312*(t3441*t5861 - 1.*t3558*t5874) - 0.1305*(t36*t360 + t5645*t67) - 1.*t657*t768*t787 - 1.*t1069*t787*t840;
  p_output1(15)=t1069*t4100 + t1533*t5956 + t1169*t5980 + t1905*t360*t5980 + t2206*t6008 + t2382*t6031 + t2739*t6058 + t2955*t6066 + t3143*t6072 + t3341*t6084 + t3578*t6101 + t3650*t6139 + 0.0306*(t3558*t6101 + t3441*t6139) - 1.1312*(t3441*t6101 - 1.*t3558*t6139) + t5930*t657 - 0.1305*t5980*t67;
  p_output1(16)=t1069*t6200 + t1533*t6216 + t1169*t6232 + t1905*t360*t6232 + t2206*t6254 + t2382*t6293 + t2739*t6320 + t2955*t6347 + t3143*t6364 + t3341*t6385 + t3578*t6411 + t3650*t6446 + 0.0306*(t3558*t6411 + t3441*t6446) - 1.1312*(t3441*t6411 - 1.*t3558*t6446) + t1100*t657 - 0.1305*t6232*t67;
  p_output1(17)=t6563 + t6586 + t6592 + t6593 + t6608 + t6643 + t6662 + t6677 + t6690 + t6700 + t6727 + t6757 + t6767 + t6785 + t1069*t36*t768 - 1.*t36*t657*t840;
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=0;
  p_output1(34)=0;
  p_output1(35)=0;
  p_output1(36)=0;
  p_output1(37)=0;
  p_output1(38)=0;
  p_output1(39)=t1169*t4267 + t1905*t360*t4267 - 0.135*t4189*t542 - 0.1305*t4267*t67 + t1533*t6821 + t2206*t6870 + t2382*t6887 + t2739*t6908 + t2955*t6940 + t3143*t6959 + t3341*t6972 + t3578*t7023 + t3650*t7048 + 0.0306*(t3558*t7023 + t3441*t7048) - 1.1312*(t3441*t7023 - 1.*t3558*t7048) + 0.135*t4100*t944;
  p_output1(40)=-0.135*t542*t7119 + t1533*t7132 + t1169*t7146 + t1905*t360*t7146 - 0.1305*t67*t7146 + t2206*t7186 + t2382*t7219 + t2739*t7242 + t2955*t7256 + t3143*t7280 + t3341*t7306 + t3578*t7334 + t3650*t7349 + 0.0306*(t3558*t7334 + t3441*t7349) - 1.1312*(t3441*t7334 - 1.*t3558*t7349) + 0.135*t6200*t944;
  p_output1(41)=t6563 + t6586 + t6592 + t6593 + t6608 + t6643 + t6662 + t6677 + t6690 + t6700 + t6727 + t6757 + t6767 + t6785 - 0.135*t36*t542*t840 + 0.135*t36*t768*t944;
  p_output1(42)=t1905*t4353 + t1276*t2206*t4353 - 1.*t1348*t2382*t4353 + t4207*t7428 + t2739*t7526 + t2955*t7547 + t3143*t7565 + t3341*t7595 + t3578*t7637 + t3650*t7656 + 0.0306*(t3558*t7637 + t3441*t7656) - 1.1312*(t3441*t7637 - 1.*t3558*t7656) + t36*t7417*t826 - 0.1305*(-1.*t360*t4207 - 1.*t36*t67*t826);
  p_output1(43)=t36*t488*t7417 + t7428*t7706 - 0.1305*(t1916 - 1.*t360*t7706) + t1905*t7719 + t1276*t2206*t7719 - 1.*t1348*t2382*t7719 + t2739*t7775 + t2955*t7787 + t3143*t7817 + t3341*t7866 + t3578*t7891 + t3650*t7903 + 0.0306*(t3558*t7891 + t3441*t7903) - 1.1312*(t3441*t7891 - 1.*t3558*t7903);
  p_output1(44)=-1.*t7417*t787 + t7428*t7976 - 0.1305*(t67*t787 - 1.*t360*t7976) + t1905*t7989 + t1276*t2206*t7989 - 1.*t1348*t2382*t7989 + t2739*t8037 + t2955*t8056 + t3143*t8092 + t3341*t8113 + t3578*t8126 + t3650*t8136 + 0.0306*(t3558*t8126 + t3441*t8136) - 1.1312*(t3441*t8126 - 1.*t3558*t8136);
  p_output1(45)=t2206*t4463 + t4267*t8188 + t4365*t8199 + t2382*t8216 + t2955*t8226 + t2739*t8242 + t3341*t8250 + t3143*t8282 + t3650*t8301 + t3578*t8317 - 1.1312*(-1.*t3558*t8301 + t3441*t8317) + 0.0306*(t3441*t8301 + t3558*t8317);
  p_output1(46)=t7146*t8188 + t8199*t8419 + t2382*t8433 + t2206*t8454 + t2955*t8474 + t2739*t8495 + t3341*t8531 + t3143*t8553 + t3650*t8586 + t3578*t8608 - 1.1312*(-1.*t3558*t8586 + t3441*t8608) + 0.0306*(t3441*t8586 + t3558*t8608);
  p_output1(47)=t6578*t8188 + t8199*t8652 + t2382*t8677 + t2206*t8693 + t2955*t8718 + t2739*t8736 + t3341*t8753 + t3143*t8780 + t3650*t8799 + t3578*t8819 - 1.1312*(-1.*t3558*t8799 + t3441*t8819) + 0.0306*(t3441*t8799 + t3558*t8819);
  p_output1(48)=t2955*t4497 + t4412*t8871 + t4463*t8886 + t2739*t8906 + t3341*t8914 + t3143*t8923 + t3650*t8952 + t3578*t8991 - 1.1312*(-1.*t3558*t8952 + t3441*t8991) + 0.0306*(t3441*t8952 + t3558*t8991);
  p_output1(49)=t8454*t8886 + t8871*t9078 + t2955*t9086 + t2739*t9101 + t3341*t9125 + t3143*t9160 + t3650*t9178 + t3578*t9207 - 1.1312*(-1.*t3558*t9178 + t3441*t9207) + 0.0306*(t3441*t9178 + t3558*t9207);
  p_output1(50)=t8693*t8886 + t8871*t9291 + t2955*t9307 + t2739*t9310 + t3341*t9320 + t3143*t9361 + t3650*t9393 + t3578*t9428 - 1.1312*(-1.*t3558*t9393 + t3441*t9428) + 0.0306*(t3441*t9393 + t3558*t9428);
  p_output1(51)=t3143*t4647 + t4497*t9499 + t4537*t9537 + t3341*t9550 + t3650*t9570 + t3578*t9582 - 1.1312*(-1.*t3558*t9570 + t3441*t9582) + 0.0306*(t3441*t9570 + t3558*t9582);
  p_output1(52)=t9086*t9499 + t9537*t9641 + t3341*t9653 + t3143*t9665 + t3650*t9689 + t3578*t9702 - 1.1312*(-1.*t3558*t9689 + t3441*t9702) + 0.0306*(t3441*t9689 + t3558*t9702);
  p_output1(53)=t9307*t9499 + t9537*t9787 + t3341*t9797 + t3143*t9817 + t3650*t9849 + t3578*t9865 - 1.1312*(-1.*t3558*t9849 + t3441*t9865) + 0.0306*(t3441*t9849 + t3558*t9865);
  p_output1(54)=t3650*t4659 + t4605*t9937 + t4647*t9965 + t3578*t9994 - 1.1312*(t10007 + t3441*t9994) + 0.0306*(t4782 + t3558*t9994);
  p_output1(55)=-1.1312*(t10095 + t10085*t3441) + 0.0306*(t10111 + t10085*t3558) + t10085*t3578 + t10079*t3650 + t10065*t9937 + t9665*t9965;
  p_output1(56)=-1.1312*(t10187 + t10163*t3441) + 0.0306*(t10220 + t10163*t3558) + t10163*t3578 + t10148*t3650 + t10132*t9937 + t9817*t9965;
  p_output1(57)=t10272*t4659 + t10284*t4714 - 1.1312*(t10007 - 1.*t3441*t4714) + 0.0306*t4801;
  p_output1(58)=t10079*t10272 + t10284*t10334 - 1.1312*(t10095 - 1.*t10334*t3441) + 0.0306*(t10111 - 1.*t10334*t3558);
  p_output1(59)=t10148*t10272 + t10284*t10463 - 1.1312*(t10187 - 1.*t10463*t3441) + 0.0306*(t10220 - 1.*t10463*t3558);
}


       
Eigen::Matrix<double,3,20> Jp_RightToeBottom(const Eigen::Matrix<double,20,1> &var1)
//void Jp_RightToeBottom(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,20>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



