/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 23:02:51 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "H_LeftToeBottom_to_RightToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,4,4> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t213;
  double t360;
  double t253;
  double t259;
  double t377;
  double t416;
  double t268;
  double t387;
  double t396;
  double t207;
  double t426;
  double t427;
  double t430;
  double t443;
  double t414;
  double t431;
  double t436;
  double t180;
  double t452;
  double t466;
  double t469;
  double t625;
  double t442;
  double t473;
  double t506;
  double t173;
  double t627;
  double t631;
  double t653;
  double t774;
  double t754;
  double t758;
  double t767;
  double t778;
  double t787;
  double t801;
  double t809;
  double t812;
  double t796;
  double t829;
  double t833;
  double t850;
  double t855;
  double t875;
  double t842;
  double t878;
  double t881;
  double t898;
  double t908;
  double t922;
  double t884;
  double t924;
  double t925;
  double t944;
  double t950;
  double t953;
  double t617;
  double t655;
  double t660;
  double t691;
  double t702;
  double t714;
  double t939;
  double t963;
  double t995;
  double t1002;
  double t1007;
  double t1013;
  double t1157;
  double t1180;
  double t1191;
  double t1211;
  double t1217;
  double t1244;
  double t1198;
  double t1283;
  double t1286;
  double t1322;
  double t1323;
  double t1348;
  double t1294;
  double t1354;
  double t1368;
  double t1386;
  double t1415;
  double t1431;
  double t1379;
  double t1442;
  double t1443;
  double t1456;
  double t1462;
  double t1474;
  double t1044;
  double t1049;
  double t1106;
  double t998;
  double t1029;
  double t1036;
  double t1454;
  double t1481;
  double t1483;
  double t1557;
  double t1584;
  double t1619;
  double t667;
  double t732;
  double t741;
  double t1117;
  double t1119;
  double t1128;
  double t1041;
  double t1149;
  double t11;
  double t1712;
  double t1716;
  double t1719;
  double t1512;
  double t1627;
  double t1641;
  double t1653;
  double t1669;
  double t1679;
  double t1697;
  double t1724;
  double t1732;
  double t1740;
  double t1747;
  double t1751;
  double t1754;
  double t1775;
  double t1782;
  double t53;
  double t1849;
  double t1794;
  double t2200;
  double t2220;
  double t2187;
  double t2268;
  double t2298;
  double t2299;
  double t2205;
  double t2232;
  double t2245;
  double t2329;
  double t2181;
  double t2369;
  double t2381;
  double t2383;
  double t2264;
  double t2339;
  double t2348;
  double t2390;
  double t2177;
  double t2425;
  double t2445;
  double t2446;
  double t2359;
  double t2393;
  double t2403;
  double t2449;
  double t2168;
  double t2461;
  double t2470;
  double t2471;
  double t2413;
  double t2457;
  double t2459;
  double t2480;
  double t1150;
  double t2599;
  double t2601;
  double t2603;
  double t2580;
  double t2594;
  double t2595;
  double t2629;
  double t2632;
  double t2659;
  double t2597;
  double t2613;
  double t2615;
  double t2704;
  double t2715;
  double t2724;
  double t2622;
  double t2665;
  double t2689;
  double t2737;
  double t2749;
  double t2766;
  double t2703;
  double t2729;
  double t2732;
  double t1818;
  double t1843;
  double t1845;
  double t2913;
  double t2915;
  double t2916;
  double t2884;
  double t2891;
  double t2892;
  double t2938;
  double t2939;
  double t2943;
  double t2902;
  double t2923;
  double t2924;
  double t2957;
  double t2960;
  double t2996;
  double t2935;
  double t2951;
  double t2952;
  double t1850;
  double t1854;
  double t1859;
  double t2460;
  double t2497;
  double t2503;
  double t2506;
  double t2511;
  double t2516;
  double t2518;
  double t2527;
  double t2559;
  double t1869;
  double t1877;
  double t1920;
  double t2954;
  double t2999;
  double t3005;
  double t3010;
  double t3013;
  double t3015;
  double t3016;
  double t3025;
  double t3030;
  double t1942;
  double t1952;
  double t1957;
  double t2734;
  double t2772;
  double t2794;
  double t2799;
  double t2806;
  double t2807;
  double t2813;
  double t2817;
  double t2842;
  double t1990;
  double t2009;
  double t2012;
  double t2025;
  double t2047;
  double t2087;
  double t2091;
  double t2117;
  double t2132;
  double t2140;
  double t3099;
  double t3103;
  double t3104;
  double t3122;
  double t3123;
  double t3138;
  double t3110;
  double t3114;
  double t3118;
  double t3269;
  double t3275;
  double t3366;
  double t3368;
  double t3495;
  double t3499;
  double t3597;
  double t3612;
  double t3698;
  double t3699;
  double t3204;
  double t3209;
  double t3216;
  double t3245;
  double t3253;
  double t3278;
  double t3306;
  double t3317;
  double t3334;
  double t3337;
  double t3351;
  double t3416;
  double t3418;
  double t3423;
  double t3430;
  double t3440;
  double t3465;
  double t3500;
  double t3505;
  double t3515;
  double t3538;
  double t3570;
  double t3574;
  double t3617;
  double t3619;
  double t3620;
  double t3651;
  double t3659;
  double t3685;
  double t3708;
  double t3709;
  double t3710;
  double t3717;
  double t3723;
  double t3744;
  double t4129;
  double t4130;
  double t4177;
  double t4179;
  double t4243;
  double t4246;
  double t4281;
  double t4282;
  double t4329;
  double t4333;
  double t4108;
  double t4111;
  double t4194;
  double t4203;
  double t4207;
  double t4134;
  double t4136;
  double t4140;
  double t4210;
  double t4212;
  double t4218;
  double t4248;
  double t4253;
  double t4264;
  double t4277;
  double t4278;
  double t4279;
  double t4284;
  double t4288;
  double t4291;
  double t4298;
  double t4313;
  double t4319;
  double t4343;
  double t4345;
  double t4355;
  double t4367;
  double t4368;
  double t4386;
  double t4080;
  double t4088;
  double t4093;
  double t4105;
  double t4112;
  double t4115;
  double t4119;
  double t4126;
  double t4141;
  double t4151;
  double t4154;
  double t4166;
  double t4169;
  double t4208;
  double t4223;
  double t4271;
  double t4280;
  double t4292;
  double t4324;
  double t4359;
  double t4408;
  double t4418;
  double t4425;
  double t4432;
  double t4445;
  double t4459;
  double t4463;
  double t4465;
  double t4475;
  double t4477;
  double t4478;
  double t4479;
  double t4483;
  double t4487;
  double t4490;
  double t4496;
  double t4504;
  double t4506;
  double t3191;
  double t3197;
  double t3268;
  double t3318;
  double t3361;
  double t3424;
  double t3490;
  double t3523;
  double t3595;
  double t3642;
  double t3686;
  double t3716;
  double t3751;
  double t3753;
  double t3754;
  double t3770;
  double t3959;
  double t3971;
  double t3977;
  double t3996;
  double t4011;
  double t4013;
  double t4022;
  double t4026;
  double t4032;
  double t4044;
  double t4049;
  double t4052;
  double t4059;
  double t4060;
  double t3792;
  double t3796;
  double t3801;
  double t3809;
  double t3816;
  double t3831;
  double t3847;
  double t3849;
  double t3859;
  double t3864;
  double t3865;
  double t3870;
  double t3885;
  double t3887;
  double t3917;
  double t3929;
  double t3944;
  double t3950;
  double t4581;
  double t4590;
  double t4596;
  double t4604;
  double t4616;
  double t4621;
  double t4627;
  double t4641;
  double t4645;
  double t4646;
  double t4649;
  double t4651;
  double t4664;
  double t4676;
  double t4699;
  double t4714;
  double t4435;
  double t4529;
  double t4546;
  double t4774;
  double t4781;
  double t4791;
  double t4564;
  double t4569;
  double t4578;
  t213 = Cos(var1[1]);
  t360 = Cos(var1[3]);
  t253 = Cos(var1[2]);
  t259 = Sin(var1[3]);
  t377 = Sin(var1[2]);
  t416 = Cos(var1[4]);
  t268 = -1.*t213*t253*t259;
  t387 = -1.*t360*t213*t377;
  t396 = t268 + t387;
  t207 = Sin(var1[4]);
  t426 = t360*t213*t253;
  t427 = -1.*t213*t259*t377;
  t430 = t426 + t427;
  t443 = Cos(var1[5]);
  t414 = t207*t396;
  t431 = t416*t430;
  t436 = t414 + t431;
  t180 = Sin(var1[5]);
  t452 = t416*t396;
  t466 = -1.*t207*t430;
  t469 = t452 + t466;
  t625 = Cos(var1[6]);
  t442 = -1.*t180*t436;
  t473 = t443*t469;
  t506 = t442 + t473;
  t173 = Sin(var1[6]);
  t627 = t443*t436;
  t631 = t180*t469;
  t653 = t627 + t631;
  t774 = Sin(var1[0]);
  t754 = Cos(var1[0]);
  t758 = Sin(var1[1]);
  t767 = t754*t253*t758;
  t778 = -1.*t774*t377;
  t787 = t767 + t778;
  t801 = -1.*t253*t774;
  t809 = -1.*t754*t758*t377;
  t812 = t801 + t809;
  t796 = -1.*t259*t787;
  t829 = t360*t812;
  t833 = t796 + t829;
  t850 = t360*t787;
  t855 = t259*t812;
  t875 = t850 + t855;
  t842 = t207*t833;
  t878 = t416*t875;
  t881 = t842 + t878;
  t898 = t416*t833;
  t908 = -1.*t207*t875;
  t922 = t898 + t908;
  t884 = -1.*t180*t881;
  t924 = t443*t922;
  t925 = t884 + t924;
  t944 = t443*t881;
  t950 = t180*t922;
  t953 = t944 + t950;
  t617 = t173*t506;
  t655 = t625*t653;
  t660 = t617 + t655;
  t691 = t625*t506;
  t702 = -1.*t173*t653;
  t714 = t691 + t702;
  t939 = t173*t925;
  t963 = t625*t953;
  t995 = t939 + t963;
  t1002 = t625*t925;
  t1007 = -1.*t173*t953;
  t1013 = t1002 + t1007;
  t1157 = t253*t774*t758;
  t1180 = t754*t377;
  t1191 = t1157 + t1180;
  t1211 = t754*t253;
  t1217 = -1.*t774*t758*t377;
  t1244 = t1211 + t1217;
  t1198 = -1.*t259*t1191;
  t1283 = t360*t1244;
  t1286 = t1198 + t1283;
  t1322 = t360*t1191;
  t1323 = t259*t1244;
  t1348 = t1322 + t1323;
  t1294 = t207*t1286;
  t1354 = t416*t1348;
  t1368 = t1294 + t1354;
  t1386 = t416*t1286;
  t1415 = -1.*t207*t1348;
  t1431 = t1386 + t1415;
  t1379 = -1.*t180*t1368;
  t1442 = t443*t1431;
  t1443 = t1379 + t1442;
  t1456 = t443*t1368;
  t1462 = t180*t1431;
  t1474 = t1456 + t1462;
  t1044 = -0.766044*t660;
  t1049 = 0.642788*t714;
  t1106 = t1044 + t1049;
  t998 = -0.766044*t995;
  t1029 = 0.642788*t1013;
  t1036 = t998 + t1029;
  t1454 = t173*t1443;
  t1481 = t625*t1474;
  t1483 = t1454 + t1481;
  t1557 = t625*t1443;
  t1584 = -1.*t173*t1474;
  t1619 = t1557 + t1584;
  t667 = 0.642788*t660;
  t732 = 0.766044*t714;
  t741 = t667 + t732;
  t1117 = 0.642788*t995;
  t1119 = 0.766044*t1013;
  t1128 = t1117 + t1119;
  t1041 = t741*t1036;
  t1149 = -1.*t1106*t1128;
  t11 = Cos(var1[8]);
  t1712 = -0.766044*t1483;
  t1716 = 0.642788*t1619;
  t1719 = t1712 + t1716;
  t1512 = 0.642788*t1483;
  t1627 = 0.766044*t1619;
  t1641 = t1512 + t1627;
  t1653 = t754*t213*t1106;
  t1669 = t758*t1036;
  t1679 = t1653 + t1669;
  t1697 = -1.*t1641*t1679;
  t1724 = t754*t213*t741;
  t1732 = t758*t1128;
  t1740 = t1724 + t1732;
  t1747 = t1719*t1740;
  t1751 = t1041 + t1149;
  t1754 = -1.*t213*t774*t1751;
  t1775 = 0. + t1697 + t1747 + t1754;
  t1782 = 1/t1775;
  t53 = Sin(var1[7]);
  t1849 = Sin(var1[8]);
  t1794 = Cos(var1[7]);
  t2200 = Cos(var1[9]);
  t2220 = Sin(var1[9]);
  t2187 = Cos(var1[10]);
  t2268 = t1794*t2200;
  t2298 = -1.*t53*t1849*t2220;
  t2299 = t2268 + t2298;
  t2205 = t2200*t53*t1849;
  t2232 = t1794*t2220;
  t2245 = t2205 + t2232;
  t2329 = Sin(var1[10]);
  t2181 = Cos(var1[11]);
  t2369 = t2187*t2299;
  t2381 = -1.*t2245*t2329;
  t2383 = t2369 + t2381;
  t2264 = t2187*t2245;
  t2339 = t2299*t2329;
  t2348 = t2264 + t2339;
  t2390 = Sin(var1[11]);
  t2177 = Cos(var1[12]);
  t2425 = t2181*t2383;
  t2445 = -1.*t2348*t2390;
  t2446 = t2425 + t2445;
  t2359 = t2181*t2348;
  t2393 = t2383*t2390;
  t2403 = t2359 + t2393;
  t2449 = Sin(var1[12]);
  t2168 = Cos(var1[13]);
  t2461 = t2177*t2446;
  t2470 = -1.*t2403*t2449;
  t2471 = t2461 + t2470;
  t2413 = t2177*t2403;
  t2457 = t2446*t2449;
  t2459 = t2413 + t2457;
  t2480 = Sin(var1[13]);
  t1150 = 0. + t1041 + t1149;
  t2599 = -1.*t2200*t53;
  t2601 = -1.*t1794*t1849*t2220;
  t2603 = t2599 + t2601;
  t2580 = t1794*t2200*t1849;
  t2594 = -1.*t53*t2220;
  t2595 = t2580 + t2594;
  t2629 = t2187*t2603;
  t2632 = -1.*t2595*t2329;
  t2659 = t2629 + t2632;
  t2597 = t2187*t2595;
  t2613 = t2603*t2329;
  t2615 = t2597 + t2613;
  t2704 = t2181*t2659;
  t2715 = -1.*t2615*t2390;
  t2724 = t2704 + t2715;
  t2622 = t2181*t2615;
  t2665 = t2659*t2390;
  t2689 = t2622 + t2665;
  t2737 = t2177*t2724;
  t2749 = -1.*t2689*t2449;
  t2766 = t2737 + t2749;
  t2703 = t2177*t2689;
  t2729 = t2724*t2449;
  t2732 = t2703 + t2729;
  t1818 = -1.*t741*t1719;
  t1843 = t1106*t1641;
  t1845 = 0. + t1818 + t1843;
  t2913 = -1.*t11*t2187*t2220;
  t2915 = -1.*t11*t2200*t2329;
  t2916 = t2913 + t2915;
  t2884 = t11*t2200*t2187;
  t2891 = -1.*t11*t2220*t2329;
  t2892 = t2884 + t2891;
  t2938 = t2181*t2916;
  t2939 = -1.*t2892*t2390;
  t2943 = t2938 + t2939;
  t2902 = t2181*t2892;
  t2923 = t2916*t2390;
  t2924 = t2902 + t2923;
  t2957 = t2177*t2943;
  t2960 = -1.*t2924*t2449;
  t2996 = t2957 + t2960;
  t2935 = t2177*t2924;
  t2951 = t2943*t2449;
  t2952 = t2935 + t2951;
  t1850 = t1128*t1719;
  t1854 = -1.*t1036*t1641;
  t1859 = 0. + t1850 + t1854;
  t2460 = t2168*t2459;
  t2497 = t2471*t2480;
  t2503 = t2460 + t2497;
  t2506 = 0.642788*t2503;
  t2511 = t2168*t2471;
  t2516 = -1.*t2459*t2480;
  t2518 = t2511 + t2516;
  t2527 = 0.766044*t2518;
  t2559 = t2506 + t2527;
  t1869 = -1.*t754*t213*t1106;
  t1877 = -1.*t758*t1036;
  t1920 = 0. + t1869 + t1877;
  t2954 = t2168*t2952;
  t2999 = t2996*t2480;
  t3005 = t2954 + t2999;
  t3010 = 0.642788*t3005;
  t3013 = t2168*t2996;
  t3015 = -1.*t2952*t2480;
  t3016 = t3013 + t3015;
  t3025 = 0.766044*t3016;
  t3030 = t3010 + t3025;
  t1942 = -1.*t213*t774*t1036;
  t1952 = t754*t213*t1719;
  t1957 = 0. + t1942 + t1952;
  t2734 = t2168*t2732;
  t2772 = t2766*t2480;
  t2794 = t2734 + t2772;
  t2799 = 0.642788*t2794;
  t2806 = t2168*t2766;
  t2807 = -1.*t2732*t2480;
  t2813 = t2806 + t2807;
  t2817 = 0.766044*t2813;
  t2842 = t2799 + t2817;
  t1990 = t213*t774*t1106;
  t2009 = t758*t1719;
  t2012 = 0. + t1990 + t2009;
  t2025 = 0. + t1724 + t1732;
  t2047 = t213*t774*t1128;
  t2087 = -1.*t754*t213*t1641;
  t2091 = 0. + t2047 + t2087;
  t2117 = -1.*t213*t774*t741;
  t2132 = -1.*t758*t1641;
  t2140 = 0. + t2117 + t2132;
  t3099 = -0.766044*t2503;
  t3103 = 0.642788*t2518;
  t3104 = t3099 + t3103;
  t3122 = -0.766044*t3005;
  t3123 = 0.642788*t3016;
  t3138 = t3122 + t3123;
  t3110 = -0.766044*t2794;
  t3114 = 0.642788*t2813;
  t3118 = t3110 + t3114;
  t3269 = -1.*t2200;
  t3275 = 1. + t3269;
  t3366 = -1.*t2187;
  t3368 = 1. + t3366;
  t3495 = -1.*t2181;
  t3499 = 1. + t3495;
  t3597 = -1.*t2177;
  t3612 = 1. + t3597;
  t3698 = -1.*t2168;
  t3699 = 1. + t3698;
  t3204 = -1.*t11;
  t3209 = 1. + t3204;
  t3216 = -0.135*t3209;
  t3245 = 0.049*t1849;
  t3253 = 0. + t3216 + t3245;
  t3278 = -0.049*t3275;
  t3306 = -0.09*t2220;
  t3317 = 0. + t3278 + t3306;
  t3334 = -0.09*t3275;
  t3337 = 0.049*t2220;
  t3351 = 0. + t3334 + t3337;
  t3416 = -0.049*t3368;
  t3418 = -0.21*t2329;
  t3423 = 0. + t3416 + t3418;
  t3430 = -0.21*t3368;
  t3440 = 0.049*t2329;
  t3465 = 0. + t3430 + t3440;
  t3500 = -0.0016*t3499;
  t3505 = -0.2707*t2390;
  t3515 = 0. + t3500 + t3505;
  t3538 = -0.2707*t3499;
  t3570 = 0.0016*t2390;
  t3574 = 0. + t3538 + t3570;
  t3617 = 0.0184*t3612;
  t3619 = -0.7055*t2449;
  t3620 = 0. + t3617 + t3619;
  t3651 = -0.7055*t3612;
  t3659 = -0.0184*t2449;
  t3685 = 0. + t3651 + t3659;
  t3708 = -0.0216*t3699;
  t3709 = -1.1135*t2480;
  t3710 = 0. + t3708 + t3709;
  t3717 = -1.1135*t3699;
  t3723 = 0.0216*t2480;
  t3744 = 0. + t3717 + t3723;
  t4129 = -1.*t253;
  t4130 = 1. + t4129;
  t4177 = -1.*t360;
  t4179 = 1. + t4177;
  t4243 = -1.*t416;
  t4246 = 1. + t4243;
  t4281 = -1.*t443;
  t4282 = 1. + t4281;
  t4329 = -1.*t625;
  t4333 = 1. + t4329;
  t4108 = -1.*t213;
  t4111 = 1. + t4108;
  t4194 = -0.049*t4179;
  t4203 = -0.21*t259;
  t4207 = 0. + t4194 + t4203;
  t4134 = -0.049*t4130;
  t4136 = -0.09*t377;
  t4140 = 0. + t4134 + t4136;
  t4210 = -0.21*t4179;
  t4212 = 0.049*t259;
  t4218 = 0. + t4210 + t4212;
  t4248 = -0.2707*t4246;
  t4253 = 0.0016*t207;
  t4264 = 0. + t4248 + t4253;
  t4277 = -0.0016*t4246;
  t4278 = -0.2707*t207;
  t4279 = 0. + t4277 + t4278;
  t4284 = 0.0184*t4282;
  t4288 = -0.7055*t180;
  t4291 = 0. + t4284 + t4288;
  t4298 = -0.7055*t4282;
  t4313 = -0.0184*t180;
  t4319 = 0. + t4298 + t4313;
  t4343 = -1.1135*t4333;
  t4345 = 0.0216*t173;
  t4355 = 0. + t4343 + t4345;
  t4367 = -0.0216*t4333;
  t4368 = -1.1135*t173;
  t4386 = 0. + t4367 + t4368;
  t4080 = -1.*t754;
  t4088 = 1. + t4080;
  t4093 = 0.135*t4088;
  t4105 = 0.1305*t754*t213;
  t4112 = 0.135*t4111;
  t4115 = 0.049*t758;
  t4119 = 0. + t4112 + t4115;
  t4126 = t754*t4119;
  t4141 = t754*t758*t4140;
  t4151 = -0.09*t4130;
  t4154 = 0.049*t377;
  t4166 = 0. + t4151 + t4154;
  t4169 = -1.*t774*t4166;
  t4208 = t4207*t787;
  t4223 = t4218*t812;
  t4271 = t4264*t833;
  t4280 = t4279*t875;
  t4292 = t4291*t881;
  t4324 = t4319*t922;
  t4359 = t4355*t925;
  t4408 = t4386*t953;
  t4418 = 0.0306*t995;
  t4425 = -1.1312*t1013;
  t4432 = 0. + t4093 + t4105 + t4126 + t4141 + t4169 + t4208 + t4223 + t4271 + t4280 + t4292 + t4324 + t4359 + t4408 + t4418 + t4425;
  t4445 = -0.049*t4111;
  t4459 = t213*t253*t4207;
  t4463 = 0.004500000000000004*t758;
  t4465 = t213*t4140;
  t4475 = -1.*t213*t4218*t377;
  t4477 = t4264*t396;
  t4478 = t4279*t430;
  t4479 = t4291*t436;
  t4483 = t4319*t469;
  t4487 = t4355*t506;
  t4490 = t4386*t653;
  t4496 = 0.0306*t660;
  t4504 = -1.1312*t714;
  t4506 = 0. + t4445 + t4459 + t4463 + t4465 + t4475 + t4477 + t4478 + t4479 + t4483 + t4487 + t4490 + t4496 + t4504;
  t3191 = 0.135*t53;
  t3197 = -0.1305*t11*t53;
  t3268 = t53*t3253;
  t3318 = t53*t1849*t3317;
  t3361 = t1794*t3351;
  t3424 = t2245*t3423;
  t3490 = t2299*t3465;
  t3523 = t2348*t3515;
  t3595 = t2383*t3574;
  t3642 = t2403*t3620;
  t3686 = t2446*t3685;
  t3716 = t2459*t3710;
  t3751 = t2471*t3744;
  t3753 = 0.0306*t2503;
  t3754 = -1.1312*t2518;
  t3770 = 0. + t3191 + t3197 + t3268 + t3318 + t3361 + t3424 + t3490 + t3523 + t3595 + t3642 + t3686 + t3716 + t3751 + t3753 + t3754;
  t3959 = -0.049*t3209;
  t3971 = -0.004500000000000004*t1849;
  t3977 = t11*t3317;
  t3996 = t11*t2200*t3423;
  t4011 = -1.*t11*t2220*t3465;
  t4013 = t2892*t3515;
  t4022 = t2916*t3574;
  t4026 = t2924*t3620;
  t4032 = t2943*t3685;
  t4044 = t2952*t3710;
  t4049 = t2996*t3744;
  t4052 = 0.0306*t3005;
  t4059 = -1.1312*t3016;
  t4060 = 0. + t3959 + t3971 + t3977 + t3996 + t4011 + t4013 + t4022 + t4026 + t4032 + t4044 + t4049 + t4052 + t4059;
  t3792 = -1.*t1794;
  t3796 = 1. + t3792;
  t3801 = -0.135*t3796;
  t3809 = -0.1305*t1794*t11;
  t3816 = t1794*t3253;
  t3831 = t1794*t1849*t3317;
  t3847 = -1.*t53*t3351;
  t3849 = t2595*t3423;
  t3859 = t2603*t3465;
  t3864 = t2615*t3515;
  t3865 = t2659*t3574;
  t3870 = t2689*t3620;
  t3885 = t2724*t3685;
  t3887 = t2732*t3710;
  t3917 = t2766*t3744;
  t3929 = 0.0306*t2794;
  t3944 = -1.1312*t2813;
  t3950 = 0. + t3801 + t3809 + t3816 + t3831 + t3847 + t3849 + t3859 + t3864 + t3865 + t3870 + t3885 + t3887 + t3917 + t3929 + t3944;
  t4581 = -0.135*t774;
  t4590 = 0.1305*t213*t774;
  t4596 = t774*t4119;
  t4604 = t774*t758*t4140;
  t4616 = t754*t4166;
  t4621 = t4207*t1191;
  t4627 = t4218*t1244;
  t4641 = t4264*t1286;
  t4645 = t4279*t1348;
  t4646 = t4291*t1368;
  t4649 = t4319*t1431;
  t4651 = t4355*t1443;
  t4664 = t4386*t1474;
  t4676 = 0.0306*t1483;
  t4699 = -1.1312*t1619;
  t4714 = 0. + t4581 + t4590 + t4596 + t4604 + t4616 + t4621 + t4627 + t4641 + t4645 + t4646 + t4649 + t4651 + t4664 + t4676 + t4699;
  t4435 = t1106*t4432;
  t4529 = -1.*t4506*t1036;
  t4546 = t4435 + t4529;
  t4774 = t754*t213*t4506;
  t4781 = t758*t4432;
  t4791 = t4774 + t4781;
  t4564 = t741*t4432;
  t4569 = -1.*t4506*t1128;
  t4578 = t4564 + t4569;

  p_output1(0)=0. - 1.*t11*t1782*t1794*t1845 + t1782*t1849*t1859 - 1.*t11*t1150*t1782*t53;
  p_output1(1)=0. + t1782*t1849*t1957 - 1.*t11*t1782*t1794*t2012 - 1.*t11*t1782*t1920*t53;
  p_output1(2)=0. + t1782*t1849*t2091 - 1.*t11*t1782*t1794*t2140 - 1.*t11*t1782*t2025*t53;
  p_output1(3)=0.;
  p_output1(4)=0. + t1150*t1782*t2559 + t1782*t1845*t2842 + t1782*t1859*t3030;
  p_output1(5)=0. + t1782*t1920*t2559 + t1782*t2012*t2842 + t1782*t1957*t3030;
  p_output1(6)=0. + t1782*t2025*t2559 + t1782*t2140*t2842 + t1782*t2091*t3030;
  p_output1(7)=0.;
  p_output1(8)=0. + t1150*t1782*t3104 + t1782*t1845*t3118 + t1782*t1859*t3138;
  p_output1(9)=0. + t1782*t1920*t3104 + t1782*t2012*t3118 + t1782*t1957*t3138;
  p_output1(10)=0. + t1782*t2025*t3104 + t1782*t2140*t3118 + t1782*t2091*t3138;
  p_output1(11)=0.;
  p_output1(12)=t1150*t1782*t3770 + t1782*t1845*t3950 + t1782*t1859*t4060 + t1782*(-1.*t1641*t4546 + t1719*t4578 - 1.*t1751*t4714);
  p_output1(13)=t1782*t1920*t3770 + t1782*t2012*t3950 + t1782*t1957*t4060 + t1782*(t1679*t4714 - 1.*t1719*t4791 - 1.*t213*t4546*t774);
  p_output1(14)=t1782*t2025*t3770 + t1782*t2140*t3950 + t1782*t2091*t4060 + t1782*(-1.*t1740*t4714 + t1641*t4791 + t213*t4578*t774);
  p_output1(15)=0. + (t1697 + t1747 + t1754)*t1782;
}


       
Eigen::Matrix<double,4,4> H_LeftToeBottom_to_RightToeBottom(const Eigen::Matrix<double,14,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,4,4>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



