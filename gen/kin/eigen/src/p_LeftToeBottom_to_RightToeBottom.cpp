/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 23:02:53 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "p_LeftToeBottom_to_RightToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,1> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t46;
  double t205;
  double t850;
  double t959;
  double t969;
  double t978;
  double t1133;
  double t1219;
  double t1380;
  double t1451;
  double t1454;
  double t1642;
  double t1322;
  double t1360;
  double t1371;
  double t1712;
  double t1724;
  double t1731;
  double t2009;
  double t2022;
  double t2024;
  double t2119;
  double t1976;
  double t1990;
  double t2002;
  double t2174;
  double t2176;
  double t2205;
  double t2371;
  double t2374;
  double t2393;
  double t2460;
  double t2341;
  double t2355;
  double t2370;
  double t2511;
  double t2512;
  double t2530;
  double t2631;
  double t2640;
  double t2659;
  double t2721;
  double t2618;
  double t2622;
  double t2629;
  double t2774;
  double t2791;
  double t2794;
  double t3272;
  double t3334;
  double t3274;
  double t3306;
  double t3337;
  double t3376;
  double t3311;
  double t3343;
  double t3361;
  double t3268;
  double t3387;
  double t3388;
  double t3444;
  double t3550;
  double t3370;
  double t3504;
  double t3505;
  double t3251;
  double t3584;
  double t3591;
  double t3642;
  double t3754;
  double t3548;
  double t3680;
  double t3696;
  double t3216;
  double t3775;
  double t3780;
  double t3782;
  double t3882;
  double t3864;
  double t3865;
  double t3870;
  double t3895;
  double t3907;
  double t3915;
  double t3917;
  double t3922;
  double t3912;
  double t3944;
  double t3951;
  double t3971;
  double t3976;
  double t3977;
  double t3954;
  double t3996;
  double t4000;
  double t4025;
  double t4032;
  double t4035;
  double t4012;
  double t4050;
  double t4059;
  double t4097;
  double t4105;
  double t4112;
  double t3751;
  double t3800;
  double t3801;
  double t3825;
  double t3836;
  double t3838;
  double t4093;
  double t4134;
  double t4140;
  double t4183;
  double t4205;
  double t4207;
  double t4320;
  double t4324;
  double t4340;
  double t4343;
  double t4348;
  double t4355;
  double t4342;
  double t4367;
  double t4368;
  double t4418;
  double t4432;
  double t4435;
  double t4409;
  double t4452;
  double t4465;
  double t4483;
  double t4487;
  double t4490;
  double t4477;
  double t4496;
  double t4501;
  double t4563;
  double t4564;
  double t4580;
  double t4248;
  double t4277;
  double t4280;
  double t4154;
  double t4210;
  double t4231;
  double t4528;
  double t4581;
  double t4587;
  double t4601;
  double t4603;
  double t4609;
  double t3816;
  double t3842;
  double t3849;
  double t4284;
  double t4288;
  double t4291;
  double t4234;
  double t4298;
  double t577;
  double t605;
  double t718;
  double t878;
  double t898;
  double t1074;
  double t1164;
  double t1165;
  double t1244;
  double t1277;
  double t1283;
  double t1557;
  double t1659;
  double t1674;
  double t1733;
  double t1747;
  double t1775;
  double t4815;
  double t4828;
  double t4856;
  double t4865;
  double t4866;
  double t4896;
  double t2112;
  double t2124;
  double t2143;
  double t2265;
  double t2266;
  double t2292;
  double t4941;
  double t4946;
  double t4948;
  double t4964;
  double t4982;
  double t4992;
  double t2457;
  double t2494;
  double t2502;
  double t2561;
  double t2569;
  double t2593;
  double t5002;
  double t5012;
  double t5020;
  double t5034;
  double t5037;
  double t5044;
  double t2701;
  double t2724;
  double t2729;
  double t2799;
  double t2848;
  double t2860;
  double t5051;
  double t5066;
  double t5068;
  double t5090;
  double t5094;
  double t5104;
  double t4646;
  double t4649;
  double t4651;
  double t4590;
  double t4610;
  double t4616;
  double t4621;
  double t4628;
  double t4637;
  double t4641;
  double t4664;
  double t4699;
  double t4701;
  double t4708;
  double t4726;
  double t4730;
  double t4734;
  double t4741;
  double t5221;
  double t5223;
  double t5240;
  double t5251;
  double t5253;
  double t5257;
  double t5269;
  double t5290;
  double t5303;
  double t5317;
  double t5320;
  double t5323;
  double t5338;
  double t5345;
  double t5351;
  double t5356;
  double t5361;
  double t5367;
  double t5500;
  double t5502;
  double t5640;
  double t5642;
  double t5731;
  double t5753;
  double t5803;
  double t5806;
  double t5850;
  double t5857;
  double t5466;
  double t5468;
  double t5643;
  double t5658;
  double t5661;
  double t5516;
  double t5523;
  double t5550;
  double t5691;
  double t5702;
  double t5710;
  double t5755;
  double t5757;
  double t5766;
  double t5785;
  double t5790;
  double t5798;
  double t5810;
  double t5812;
  double t5817;
  double t5827;
  double t5835;
  double t5836;
  double t5859;
  double t5876;
  double t5877;
  double t5886;
  double t5896;
  double t5901;
  double t5446;
  double t5451;
  double t5461;
  double t5463;
  double t5482;
  double t5491;
  double t5494;
  double t5498;
  double t5555;
  double t5556;
  double t5557;
  double t5623;
  double t5631;
  double t5664;
  double t5726;
  double t5769;
  double t5800;
  double t5823;
  double t5841;
  double t5878;
  double t5908;
  double t5912;
  double t5916;
  double t5923;
  double t5929;
  double t5932;
  double t5933;
  double t5934;
  double t5935;
  double t5938;
  double t5940;
  double t5944;
  double t5947;
  double t5954;
  double t5955;
  double t5962;
  double t5965;
  double t5970;
  double t162;
  double t359;
  double t917;
  double t1180;
  double t1314;
  double t1684;
  double t1868;
  double t2156;
  double t2319;
  double t2503;
  double t2607;
  double t2735;
  double t2884;
  double t2923;
  double t3020;
  double t3060;
  double t3100;
  double t3103;
  double t3104;
  double t3144;
  double t3162;
  double t3178;
  double t5176;
  double t5187;
  double t5198;
  double t5204;
  double t5216;
  double t5247;
  double t5258;
  double t5311;
  double t5335;
  double t5352;
  double t5380;
  double t5383;
  double t5387;
  double t5389;
  double t5401;
  double t5406;
  double t5420;
  double t5421;
  double t5432;
  double t5433;
  double t4747;
  double t4774;
  double t4797;
  double t4803;
  double t4806;
  double t4813;
  double t4814;
  double t4863;
  double t4930;
  double t4952;
  double t4996;
  double t5021;
  double t5045;
  double t5072;
  double t5107;
  double t5110;
  double t5117;
  double t5118;
  double t5138;
  double t5139;
  double t5144;
  double t5145;
  double t5148;
  double t5149;
  double t6025;
  double t6029;
  double t6034;
  double t6038;
  double t6040;
  double t6042;
  double t6045;
  double t6054;
  double t6057;
  double t6058;
  double t6071;
  double t6083;
  double t6085;
  double t6086;
  double t6087;
  double t6090;
  double t5924;
  double t5977;
  double t5985;
  double t6181;
  double t6192;
  double t6196;
  double t5996;
  double t6005;
  double t6020;
  t46 = Sin(var1[7]);
  t205 = Cos(var1[8]);
  t850 = Sin(var1[8]);
  t959 = Cos(var1[9]);
  t969 = -1.*t959;
  t978 = 1. + t969;
  t1133 = Sin(var1[9]);
  t1219 = Cos(var1[7]);
  t1380 = Cos(var1[10]);
  t1451 = -1.*t1380;
  t1454 = 1. + t1451;
  t1642 = Sin(var1[10]);
  t1322 = t959*t46*t850;
  t1360 = t1219*t1133;
  t1371 = t1322 + t1360;
  t1712 = t1219*t959;
  t1724 = -1.*t46*t850*t1133;
  t1731 = t1712 + t1724;
  t2009 = Cos(var1[11]);
  t2022 = -1.*t2009;
  t2024 = 1. + t2022;
  t2119 = Sin(var1[11]);
  t1976 = t1380*t1371;
  t1990 = t1731*t1642;
  t2002 = t1976 + t1990;
  t2174 = t1380*t1731;
  t2176 = -1.*t1371*t1642;
  t2205 = t2174 + t2176;
  t2371 = Cos(var1[12]);
  t2374 = -1.*t2371;
  t2393 = 1. + t2374;
  t2460 = Sin(var1[12]);
  t2341 = t2009*t2002;
  t2355 = t2205*t2119;
  t2370 = t2341 + t2355;
  t2511 = t2009*t2205;
  t2512 = -1.*t2002*t2119;
  t2530 = t2511 + t2512;
  t2631 = Cos(var1[13]);
  t2640 = -1.*t2631;
  t2659 = 1. + t2640;
  t2721 = Sin(var1[13]);
  t2618 = t2371*t2370;
  t2622 = t2530*t2460;
  t2629 = t2618 + t2622;
  t2774 = t2371*t2530;
  t2791 = -1.*t2370*t2460;
  t2794 = t2774 + t2791;
  t3272 = Cos(var1[1]);
  t3334 = Cos(var1[3]);
  t3274 = Cos(var1[2]);
  t3306 = Sin(var1[3]);
  t3337 = Sin(var1[2]);
  t3376 = Cos(var1[4]);
  t3311 = -1.*t3272*t3274*t3306;
  t3343 = -1.*t3334*t3272*t3337;
  t3361 = t3311 + t3343;
  t3268 = Sin(var1[4]);
  t3387 = t3334*t3272*t3274;
  t3388 = -1.*t3272*t3306*t3337;
  t3444 = t3387 + t3388;
  t3550 = Cos(var1[5]);
  t3370 = t3268*t3361;
  t3504 = t3376*t3444;
  t3505 = t3370 + t3504;
  t3251 = Sin(var1[5]);
  t3584 = t3376*t3361;
  t3591 = -1.*t3268*t3444;
  t3642 = t3584 + t3591;
  t3754 = Cos(var1[6]);
  t3548 = -1.*t3251*t3505;
  t3680 = t3550*t3642;
  t3696 = t3548 + t3680;
  t3216 = Sin(var1[6]);
  t3775 = t3550*t3505;
  t3780 = t3251*t3642;
  t3782 = t3775 + t3780;
  t3882 = Sin(var1[0]);
  t3864 = Cos(var1[0]);
  t3865 = Sin(var1[1]);
  t3870 = t3864*t3274*t3865;
  t3895 = -1.*t3882*t3337;
  t3907 = t3870 + t3895;
  t3915 = -1.*t3274*t3882;
  t3917 = -1.*t3864*t3865*t3337;
  t3922 = t3915 + t3917;
  t3912 = -1.*t3306*t3907;
  t3944 = t3334*t3922;
  t3951 = t3912 + t3944;
  t3971 = t3334*t3907;
  t3976 = t3306*t3922;
  t3977 = t3971 + t3976;
  t3954 = t3268*t3951;
  t3996 = t3376*t3977;
  t4000 = t3954 + t3996;
  t4025 = t3376*t3951;
  t4032 = -1.*t3268*t3977;
  t4035 = t4025 + t4032;
  t4012 = -1.*t3251*t4000;
  t4050 = t3550*t4035;
  t4059 = t4012 + t4050;
  t4097 = t3550*t4000;
  t4105 = t3251*t4035;
  t4112 = t4097 + t4105;
  t3751 = t3216*t3696;
  t3800 = t3754*t3782;
  t3801 = t3751 + t3800;
  t3825 = t3754*t3696;
  t3836 = -1.*t3216*t3782;
  t3838 = t3825 + t3836;
  t4093 = t3216*t4059;
  t4134 = t3754*t4112;
  t4140 = t4093 + t4134;
  t4183 = t3754*t4059;
  t4205 = -1.*t3216*t4112;
  t4207 = t4183 + t4205;
  t4320 = t3274*t3882*t3865;
  t4324 = t3864*t3337;
  t4340 = t4320 + t4324;
  t4343 = t3864*t3274;
  t4348 = -1.*t3882*t3865*t3337;
  t4355 = t4343 + t4348;
  t4342 = -1.*t3306*t4340;
  t4367 = t3334*t4355;
  t4368 = t4342 + t4367;
  t4418 = t3334*t4340;
  t4432 = t3306*t4355;
  t4435 = t4418 + t4432;
  t4409 = t3268*t4368;
  t4452 = t3376*t4435;
  t4465 = t4409 + t4452;
  t4483 = t3376*t4368;
  t4487 = -1.*t3268*t4435;
  t4490 = t4483 + t4487;
  t4477 = -1.*t3251*t4465;
  t4496 = t3550*t4490;
  t4501 = t4477 + t4496;
  t4563 = t3550*t4465;
  t4564 = t3251*t4490;
  t4580 = t4563 + t4564;
  t4248 = -0.766044*t3801;
  t4277 = 0.642788*t3838;
  t4280 = t4248 + t4277;
  t4154 = -0.766044*t4140;
  t4210 = 0.642788*t4207;
  t4231 = t4154 + t4210;
  t4528 = t3216*t4501;
  t4581 = t3754*t4580;
  t4587 = t4528 + t4581;
  t4601 = t3754*t4501;
  t4603 = -1.*t3216*t4580;
  t4609 = t4601 + t4603;
  t3816 = 0.642788*t3801;
  t3842 = 0.766044*t3838;
  t3849 = t3816 + t3842;
  t4284 = 0.642788*t4140;
  t4288 = 0.766044*t4207;
  t4291 = t4284 + t4288;
  t4234 = t3849*t4231;
  t4298 = -1.*t4280*t4291;
  t577 = -1.*t205;
  t605 = 1. + t577;
  t718 = -0.135*t605;
  t878 = 0.049*t850;
  t898 = 0. + t718 + t878;
  t1074 = -0.049*t978;
  t1164 = -0.09*t1133;
  t1165 = 0. + t1074 + t1164;
  t1244 = -0.09*t978;
  t1277 = 0.049*t1133;
  t1283 = 0. + t1244 + t1277;
  t1557 = -0.049*t1454;
  t1659 = -0.21*t1642;
  t1674 = 0. + t1557 + t1659;
  t1733 = -0.21*t1454;
  t1747 = 0.049*t1642;
  t1775 = 0. + t1733 + t1747;
  t4815 = t1219*t959*t850;
  t4828 = -1.*t46*t1133;
  t4856 = t4815 + t4828;
  t4865 = -1.*t959*t46;
  t4866 = -1.*t1219*t850*t1133;
  t4896 = t4865 + t4866;
  t2112 = -0.0016*t2024;
  t2124 = -0.2707*t2119;
  t2143 = 0. + t2112 + t2124;
  t2265 = -0.2707*t2024;
  t2266 = 0.0016*t2119;
  t2292 = 0. + t2265 + t2266;
  t4941 = t1380*t4856;
  t4946 = t4896*t1642;
  t4948 = t4941 + t4946;
  t4964 = t1380*t4896;
  t4982 = -1.*t4856*t1642;
  t4992 = t4964 + t4982;
  t2457 = 0.0184*t2393;
  t2494 = -0.7055*t2460;
  t2502 = 0. + t2457 + t2494;
  t2561 = -0.7055*t2393;
  t2569 = -0.0184*t2460;
  t2593 = 0. + t2561 + t2569;
  t5002 = t2009*t4948;
  t5012 = t4992*t2119;
  t5020 = t5002 + t5012;
  t5034 = t2009*t4992;
  t5037 = -1.*t4948*t2119;
  t5044 = t5034 + t5037;
  t2701 = -0.0216*t2659;
  t2724 = -1.1135*t2721;
  t2729 = 0. + t2701 + t2724;
  t2799 = -1.1135*t2659;
  t2848 = 0.0216*t2721;
  t2860 = 0. + t2799 + t2848;
  t5051 = t2371*t5020;
  t5066 = t5044*t2460;
  t5068 = t5051 + t5066;
  t5090 = t2371*t5044;
  t5094 = -1.*t5020*t2460;
  t5104 = t5090 + t5094;
  t4646 = -0.766044*t4587;
  t4649 = 0.642788*t4609;
  t4651 = t4646 + t4649;
  t4590 = 0.642788*t4587;
  t4610 = 0.766044*t4609;
  t4616 = t4590 + t4610;
  t4621 = t3864*t3272*t4280;
  t4628 = t3865*t4231;
  t4637 = t4621 + t4628;
  t4641 = -1.*t4616*t4637;
  t4664 = t3864*t3272*t3849;
  t4699 = t3865*t4291;
  t4701 = t4664 + t4699;
  t4708 = t4651*t4701;
  t4726 = t4234 + t4298;
  t4730 = -1.*t3272*t3882*t4726;
  t4734 = 0. + t4641 + t4708 + t4730;
  t4741 = 1/t4734;
  t5221 = t205*t959*t1380;
  t5223 = -1.*t205*t1133*t1642;
  t5240 = t5221 + t5223;
  t5251 = -1.*t205*t1380*t1133;
  t5253 = -1.*t205*t959*t1642;
  t5257 = t5251 + t5253;
  t5269 = t2009*t5240;
  t5290 = t5257*t2119;
  t5303 = t5269 + t5290;
  t5317 = t2009*t5257;
  t5320 = -1.*t5240*t2119;
  t5323 = t5317 + t5320;
  t5338 = t2371*t5303;
  t5345 = t5323*t2460;
  t5351 = t5338 + t5345;
  t5356 = t2371*t5323;
  t5361 = -1.*t5303*t2460;
  t5367 = t5356 + t5361;
  t5500 = -1.*t3274;
  t5502 = 1. + t5500;
  t5640 = -1.*t3334;
  t5642 = 1. + t5640;
  t5731 = -1.*t3376;
  t5753 = 1. + t5731;
  t5803 = -1.*t3550;
  t5806 = 1. + t5803;
  t5850 = -1.*t3754;
  t5857 = 1. + t5850;
  t5466 = -1.*t3272;
  t5468 = 1. + t5466;
  t5643 = -0.049*t5642;
  t5658 = -0.21*t3306;
  t5661 = 0. + t5643 + t5658;
  t5516 = -0.049*t5502;
  t5523 = -0.09*t3337;
  t5550 = 0. + t5516 + t5523;
  t5691 = -0.21*t5642;
  t5702 = 0.049*t3306;
  t5710 = 0. + t5691 + t5702;
  t5755 = -0.2707*t5753;
  t5757 = 0.0016*t3268;
  t5766 = 0. + t5755 + t5757;
  t5785 = -0.0016*t5753;
  t5790 = -0.2707*t3268;
  t5798 = 0. + t5785 + t5790;
  t5810 = 0.0184*t5806;
  t5812 = -0.7055*t3251;
  t5817 = 0. + t5810 + t5812;
  t5827 = -0.7055*t5806;
  t5835 = -0.0184*t3251;
  t5836 = 0. + t5827 + t5835;
  t5859 = -1.1135*t5857;
  t5876 = 0.0216*t3216;
  t5877 = 0. + t5859 + t5876;
  t5886 = -0.0216*t5857;
  t5896 = -1.1135*t3216;
  t5901 = 0. + t5886 + t5896;
  t5446 = -1.*t3864;
  t5451 = 1. + t5446;
  t5461 = 0.135*t5451;
  t5463 = 0.1305*t3864*t3272;
  t5482 = 0.135*t5468;
  t5491 = 0.049*t3865;
  t5494 = 0. + t5482 + t5491;
  t5498 = t3864*t5494;
  t5555 = t3864*t3865*t5550;
  t5556 = -0.09*t5502;
  t5557 = 0.049*t3337;
  t5623 = 0. + t5556 + t5557;
  t5631 = -1.*t3882*t5623;
  t5664 = t5661*t3907;
  t5726 = t5710*t3922;
  t5769 = t5766*t3951;
  t5800 = t5798*t3977;
  t5823 = t5817*t4000;
  t5841 = t5836*t4035;
  t5878 = t5877*t4059;
  t5908 = t5901*t4112;
  t5912 = 0.0306*t4140;
  t5916 = -1.1312*t4207;
  t5923 = 0. + t5461 + t5463 + t5498 + t5555 + t5631 + t5664 + t5726 + t5769 + t5800 + t5823 + t5841 + t5878 + t5908 + t5912 + t5916;
  t5929 = -0.049*t5468;
  t5932 = t3272*t3274*t5661;
  t5933 = 0.004500000000000004*t3865;
  t5934 = t3272*t5550;
  t5935 = -1.*t3272*t5710*t3337;
  t5938 = t5766*t3361;
  t5940 = t5798*t3444;
  t5944 = t5817*t3505;
  t5947 = t5836*t3642;
  t5954 = t5877*t3696;
  t5955 = t5901*t3782;
  t5962 = 0.0306*t3801;
  t5965 = -1.1312*t3838;
  t5970 = 0. + t5929 + t5932 + t5933 + t5934 + t5935 + t5938 + t5940 + t5944 + t5947 + t5954 + t5955 + t5962 + t5965;
  t162 = 0.135*t46;
  t359 = -0.1305*t205*t46;
  t917 = t46*t898;
  t1180 = t46*t850*t1165;
  t1314 = t1219*t1283;
  t1684 = t1371*t1674;
  t1868 = t1731*t1775;
  t2156 = t2002*t2143;
  t2319 = t2205*t2292;
  t2503 = t2370*t2502;
  t2607 = t2530*t2593;
  t2735 = t2629*t2729;
  t2884 = t2794*t2860;
  t2923 = t2631*t2629;
  t3020 = t2794*t2721;
  t3060 = t2923 + t3020;
  t3100 = 0.0306*t3060;
  t3103 = t2631*t2794;
  t3104 = -1.*t2629*t2721;
  t3144 = t3103 + t3104;
  t3162 = -1.1312*t3144;
  t3178 = 0. + t162 + t359 + t917 + t1180 + t1314 + t1684 + t1868 + t2156 + t2319 + t2503 + t2607 + t2735 + t2884 + t3100 + t3162;
  t5176 = -0.049*t605;
  t5187 = -0.004500000000000004*t850;
  t5198 = t205*t1165;
  t5204 = t205*t959*t1674;
  t5216 = -1.*t205*t1133*t1775;
  t5247 = t5240*t2143;
  t5258 = t5257*t2292;
  t5311 = t5303*t2502;
  t5335 = t5323*t2593;
  t5352 = t5351*t2729;
  t5380 = t5367*t2860;
  t5383 = t2631*t5351;
  t5387 = t5367*t2721;
  t5389 = t5383 + t5387;
  t5401 = 0.0306*t5389;
  t5406 = t2631*t5367;
  t5420 = -1.*t5351*t2721;
  t5421 = t5406 + t5420;
  t5432 = -1.1312*t5421;
  t5433 = 0. + t5176 + t5187 + t5198 + t5204 + t5216 + t5247 + t5258 + t5311 + t5335 + t5352 + t5380 + t5401 + t5432;
  t4747 = -1.*t1219;
  t4774 = 1. + t4747;
  t4797 = -0.135*t4774;
  t4803 = -0.1305*t1219*t205;
  t4806 = t1219*t898;
  t4813 = t1219*t850*t1165;
  t4814 = -1.*t46*t1283;
  t4863 = t4856*t1674;
  t4930 = t4896*t1775;
  t4952 = t4948*t2143;
  t4996 = t4992*t2292;
  t5021 = t5020*t2502;
  t5045 = t5044*t2593;
  t5072 = t5068*t2729;
  t5107 = t5104*t2860;
  t5110 = t2631*t5068;
  t5117 = t5104*t2721;
  t5118 = t5110 + t5117;
  t5138 = 0.0306*t5118;
  t5139 = t2631*t5104;
  t5144 = -1.*t5068*t2721;
  t5145 = t5139 + t5144;
  t5148 = -1.1312*t5145;
  t5149 = 0. + t4797 + t4803 + t4806 + t4813 + t4814 + t4863 + t4930 + t4952 + t4996 + t5021 + t5045 + t5072 + t5107 + t5138 + t5148;
  t6025 = -0.135*t3882;
  t6029 = 0.1305*t3272*t3882;
  t6034 = t3882*t5494;
  t6038 = t3882*t3865*t5550;
  t6040 = t3864*t5623;
  t6042 = t5661*t4340;
  t6045 = t5710*t4355;
  t6054 = t5766*t4368;
  t6057 = t5798*t4435;
  t6058 = t5817*t4465;
  t6071 = t5836*t4490;
  t6083 = t5877*t4501;
  t6085 = t5901*t4580;
  t6086 = 0.0306*t4587;
  t6087 = -1.1312*t4609;
  t6090 = 0. + t6025 + t6029 + t6034 + t6038 + t6040 + t6042 + t6045 + t6054 + t6057 + t6058 + t6071 + t6083 + t6085 + t6086 + t6087;
  t5924 = t4280*t5923;
  t5977 = -1.*t5970*t4231;
  t5985 = t5924 + t5977;
  t6181 = t3864*t3272*t5970;
  t6192 = t3865*t5923;
  t6196 = t6181 + t6192;
  t5996 = t3849*t5923;
  t6005 = -1.*t5970*t4291;
  t6020 = t5996 + t6005;

  p_output1(0)=t3178*(0. + t4234 + t4298)*t4741 + (0. + t4280*t4616 - 1.*t3849*t4651)*t4741*t5149 + (0. - 1.*t4231*t4616 + t4291*t4651)*t4741*t5433 + t4741*(-1.*t4616*t5985 + t4651*t6020 - 1.*t4726*t6090);
  p_output1(1)=t3178*(0. - 1.*t3865*t4231 - 1.*t3272*t3864*t4280)*t4741 + (0. + t3272*t3882*t4280 + t3865*t4651)*t4741*t5149 + (0. - 1.*t3272*t3882*t4231 + t3272*t3864*t4651)*t4741*t5433 + t4741*(-1.*t3272*t3882*t5985 + t4637*t6090 - 1.*t4651*t6196);
  p_output1(2)=t3178*(0. + t4664 + t4699)*t4741 + (0. - 1.*t3272*t3849*t3882 - 1.*t3865*t4616)*t4741*t5149 + (0. + t3272*t3882*t4291 - 1.*t3272*t3864*t4616)*t4741*t5433 + t4741*(t3272*t3882*t6020 - 1.*t4701*t6090 + t4616*t6196);
}


       
Eigen::Matrix<double,3,1> p_LeftToeBottom_to_RightToeBottom(const Eigen::Matrix<double,14,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,1>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



