/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 22:44:42 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_LeftToeFront.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  double t216;
  double t313;
  double t421;
  double t162;
  double t436;
  double t15;
  double t235;
  double t493;
  double t501;
  double t521;
  double t528;
  double t532;
  double t557;
  double t831;
  double t887;
  double t898;
  double t993;
  double t801;
  double t804;
  double t805;
  double t1068;
  double t1396;
  double t1433;
  double t1445;
  double t1479;
  double t1332;
  double t1356;
  double t1387;
  double t1610;
  double t1612;
  double t1619;
  double t1735;
  double t1811;
  double t1812;
  double t1831;
  double t1898;
  double t1923;
  double t1949;
  double t2034;
  double t2050;
  double t2069;
  double t2078;
  double t2087;
  double t2102;
  double t2127;
  double t2154;
  double t2159;
  double t2163;
  double t2324;
  double t2394;
  double t2397;
  double t2464;
  double t2483;
  double t2486;
  double t2524;
  double t2620;
  double t2621;
  double t2682;
  double t2816;
  double t2835;
  double t2895;
  double t2912;
  double t2922;
  double t2954;
  double t2968;
  double t3034;
  double t3037;
  double t3095;
  double t3255;
  double t3294;
  double t3323;
  double t33;
  double t57;
  double t74;
  double t111;
  double t688;
  double t765;
  double t3481;
  double t3487;
  double t3503;
  double t3579;
  double t3637;
  double t3646;
  double t925;
  double t1003;
  double t1037;
  double t1102;
  double t1121;
  double t1152;
  double t3686;
  double t3713;
  double t3750;
  double t1450;
  double t1487;
  double t1531;
  double t1645;
  double t1689;
  double t1717;
  double t1828;
  double t1844;
  double t1883;
  double t3891;
  double t3892;
  double t3910;
  double t3981;
  double t3983;
  double t3996;
  double t1982;
  double t1989;
  double t2005;
  double t2124;
  double t2141;
  double t2146;
  double t4037;
  double t4042;
  double t4048;
  double t4060;
  double t4070;
  double t4072;
  double t2214;
  double t2237;
  double t2279;
  double t2522;
  double t2530;
  double t2582;
  double t4077;
  double t4083;
  double t4093;
  double t4116;
  double t4118;
  double t4121;
  double t2712;
  double t2754;
  double t2779;
  double t2958;
  double t2973;
  double t3003;
  double t4148;
  double t4161;
  double t4162;
  double t4201;
  double t4211;
  double t4212;
  double t3129;
  double t3135;
  double t3191;
  double t4232;
  double t4236;
  double t4249;
  double t4259;
  double t4264;
  double t4308;
  double t4574;
  double t4592;
  double t4601;
  double t4686;
  double t4687;
  double t4696;
  double t4728;
  double t4751;
  double t4767;
  double t4792;
  double t4794;
  double t4795;
  double t4809;
  double t4814;
  double t4826;
  double t4839;
  double t4849;
  double t4854;
  double t4901;
  double t4920;
  double t4934;
  double t4977;
  double t4994;
  double t4996;
  double t5036;
  double t5041;
  double t5048;
  double t5057;
  double t5063;
  double t5068;
  double t5081;
  double t5084;
  double t5094;
  double t5222;
  double t5255;
  double t5261;
  double t5392;
  double t5417;
  double t5428;
  double t5438;
  double t5470;
  double t5517;
  double t5536;
  double t5550;
  double t5561;
  double t5574;
  double t5579;
  double t5591;
  double t5613;
  double t5620;
  double t5624;
  double t5636;
  double t5638;
  double t5639;
  double t5663;
  double t5668;
  double t5671;
  double t5693;
  double t5695;
  double t5702;
  double t5725;
  double t5787;
  double t5851;
  double t5903;
  double t5930;
  double t5962;
  double t6073;
  double t6080;
  double t6081;
  double t6110;
  double t6112;
  double t6113;
  double t6121;
  double t6124;
  double t6130;
  double t6138;
  double t6139;
  double t6141;
  double t6152;
  double t6153;
  double t6154;
  double t6158;
  double t6167;
  double t6170;
  double t6177;
  double t6187;
  double t6189;
  double t6200;
  double t6231;
  double t6237;
  double t6244;
  double t6245;
  double t6257;
  double t6263;
  double t6277;
  double t6282;
  double t6293;
  double t6297;
  double t6300;
  double t6374;
  double t6384;
  double t6385;
  double t6399;
  double t6401;
  double t6424;
  double t6425;
  double t6426;
  double t6437;
  double t6444;
  double t6449;
  double t6456;
  double t6462;
  double t6474;
  double t6477;
  double t6482;
  double t6485;
  double t6489;
  double t6502;
  double t6503;
  double t6512;
  double t6515;
  double t6516;
  double t6531;
  double t6537;
  double t6540;
  double t6562;
  double t6567;
  double t6571;
  double t6581;
  double t6582;
  double t6588;
  double t6655;
  double t6659;
  double t6660;
  double t6679;
  double t6682;
  double t6683;
  double t6692;
  double t6693;
  double t6706;
  double t6707;
  double t6724;
  double t6730;
  double t6733;
  double t6737;
  double t6745;
  double t6750;
  double t6751;
  double t6766;
  double t6767;
  double t6780;
  double t6783;
  double t6798;
  double t6800;
  double t6821;
  double t6822;
  double t6835;
  double t6843;
  double t6847;
  double t6849;
  double t6856;
  double t6860;
  double t6862;
  double t6918;
  double t6922;
  double t6926;
  double t6946;
  double t6954;
  double t6957;
  double t6968;
  double t6972;
  double t6975;
  double t6979;
  double t6999;
  double t7001;
  double t7019;
  double t7024;
  double t7029;
  double t7043;
  double t7048;
  double t7085;
  double t7095;
  double t7102;
  double t7110;
  double t7132;
  double t7150;
  double t7156;
  double t7160;
  double t7172;
  double t7176;
  double t7189;
  double t7194;
  double t7203;
  double t7326;
  double t7328;
  double t7336;
  double t7346;
  double t7357;
  double t7363;
  double t7364;
  double t7368;
  double t7390;
  double t7392;
  double t7399;
  double t7406;
  double t7416;
  double t7422;
  double t7424;
  double t7431;
  double t7434;
  double t7459;
  double t7460;
  double t7462;
  double t7476;
  double t7484;
  double t7498;
  double t7523;
  double t7528;
  double t7530;
  double t7598;
  double t7602;
  double t7607;
  double t7618;
  double t7631;
  double t7659;
  double t7665;
  double t7669;
  double t7674;
  double t7685;
  double t7718;
  double t7722;
  double t7746;
  double t7750;
  double t7752;
  double t7756;
  double t7762;
  double t7768;
  double t7770;
  double t7780;
  double t7786;
  double t7788;
  double t7794;
  double t7799;
  double t7807;
  double t7828;
  double t7832;
  double t7847;
  double t7853;
  double t7866;
  double t7879;
  double t6929;
  double t6934;
  double t6939;
  double t6958;
  double t6977;
  double t7017;
  double t7038;
  double t7088;
  double t7123;
  double t7158;
  double t7180;
  double t7205;
  double t7210;
  double t7211;
  double t7228;
  double t7230;
  double t7231;
  double t7235;
  double t7240;
  double t7243;
  double t3792;
  double t3809;
  double t3813;
  double t8024;
  double t8028;
  double t8029;
  double t8035;
  double t8036;
  double t8049;
  double t8075;
  double t8091;
  double t8105;
  double t8110;
  double t8116;
  double t8117;
  double t8145;
  double t8147;
  double t8148;
  double t8189;
  double t8199;
  double t8207;
  double t7934;
  double t7937;
  double t7948;
  double t7971;
  double t7975;
  double t8261;
  double t8262;
  double t8273;
  double t8280;
  double t8287;
  double t8295;
  double t8335;
  double t8340;
  double t8343;
  double t8350;
  double t8353;
  double t8356;
  double t8374;
  double t8396;
  double t8401;
  double t8411;
  double t8418;
  double t8425;
  double t8430;
  double t8437;
  double t8441;
  double t8454;
  double t8459;
  double t8463;
  double t8537;
  double t8540;
  double t8541;
  double t8560;
  double t8569;
  double t8571;
  double t8623;
  double t8632;
  double t8635;
  double t8661;
  double t8678;
  double t8679;
  double t8695;
  double t8710;
  double t8712;
  double t8725;
  double t8738;
  double t8740;
  double t8748;
  double t8760;
  double t8761;
  double t8780;
  double t8782;
  double t8784;
  double t8897;
  double t8902;
  double t8905;
  double t8913;
  double t8916;
  double t8923;
  double t8925;
  double t8932;
  double t8976;
  double t8988;
  double t8991;
  double t9028;
  double t9041;
  double t9042;
  double t9054;
  double t9055;
  double t9065;
  double t9085;
  double t9090;
  double t9099;
  double t8843;
  double t8856;
  double t8866;
  double t8869;
  double t8872;
  double t9200;
  double t9209;
  double t9212;
  double t9215;
  double t9222;
  double t9229;
  double t9253;
  double t9256;
  double t9260;
  double t9282;
  double t9284;
  double t9289;
  double t9311;
  double t9322;
  double t9323;
  double t9331;
  double t9333;
  double t9342;
  double t9346;
  double t9347;
  double t9352;
  double t9359;
  double t9374;
  double t9378;
  double t9389;
  double t9395;
  double t9398;
  double t9543;
  double t9554;
  double t9559;
  double t9586;
  double t9587;
  double t9590;
  double t9606;
  double t9607;
  double t9610;
  double t9628;
  double t9654;
  double t9671;
  double t9673;
  double t9683;
  double t9685;
  double t9690;
  double t9695;
  double t9696;
  double t9720;
  double t9727;
  double t9732;
  double t9744;
  double t9745;
  double t9757;
  double t9776;
  double t9779;
  double t9784;
  double t9971;
  double t9988;
  double t10000;
  double t10007;
  double t10018;
  double t10031;
  double t10042;
  double t10050;
  double t10064;
  double t10071;
  double t10080;
  double t10082;
  double t10091;
  double t9917;
  double t9921;
  double t9922;
  double t9928;
  double t9940;
  double t10174;
  double t10178;
  double t10182;
  double t10206;
  double t10208;
  double t10220;
  double t10232;
  double t10234;
  double t10243;
  double t10254;
  double t10268;
  double t10272;
  double t10276;
  double t10281;
  double t10289;
  double t10298;
  double t10322;
  double t10326;
  double t10347;
  double t10395;
  double t10396;
  double t10397;
  double t10416;
  double t10448;
  double t10456;
  double t10457;
  double t10469;
  double t10474;
  double t10475;
  double t10503;
  double t10504;
  double t10511;
  double t10514;
  double t10515;
  double t10516;
  double t10521;
  double t10523;
  double t10528;
  double t10657;
  double t10658;
  double t10674;
  double t10676;
  double t10695;
  double t10698;
  double t10703;
  double t10598;
  double t10603;
  double t10622;
  double t10627;
  double t10628;
  double t10750;
  double t10751;
  double t10754;
  double t10757;
  double t10762;
  double t10777;
  double t10780;
  double t10802;
  double t10819;
  double t10826;
  double t10841;
  double t10850;
  double t10853;
  double t10893;
  double t10894;
  double t10900;
  double t10906;
  double t10908;
  double t10915;
  double t10924;
  double t10938;
  double t10944;
  double t10949;
  double t10960;
  double t10967;
  double t10968;
  double t11039;
  double t11041;
  double t4455;
  double t11006;
  double t11015;
  double t11019;
  double t11030;
  double t11033;
  double t11090;
  double t11100;
  double t11105;
  double t11118;
  double t11123;
  double t11138;
  double t11139;
  double t11182;
  double t11183;
  double t11186;
  double t11190;
  double t11191;
  double t11195;
  double t11196;
  double t11050;
  double t4459;
  double t4474;
  double t11233;
  double t11235;
  double t11243;
  double t11245;
  double t11247;
  double t11146;
  double t11281;
  double t11287;
  double t11288;
  double t11155;
  double t11200;
  double t11324;
  double t11325;
  double t11326;
  double t11217;
  t216 = Cos(var1[5]);
  t313 = Sin(var1[3]);
  t421 = Sin(var1[4]);
  t162 = Cos(var1[3]);
  t436 = Sin(var1[5]);
  t15 = Cos(var1[6]);
  t235 = -1.*t162*t216;
  t493 = -1.*t313*t421*t436;
  t501 = t235 + t493;
  t521 = -1.*t216*t313*t421;
  t528 = t162*t436;
  t532 = t521 + t528;
  t557 = Sin(var1[6]);
  t831 = Cos(var1[7]);
  t887 = -1.*t831;
  t898 = 1. + t887;
  t993 = Sin(var1[7]);
  t801 = t15*t501;
  t804 = t532*t557;
  t805 = t801 + t804;
  t1068 = Cos(var1[4]);
  t1396 = Cos(var1[8]);
  t1433 = -1.*t1396;
  t1445 = 1. + t1433;
  t1479 = Sin(var1[8]);
  t1332 = -1.*t1068*t831*t313;
  t1356 = t805*t993;
  t1387 = t1332 + t1356;
  t1610 = t15*t532;
  t1612 = -1.*t501*t557;
  t1619 = t1610 + t1612;
  t1735 = Cos(var1[9]);
  t1811 = -1.*t1735;
  t1812 = 1. + t1811;
  t1831 = Sin(var1[9]);
  t1898 = t1396*t1387;
  t1923 = t1619*t1479;
  t1949 = t1898 + t1923;
  t2034 = t1396*t1619;
  t2050 = -1.*t1387*t1479;
  t2069 = t2034 + t2050;
  t2078 = Cos(var1[10]);
  t2087 = -1.*t2078;
  t2102 = 1. + t2087;
  t2127 = Sin(var1[10]);
  t2154 = -1.*t1831*t1949;
  t2159 = t1735*t2069;
  t2163 = t2154 + t2159;
  t2324 = t1735*t1949;
  t2394 = t1831*t2069;
  t2397 = t2324 + t2394;
  t2464 = Cos(var1[11]);
  t2483 = -1.*t2464;
  t2486 = 1. + t2483;
  t2524 = Sin(var1[11]);
  t2620 = t2127*t2163;
  t2621 = t2078*t2397;
  t2682 = t2620 + t2621;
  t2816 = t2078*t2163;
  t2835 = -1.*t2127*t2397;
  t2895 = t2816 + t2835;
  t2912 = Cos(var1[12]);
  t2922 = -1.*t2912;
  t2954 = 1. + t2922;
  t2968 = Sin(var1[12]);
  t3034 = -1.*t2524*t2682;
  t3037 = t2464*t2895;
  t3095 = t3034 + t3037;
  t3255 = t2464*t2682;
  t3294 = t2524*t2895;
  t3323 = t3255 + t3294;
  t33 = -1.*t15;
  t57 = 1. + t33;
  t74 = 0.135*t57;
  t111 = 0. + t74;
  t688 = -0.135*t557;
  t765 = 0. + t688;
  t3481 = -1.*t216*t313;
  t3487 = t162*t421*t436;
  t3503 = t3481 + t3487;
  t3579 = t162*t216*t421;
  t3637 = t313*t436;
  t3646 = t3579 + t3637;
  t925 = 0.135*t898;
  t1003 = 0.049*t993;
  t1037 = 0. + t925 + t1003;
  t1102 = -0.049*t898;
  t1121 = 0.135*t993;
  t1152 = 0. + t1102 + t1121;
  t3686 = t15*t3503;
  t3713 = t3646*t557;
  t3750 = t3686 + t3713;
  t1450 = -0.049*t1445;
  t1487 = -0.09*t1479;
  t1531 = 0. + t1450 + t1487;
  t1645 = -0.09*t1445;
  t1689 = 0.049*t1479;
  t1717 = 0. + t1645 + t1689;
  t1828 = -0.049*t1812;
  t1844 = -0.21*t1831;
  t1883 = 0. + t1828 + t1844;
  t3891 = t162*t1068*t831;
  t3892 = t3750*t993;
  t3910 = t3891 + t3892;
  t3981 = t15*t3646;
  t3983 = -1.*t3503*t557;
  t3996 = t3981 + t3983;
  t1982 = -0.21*t1812;
  t1989 = 0.049*t1831;
  t2005 = 0. + t1982 + t1989;
  t2124 = -0.2707*t2102;
  t2141 = 0.0016*t2127;
  t2146 = 0. + t2124 + t2141;
  t4037 = t1396*t3910;
  t4042 = t3996*t1479;
  t4048 = t4037 + t4042;
  t4060 = t1396*t3996;
  t4070 = -1.*t3910*t1479;
  t4072 = t4060 + t4070;
  t2214 = -0.0016*t2102;
  t2237 = -0.2707*t2127;
  t2279 = 0. + t2214 + t2237;
  t2522 = 0.0184*t2486;
  t2530 = -0.7055*t2524;
  t2582 = 0. + t2522 + t2530;
  t4077 = -1.*t1831*t4048;
  t4083 = t1735*t4072;
  t4093 = t4077 + t4083;
  t4116 = t1735*t4048;
  t4118 = t1831*t4072;
  t4121 = t4116 + t4118;
  t2712 = -0.7055*t2486;
  t2754 = -0.0184*t2524;
  t2779 = 0. + t2712 + t2754;
  t2958 = -1.1135*t2954;
  t2973 = 0.0216*t2968;
  t3003 = 0. + t2958 + t2973;
  t4148 = t2127*t4093;
  t4161 = t2078*t4121;
  t4162 = t4148 + t4161;
  t4201 = t2078*t4093;
  t4211 = -1.*t2127*t4121;
  t4212 = t4201 + t4211;
  t3129 = -0.0216*t2954;
  t3135 = -1.1135*t2968;
  t3191 = 0. + t3129 + t3135;
  t4232 = -1.*t2524*t4162;
  t4236 = t2464*t4212;
  t4249 = t4232 + t4236;
  t4259 = t2464*t4162;
  t4264 = t2524*t4212;
  t4308 = t4259 + t4264;
  t4574 = t162*t1068*t15*t436;
  t4592 = t162*t1068*t216*t557;
  t4601 = t4574 + t4592;
  t4686 = -1.*t162*t831*t421;
  t4687 = t4601*t993;
  t4696 = t4686 + t4687;
  t4728 = t162*t1068*t216*t15;
  t4751 = -1.*t162*t1068*t436*t557;
  t4767 = t4728 + t4751;
  t4792 = t1396*t4696;
  t4794 = t4767*t1479;
  t4795 = t4792 + t4794;
  t4809 = t1396*t4767;
  t4814 = -1.*t4696*t1479;
  t4826 = t4809 + t4814;
  t4839 = -1.*t1831*t4795;
  t4849 = t1735*t4826;
  t4854 = t4839 + t4849;
  t4901 = t1735*t4795;
  t4920 = t1831*t4826;
  t4934 = t4901 + t4920;
  t4977 = t2127*t4854;
  t4994 = t2078*t4934;
  t4996 = t4977 + t4994;
  t5036 = t2078*t4854;
  t5041 = -1.*t2127*t4934;
  t5048 = t5036 + t5041;
  t5057 = -1.*t2524*t4996;
  t5063 = t2464*t5048;
  t5068 = t5057 + t5063;
  t5081 = t2464*t4996;
  t5084 = t2524*t5048;
  t5094 = t5081 + t5084;
  t5222 = t1068*t15*t313*t436;
  t5255 = t1068*t216*t313*t557;
  t5261 = t5222 + t5255;
  t5392 = -1.*t831*t313*t421;
  t5417 = t5261*t993;
  t5428 = t5392 + t5417;
  t5438 = t1068*t216*t15*t313;
  t5470 = -1.*t1068*t313*t436*t557;
  t5517 = t5438 + t5470;
  t5536 = t1396*t5428;
  t5550 = t5517*t1479;
  t5561 = t5536 + t5550;
  t5574 = t1396*t5517;
  t5579 = -1.*t5428*t1479;
  t5591 = t5574 + t5579;
  t5613 = -1.*t1831*t5561;
  t5620 = t1735*t5591;
  t5624 = t5613 + t5620;
  t5636 = t1735*t5561;
  t5638 = t1831*t5591;
  t5639 = t5636 + t5638;
  t5663 = t2127*t5624;
  t5668 = t2078*t5639;
  t5671 = t5663 + t5668;
  t5693 = t2078*t5624;
  t5695 = -1.*t2127*t5639;
  t5702 = t5693 + t5695;
  t5725 = -1.*t2524*t5671;
  t5787 = t2464*t5702;
  t5851 = t5725 + t5787;
  t5903 = t2464*t5671;
  t5930 = t2524*t5702;
  t5962 = t5903 + t5930;
  t6073 = -1.*t15*t421*t436;
  t6080 = -1.*t216*t421*t557;
  t6081 = t6073 + t6080;
  t6110 = -1.*t1068*t831;
  t6112 = t6081*t993;
  t6113 = t6110 + t6112;
  t6121 = -1.*t216*t15*t421;
  t6124 = t421*t436*t557;
  t6130 = t6121 + t6124;
  t6138 = t1396*t6113;
  t6139 = t6130*t1479;
  t6141 = t6138 + t6139;
  t6152 = t1396*t6130;
  t6153 = -1.*t6113*t1479;
  t6154 = t6152 + t6153;
  t6158 = -1.*t1831*t6141;
  t6167 = t1735*t6154;
  t6170 = t6158 + t6167;
  t6177 = t1735*t6141;
  t6187 = t1831*t6154;
  t6189 = t6177 + t6187;
  t6200 = t2127*t6170;
  t6231 = t2078*t6189;
  t6237 = t6200 + t6231;
  t6244 = t2078*t6170;
  t6245 = -1.*t2127*t6189;
  t6257 = t6244 + t6245;
  t6263 = -1.*t2524*t6237;
  t6277 = t2464*t6257;
  t6282 = t6263 + t6277;
  t6293 = t2464*t6237;
  t6297 = t2524*t6257;
  t6300 = t6293 + t6297;
  t6374 = t216*t313;
  t6384 = -1.*t162*t421*t436;
  t6385 = t6374 + t6384;
  t6399 = t6385*t557;
  t6401 = t3981 + t6399;
  t6424 = t15*t6385;
  t6425 = -1.*t3646*t557;
  t6426 = t6424 + t6425;
  t6437 = t1396*t6401*t993;
  t6444 = t6426*t1479;
  t6449 = t6437 + t6444;
  t6456 = t1396*t6426;
  t6462 = -1.*t6401*t993*t1479;
  t6474 = t6456 + t6462;
  t6477 = -1.*t1831*t6449;
  t6482 = t1735*t6474;
  t6485 = t6477 + t6482;
  t6489 = t1735*t6449;
  t6502 = t1831*t6474;
  t6503 = t6489 + t6502;
  t6512 = t2127*t6485;
  t6515 = t2078*t6503;
  t6516 = t6512 + t6515;
  t6531 = t2078*t6485;
  t6537 = -1.*t2127*t6503;
  t6540 = t6531 + t6537;
  t6562 = -1.*t2524*t6516;
  t6567 = t2464*t6540;
  t6571 = t6562 + t6567;
  t6581 = t2464*t6516;
  t6582 = t2524*t6540;
  t6588 = t6581 + t6582;
  t6655 = t216*t313*t421;
  t6659 = -1.*t162*t436;
  t6660 = t6655 + t6659;
  t6679 = t15*t6660;
  t6682 = t501*t557;
  t6683 = t6679 + t6682;
  t6692 = -1.*t6660*t557;
  t6693 = t801 + t6692;
  t6706 = t1396*t6683*t993;
  t6707 = t6693*t1479;
  t6724 = t6706 + t6707;
  t6730 = t1396*t6693;
  t6733 = -1.*t6683*t993*t1479;
  t6737 = t6730 + t6733;
  t6745 = -1.*t1831*t6724;
  t6750 = t1735*t6737;
  t6751 = t6745 + t6750;
  t6766 = t1735*t6724;
  t6767 = t1831*t6737;
  t6780 = t6766 + t6767;
  t6783 = t2127*t6751;
  t6798 = t2078*t6780;
  t6800 = t6783 + t6798;
  t6821 = t2078*t6751;
  t6822 = -1.*t2127*t6780;
  t6835 = t6821 + t6822;
  t6843 = -1.*t2524*t6800;
  t6847 = t2464*t6835;
  t6849 = t6843 + t6847;
  t6856 = t2464*t6800;
  t6860 = t2524*t6835;
  t6862 = t6856 + t6860;
  t6918 = t1068*t216*t15;
  t6922 = -1.*t1068*t436*t557;
  t6926 = t6918 + t6922;
  t6946 = -1.*t1068*t15*t436;
  t6954 = -1.*t1068*t216*t557;
  t6957 = t6946 + t6954;
  t6968 = t1396*t6926*t993;
  t6972 = t6957*t1479;
  t6975 = t6968 + t6972;
  t6979 = t1396*t6957;
  t6999 = -1.*t6926*t993*t1479;
  t7001 = t6979 + t6999;
  t7019 = -1.*t1831*t6975;
  t7024 = t1735*t7001;
  t7029 = t7019 + t7024;
  t7043 = t1735*t6975;
  t7048 = t1831*t7001;
  t7085 = t7043 + t7048;
  t7095 = t2127*t7029;
  t7102 = t2078*t7085;
  t7110 = t7095 + t7102;
  t7132 = t2078*t7029;
  t7150 = -1.*t2127*t7085;
  t7156 = t7132 + t7150;
  t7160 = -1.*t2524*t7110;
  t7172 = t2464*t7156;
  t7176 = t7160 + t7172;
  t7189 = t2464*t7110;
  t7194 = t2524*t7156;
  t7203 = t7189 + t7194;
  t7326 = -1.*t15*t3503;
  t7328 = t7326 + t6425;
  t7336 = t1396*t3996*t993;
  t7346 = t7328*t1479;
  t7357 = t7336 + t7346;
  t7363 = t1396*t7328;
  t7364 = -1.*t3996*t993*t1479;
  t7368 = t7363 + t7364;
  t7390 = -1.*t1831*t7357;
  t7392 = t1735*t7368;
  t7399 = t7390 + t7392;
  t7406 = t1735*t7357;
  t7416 = t1831*t7368;
  t7422 = t7406 + t7416;
  t7424 = t2127*t7399;
  t7431 = t2078*t7422;
  t7434 = t7424 + t7431;
  t7459 = t2078*t7399;
  t7460 = -1.*t2127*t7422;
  t7462 = t7459 + t7460;
  t7476 = -1.*t2524*t7434;
  t7484 = t2464*t7462;
  t7498 = t7476 + t7484;
  t7523 = t2464*t7434;
  t7528 = t2524*t7462;
  t7530 = t7523 + t7528;
  t7598 = t162*t216;
  t7602 = t313*t421*t436;
  t7607 = t7598 + t7602;
  t7618 = -1.*t7607*t557;
  t7631 = t6679 + t7618;
  t7659 = -1.*t15*t7607;
  t7665 = t7659 + t6692;
  t7669 = t1396*t7631*t993;
  t7674 = t7665*t1479;
  t7685 = t7669 + t7674;
  t7718 = t1396*t7665;
  t7722 = -1.*t7631*t993*t1479;
  t7746 = t7718 + t7722;
  t7750 = -1.*t1831*t7685;
  t7752 = t1735*t7746;
  t7756 = t7750 + t7752;
  t7762 = t1735*t7685;
  t7768 = t1831*t7746;
  t7770 = t7762 + t7768;
  t7780 = t2127*t7756;
  t7786 = t2078*t7770;
  t7788 = t7780 + t7786;
  t7794 = t2078*t7756;
  t7799 = -1.*t2127*t7770;
  t7807 = t7794 + t7799;
  t7828 = -1.*t2524*t7788;
  t7832 = t2464*t7807;
  t7847 = t7828 + t7832;
  t7853 = t2464*t7788;
  t7866 = t2524*t7807;
  t7879 = t7853 + t7866;
  t6929 = 0.1305*t831*t6926;
  t6934 = t6926*t1037;
  t6939 = t6926*t993*t1531;
  t6958 = t6957*t1717;
  t6977 = t1883*t6975;
  t7017 = t2005*t7001;
  t7038 = t2146*t7029;
  t7088 = t2279*t7085;
  t7123 = t2582*t7110;
  t7158 = t2779*t7156;
  t7180 = t3003*t7176;
  t7205 = t3191*t7203;
  t7210 = t2968*t7176;
  t7211 = t2912*t7203;
  t7228 = t7210 + t7211;
  t7230 = 0.088451*t7228;
  t7231 = t2912*t7176;
  t7235 = -1.*t2968*t7203;
  t7240 = t7231 + t7235;
  t7243 = -1.062256*t7240;
  t3792 = t831*t3750;
  t3809 = -1.*t162*t1068*t993;
  t3813 = t3792 + t3809;
  t8024 = -1.*t1396*t1831*t3813;
  t8028 = -1.*t1735*t3813*t1479;
  t8029 = t8024 + t8028;
  t8035 = t1735*t1396*t3813;
  t8036 = -1.*t1831*t3813*t1479;
  t8049 = t8035 + t8036;
  t8075 = t2127*t8029;
  t8091 = t2078*t8049;
  t8105 = t8075 + t8091;
  t8110 = t2078*t8029;
  t8116 = -1.*t2127*t8049;
  t8117 = t8110 + t8116;
  t8145 = -1.*t2524*t8105;
  t8147 = t2464*t8117;
  t8148 = t8145 + t8147;
  t8189 = t2464*t8105;
  t8199 = t2524*t8117;
  t8207 = t8189 + t8199;
  t7934 = 0.135*t831;
  t7937 = -0.049*t993;
  t7948 = t7934 + t7937;
  t7971 = 0.049*t831;
  t7975 = t7971 + t1121;
  t8261 = t15*t7607;
  t8262 = t6660*t557;
  t8273 = t8261 + t8262;
  t8280 = t831*t8273;
  t8287 = -1.*t1068*t313*t993;
  t8295 = t8280 + t8287;
  t8335 = -1.*t1396*t1831*t8295;
  t8340 = -1.*t1735*t8295*t1479;
  t8343 = t8335 + t8340;
  t8350 = t1735*t1396*t8295;
  t8353 = -1.*t1831*t8295*t1479;
  t8356 = t8350 + t8353;
  t8374 = t2127*t8343;
  t8396 = t2078*t8356;
  t8401 = t8374 + t8396;
  t8411 = t2078*t8343;
  t8418 = -1.*t2127*t8356;
  t8425 = t8411 + t8418;
  t8430 = -1.*t2524*t8401;
  t8437 = t2464*t8425;
  t8441 = t8430 + t8437;
  t8454 = t2464*t8401;
  t8459 = t2524*t8425;
  t8463 = t8454 + t8459;
  t8537 = t1068*t15*t436;
  t8540 = t1068*t216*t557;
  t8541 = t8537 + t8540;
  t8560 = t831*t8541;
  t8569 = t421*t993;
  t8571 = t8560 + t8569;
  t8623 = -1.*t1396*t1831*t8571;
  t8632 = -1.*t1735*t8571*t1479;
  t8635 = t8623 + t8632;
  t8661 = t1735*t1396*t8571;
  t8678 = -1.*t1831*t8571*t1479;
  t8679 = t8661 + t8678;
  t8695 = t2127*t8635;
  t8710 = t2078*t8679;
  t8712 = t8695 + t8710;
  t8725 = t2078*t8635;
  t8738 = -1.*t2127*t8679;
  t8740 = t8725 + t8738;
  t8748 = -1.*t2524*t8712;
  t8760 = t2464*t8740;
  t8761 = t8748 + t8760;
  t8780 = t2464*t8712;
  t8782 = t2524*t8740;
  t8784 = t8780 + t8782;
  t8897 = -1.*t1396*t3910;
  t8902 = -1.*t3996*t1479;
  t8905 = t8897 + t8902;
  t8913 = t1831*t8905;
  t8916 = t8913 + t4083;
  t8923 = t1735*t8905;
  t8925 = -1.*t1831*t4072;
  t8932 = t8923 + t8925;
  t8976 = -1.*t2127*t8916;
  t8988 = t2078*t8932;
  t8991 = t8976 + t8988;
  t9028 = t2078*t8916;
  t9041 = t2127*t8932;
  t9042 = t9028 + t9041;
  t9054 = t2524*t8991;
  t9055 = t2464*t9042;
  t9065 = t9054 + t9055;
  t9085 = t2464*t8991;
  t9090 = -1.*t2524*t9042;
  t9099 = t9085 + t9090;
  t8843 = 0.049*t1396;
  t8856 = t8843 + t1487;
  t8866 = -0.09*t1396;
  t8869 = -0.049*t1479;
  t8872 = t8866 + t8869;
  t9200 = t1068*t831*t313;
  t9209 = t8273*t993;
  t9212 = t9200 + t9209;
  t9215 = -1.*t1396*t9212;
  t9222 = -1.*t7631*t1479;
  t9229 = t9215 + t9222;
  t9253 = t1396*t7631;
  t9256 = -1.*t9212*t1479;
  t9260 = t9253 + t9256;
  t9282 = t1831*t9229;
  t9284 = t1735*t9260;
  t9289 = t9282 + t9284;
  t9311 = t1735*t9229;
  t9322 = -1.*t1831*t9260;
  t9323 = t9311 + t9322;
  t9331 = -1.*t2127*t9289;
  t9333 = t2078*t9323;
  t9342 = t9331 + t9333;
  t9346 = t2078*t9289;
  t9347 = t2127*t9323;
  t9352 = t9346 + t9347;
  t9359 = t2524*t9342;
  t9374 = t2464*t9352;
  t9378 = t9359 + t9374;
  t9389 = t2464*t9342;
  t9395 = -1.*t2524*t9352;
  t9398 = t9389 + t9395;
  t9543 = -1.*t831*t421;
  t9554 = t8541*t993;
  t9559 = t9543 + t9554;
  t9586 = -1.*t1396*t9559;
  t9587 = -1.*t6926*t1479;
  t9590 = t9586 + t9587;
  t9606 = t1396*t6926;
  t9607 = -1.*t9559*t1479;
  t9610 = t9606 + t9607;
  t9628 = t1831*t9590;
  t9654 = t1735*t9610;
  t9671 = t9628 + t9654;
  t9673 = t1735*t9590;
  t9683 = -1.*t1831*t9610;
  t9685 = t9673 + t9683;
  t9690 = -1.*t2127*t9671;
  t9695 = t2078*t9685;
  t9696 = t9690 + t9695;
  t9720 = t2078*t9671;
  t9727 = t2127*t9685;
  t9732 = t9720 + t9727;
  t9744 = t2524*t9696;
  t9745 = t2464*t9732;
  t9757 = t9744 + t9745;
  t9776 = t2464*t9696;
  t9779 = -1.*t2524*t9732;
  t9784 = t9776 + t9779;
  t9971 = -1.*t1735*t4048;
  t9988 = t9971 + t8925;
  t10000 = -1.*t2127*t4093;
  t10007 = t2078*t9988;
  t10018 = t10000 + t10007;
  t10031 = t2127*t9988;
  t10042 = t4201 + t10031;
  t10050 = t2524*t10018;
  t10064 = t2464*t10042;
  t10071 = t10050 + t10064;
  t10080 = t2464*t10018;
  t10082 = -1.*t2524*t10042;
  t10091 = t10080 + t10082;
  t9917 = -0.21*t1735;
  t9921 = -0.049*t1831;
  t9922 = t9917 + t9921;
  t9928 = 0.049*t1735;
  t9940 = t9928 + t1844;
  t10174 = t1396*t9212;
  t10178 = t7631*t1479;
  t10182 = t10174 + t10178;
  t10206 = -1.*t1831*t10182;
  t10208 = t10206 + t9284;
  t10220 = -1.*t1735*t10182;
  t10232 = t10220 + t9322;
  t10234 = -1.*t2127*t10208;
  t10243 = t2078*t10232;
  t10254 = t10234 + t10243;
  t10268 = t2078*t10208;
  t10272 = t2127*t10232;
  t10276 = t10268 + t10272;
  t10281 = t2524*t10254;
  t10289 = t2464*t10276;
  t10298 = t10281 + t10289;
  t10322 = t2464*t10254;
  t10326 = -1.*t2524*t10276;
  t10347 = t10322 + t10326;
  t10395 = t1396*t9559;
  t10396 = t6926*t1479;
  t10397 = t10395 + t10396;
  t10416 = -1.*t1831*t10397;
  t10448 = t10416 + t9654;
  t10456 = -1.*t1735*t10397;
  t10457 = t10456 + t9683;
  t10469 = -1.*t2127*t10448;
  t10474 = t2078*t10457;
  t10475 = t10469 + t10474;
  t10503 = t2078*t10448;
  t10504 = t2127*t10457;
  t10511 = t10503 + t10504;
  t10514 = t2524*t10475;
  t10515 = t2464*t10511;
  t10516 = t10514 + t10515;
  t10521 = t2464*t10475;
  t10523 = -1.*t2524*t10511;
  t10528 = t10521 + t10523;
  t10657 = -1.*t2078*t4121;
  t10658 = t10000 + t10657;
  t10674 = t2524*t10658;
  t10676 = t10674 + t4236;
  t10695 = t2464*t10658;
  t10698 = -1.*t2524*t4212;
  t10703 = t10695 + t10698;
  t10598 = 0.0016*t2078;
  t10603 = t10598 + t2237;
  t10622 = -0.2707*t2078;
  t10627 = -0.0016*t2127;
  t10628 = t10622 + t10627;
  t10750 = t1735*t10182;
  t10751 = t1831*t9260;
  t10754 = t10750 + t10751;
  t10757 = -1.*t2078*t10754;
  t10762 = t10234 + t10757;
  t10777 = -1.*t2127*t10754;
  t10780 = t10268 + t10777;
  t10802 = t2524*t10762;
  t10819 = t2464*t10780;
  t10826 = t10802 + t10819;
  t10841 = t2464*t10762;
  t10850 = -1.*t2524*t10780;
  t10853 = t10841 + t10850;
  t10893 = t1735*t10397;
  t10894 = t1831*t9610;
  t10900 = t10893 + t10894;
  t10906 = -1.*t2078*t10900;
  t10908 = t10469 + t10906;
  t10915 = -1.*t2127*t10900;
  t10924 = t10503 + t10915;
  t10938 = t2524*t10908;
  t10944 = t2464*t10924;
  t10949 = t10938 + t10944;
  t10960 = t2464*t10908;
  t10967 = -1.*t2524*t10924;
  t10968 = t10960 + t10967;
  t11039 = -1.*t2464*t4162;
  t11041 = t11039 + t10698;
  t4455 = t2912*t4249;
  t11006 = -0.7055*t2464;
  t11015 = 0.0184*t2524;
  t11019 = t11006 + t11015;
  t11030 = -0.0184*t2464;
  t11033 = t11030 + t2530;
  t11090 = t2127*t10208;
  t11100 = t2078*t10754;
  t11105 = t11090 + t11100;
  t11118 = -1.*t2524*t11105;
  t11123 = t11118 + t10819;
  t11138 = -1.*t2464*t11105;
  t11139 = t11138 + t10850;
  t11182 = t2127*t10448;
  t11183 = t2078*t10900;
  t11186 = t11182 + t11183;
  t11190 = -1.*t2524*t11186;
  t11191 = t11190 + t10944;
  t11195 = -1.*t2464*t11186;
  t11196 = t11195 + t10967;
  t11050 = -1.*t2968*t4249;
  t4459 = -1.*t2968*t4308;
  t4474 = t4455 + t4459;
  t11233 = 0.0216*t2912;
  t11235 = t11233 + t3135;
  t11243 = -1.1135*t2912;
  t11245 = -0.0216*t2968;
  t11247 = t11243 + t11245;
  t11146 = -1.*t2968*t11123;
  t11281 = t2464*t11105;
  t11287 = t2524*t10780;
  t11288 = t11281 + t11287;
  t11155 = t2912*t11123;
  t11200 = -1.*t2968*t11191;
  t11324 = t2464*t11186;
  t11325 = t2524*t10924;
  t11326 = t11324 + t11325;
  t11217 = t2912*t11191;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1387*t1531 + t1619*t1717 + t1883*t1949 + t2005*t2069 + t2146*t2163 + t2279*t2397 + t2582*t2682 + t2779*t2895 + t3003*t3095 - 1.*t1068*t1152*t313 + t3191*t3323 + 0.088451*(t2968*t3095 + t2912*t3323) - 1.062256*(t2912*t3095 - 1.*t2968*t3323) + t111*t501 + t532*t765 + t1037*t805 + 0.1305*(t805*t831 + t1068*t313*t993);
  p_output1(10)=t1068*t1152*t162 + t111*t3503 + t1037*t3750 + 0.1305*t3813 + t1531*t3910 + t1717*t3996 + t1883*t4048 + t2005*t4072 + t2146*t4093 + t2279*t4121 + t2582*t4162 + t2779*t4212 + t3003*t4249 + t3191*t4308 + 0.088451*(t2968*t4249 + t2912*t4308) - 1.062256*t4474 + t3646*t765;
  p_output1(11)=0;
  p_output1(12)=-1.*t1152*t162*t421 + t1068*t111*t162*t436 + t1037*t4601 + t1531*t4696 + t1717*t4767 + t1883*t4795 + t2005*t4826 + t2146*t4854 + t2279*t4934 + t2582*t4996 + t2779*t5048 + t3003*t5068 + t3191*t5094 + 0.088451*(t2968*t5068 + t2912*t5094) - 1.062256*(t2912*t5068 - 1.*t2968*t5094) + t1068*t162*t216*t765 + 0.1305*(t4601*t831 + t162*t421*t993);
  p_output1(13)=-1.*t1152*t313*t421 + t1068*t111*t313*t436 + t1037*t5261 + t1531*t5428 + t1717*t5517 + t1883*t5561 + t2005*t5591 + t2146*t5624 + t2279*t5639 + t2582*t5671 + t2779*t5702 + t3003*t5851 + t3191*t5962 + 0.088451*(t2968*t5851 + t2912*t5962) - 1.062256*(t2912*t5851 - 1.*t2968*t5962) + t1068*t216*t313*t765 + 0.1305*(t5261*t831 + t313*t421*t993);
  p_output1(14)=-1.*t1068*t1152 - 1.*t111*t421*t436 + t1037*t6081 + t1531*t6113 + t1717*t6130 + t1883*t6141 + t2005*t6154 + t2146*t6170 + t2279*t6189 + t2582*t6237 + t2779*t6257 + t3003*t6282 + t3191*t6300 + 0.088451*(t2968*t6282 + t2912*t6300) - 1.062256*(t2912*t6282 - 1.*t2968*t6300) - 1.*t216*t421*t765 + 0.1305*(t6081*t831 + t1068*t993);
  p_output1(15)=t111*t3646 + t1037*t6401 + t1717*t6426 + t1883*t6449 + t2005*t6474 + t2146*t6485 + t2279*t6503 + t2582*t6516 + t2779*t6540 + t3003*t6571 + t3191*t6588 + 0.088451*(t2968*t6571 + t2912*t6588) - 1.062256*(t2912*t6571 - 1.*t2968*t6588) + t6385*t765 + 0.1305*t6401*t831 + t1531*t6401*t993;
  p_output1(16)=t111*t6660 + t1037*t6683 + t1717*t6693 + t1883*t6724 + t2005*t6737 + t2146*t6751 + t2279*t6780 + t2582*t6800 + t2779*t6835 + t3003*t6849 + t3191*t6862 + 0.088451*(t2968*t6849 + t2912*t6862) - 1.062256*(t2912*t6849 - 1.*t2968*t6862) + t501*t765 + 0.1305*t6683*t831 + t1531*t6683*t993;
  p_output1(17)=t1068*t111*t216 + t6929 + t6934 + t6939 + t6958 + t6977 + t7017 + t7038 + t7088 + t7123 + t7158 + t7180 + t7205 + t7230 + t7243 - 1.*t1068*t436*t765;
  p_output1(18)=-0.135*t15*t3646 + t1037*t3996 + 0.135*t3503*t557 + t1717*t7328 + t1883*t7357 + t2005*t7368 + t2146*t7399 + t2279*t7422 + t2582*t7434 + t2779*t7462 + t3003*t7498 + t3191*t7530 + 0.088451*(t2968*t7498 + t2912*t7530) - 1.062256*(t2912*t7498 - 1.*t2968*t7530) + 0.1305*t3996*t831 + t1531*t3996*t993;
  p_output1(19)=-0.135*t15*t6660 + 0.135*t557*t7607 + t1037*t7631 + t1717*t7665 + t1883*t7685 + t2005*t7746 + t2146*t7756 + t2279*t7770 + t2582*t7788 + t2779*t7807 + t3003*t7847 + t3191*t7879 + 0.088451*(t2968*t7847 + t2912*t7879) - 1.062256*(t2912*t7847 - 1.*t2968*t7879) + 0.1305*t7631*t831 + t1531*t7631*t993;
  p_output1(20)=-0.135*t1068*t15*t216 + 0.135*t1068*t436*t557 + t6929 + t6934 + t6939 + t6958 + t6977 + t7017 + t7038 + t7088 + t7123 + t7158 + t7180 + t7205 + t7230 + t7243;
  p_output1(21)=t1531*t3813 + t1396*t1883*t3813 - 1.*t1479*t2005*t3813 + t1068*t162*t7948 + t3750*t7975 + t2146*t8029 + t2279*t8049 + t2582*t8105 + t2779*t8117 + t3003*t8148 + t3191*t8207 + 0.088451*(t2968*t8148 + t2912*t8207) - 1.062256*(t2912*t8148 - 1.*t2968*t8207) + 0.1305*(-1.*t1068*t162*t831 - 1.*t3750*t993);
  p_output1(22)=t1068*t313*t7948 + t7975*t8273 + t1531*t8295 + t1396*t1883*t8295 - 1.*t1479*t2005*t8295 + t2146*t8343 + t2279*t8356 + t2582*t8401 + t2779*t8425 + t3003*t8441 + t3191*t8463 + 0.088451*(t2968*t8441 + t2912*t8463) - 1.062256*(t2912*t8441 - 1.*t2968*t8463) + 0.1305*(t1332 - 1.*t8273*t993);
  p_output1(23)=-1.*t421*t7948 + t7975*t8541 + t1531*t8571 + t1396*t1883*t8571 - 1.*t1479*t2005*t8571 + t2146*t8635 + t2279*t8679 + t2582*t8712 + t2779*t8740 + t3003*t8761 + t3191*t8784 + 0.088451*(t2968*t8761 + t2912*t8784) - 1.062256*(t2912*t8761 - 1.*t2968*t8784) + 0.1305*(t421*t831 - 1.*t8541*t993);
  p_output1(24)=t1883*t4072 + t3996*t8856 + t3910*t8872 + t2005*t8905 + t2279*t8916 + t2146*t8932 + t2779*t8991 + t2582*t9042 + t3191*t9065 + t3003*t9099 - 1.062256*(-1.*t2968*t9065 + t2912*t9099) + 0.088451*(t2912*t9065 + t2968*t9099);
  p_output1(25)=t7631*t8856 + t8872*t9212 + t2005*t9229 + t1883*t9260 + t2279*t9289 + t2146*t9323 + t2779*t9342 + t2582*t9352 + t3191*t9378 + t3003*t9398 - 1.062256*(-1.*t2968*t9378 + t2912*t9398) + 0.088451*(t2912*t9378 + t2968*t9398);
  p_output1(26)=t6926*t8856 + t8872*t9559 + t2005*t9590 + t1883*t9610 + t2279*t9671 + t2146*t9685 + t2779*t9696 + t2582*t9732 + t3191*t9757 + t3003*t9784 - 1.062256*(-1.*t2968*t9757 + t2912*t9784) + 0.088451*(t2912*t9757 + t2968*t9784);
  p_output1(27)=t10042*t2582 + t10018*t2779 - 1.062256*(t10091*t2912 - 1.*t10071*t2968) + 0.088451*(t10071*t2912 + t10091*t2968) + t10091*t3003 + t10071*t3191 + t2279*t4093 + t4048*t9922 + t4072*t9940 + t2146*t9988;
  p_output1(28)=t10232*t2146 + t10208*t2279 + t10276*t2582 + t10254*t2779 - 1.062256*(t10347*t2912 - 1.*t10298*t2968) + 0.088451*(t10298*t2912 + t10347*t2968) + t10347*t3003 + t10298*t3191 + t10182*t9922 + t9260*t9940;
  p_output1(29)=t10457*t2146 + t10448*t2279 + t10511*t2582 + t10475*t2779 - 1.062256*(t10528*t2912 - 1.*t10516*t2968) + 0.088451*(t10516*t2912 + t10528*t2968) + t10528*t3003 + t10516*t3191 + t10397*t9922 + t9610*t9940;
  p_output1(30)=t10658*t2779 - 1.062256*(t10703*t2912 - 1.*t10676*t2968) + 0.088451*(t10676*t2912 + t10703*t2968) + t10703*t3003 + t10676*t3191 + t10603*t4093 + t10628*t4121 + t2582*t4212;
  p_output1(31)=t10208*t10603 + t10628*t10754 + t10780*t2582 + t10762*t2779 - 1.062256*(t10853*t2912 - 1.*t10826*t2968) + 0.088451*(t10826*t2912 + t10853*t2968) + t10853*t3003 + t10826*t3191;
  p_output1(32)=t10448*t10603 + t10628*t10900 + t10924*t2582 + t10908*t2779 - 1.062256*(t10968*t2912 - 1.*t10949*t2968) + 0.088451*(t10949*t2912 + t10968*t2968) + t10968*t3003 + t10949*t3191;
  p_output1(33)=-1.062256*(t11050 + t11041*t2912) + t11041*t3003 + t11019*t4162 + t11033*t4212 + t3191*t4249 + 0.088451*(t11041*t2968 + t4455);
  p_output1(34)=t10780*t11033 + t11019*t11105 - 1.062256*(t11146 + t11139*t2912) + 0.088451*(t11155 + t11139*t2968) + t11139*t3003 + t11123*t3191;
  p_output1(35)=t10924*t11033 + t11019*t11186 - 1.062256*(t11200 + t11196*t2912) + 0.088451*(t11217 + t11196*t2968) + t11196*t3003 + t11191*t3191;
  p_output1(36)=t11235*t4249 + t11247*t4308 - 1.062256*(t11050 - 1.*t2912*t4308) + 0.088451*t4474;
  p_output1(37)=t11123*t11235 + t11247*t11288 - 1.062256*(t11146 - 1.*t11288*t2912) + 0.088451*(t11155 - 1.*t11288*t2968);
  p_output1(38)=t11191*t11235 + t11247*t11326 - 1.062256*(t11200 - 1.*t11326*t2912) + 0.088451*(t11217 - 1.*t11326*t2968);
  p_output1(39)=0;
  p_output1(40)=0;
  p_output1(41)=0;
  p_output1(42)=0;
  p_output1(43)=0;
  p_output1(44)=0;
  p_output1(45)=0;
  p_output1(46)=0;
  p_output1(47)=0;
  p_output1(48)=0;
  p_output1(49)=0;
  p_output1(50)=0;
  p_output1(51)=0;
  p_output1(52)=0;
  p_output1(53)=0;
  p_output1(54)=0;
  p_output1(55)=0;
  p_output1(56)=0;
  p_output1(57)=0;
  p_output1(58)=0;
  p_output1(59)=0;
}


       
Eigen::Matrix<double,3,20> Jp_LeftToeFront(const Eigen::Matrix<double,20,1> &var1)
//void Jp_LeftToeFront(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,20>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



