/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 23:02:43 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "H_RightToeBottom_to_LeftToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,4,4> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t421;
  double t490;
  double t532;
  double t488;
  double t646;
  double t410;
  double t737;
  double t798;
  double t887;
  double t496;
  double t672;
  double t698;
  double t1014;
  double t303;
  double t1115;
  double t1135;
  double t1152;
  double t715;
  double t1023;
  double t1102;
  double t1190;
  double t267;
  double t1247;
  double t1473;
  double t1504;
  double t1113;
  double t1196;
  double t1202;
  double t1575;
  double t1963;
  double t1826;
  double t1888;
  double t2118;
  double t2179;
  double t2185;
  double t1904;
  double t2018;
  double t2077;
  double t2381;
  double t2397;
  double t2431;
  double t2085;
  double t2239;
  double t2344;
  double t2464;
  double t2521;
  double t2534;
  double t2363;
  double t2439;
  double t2440;
  double t2579;
  double t2587;
  double t2646;
  double t2459;
  double t2542;
  double t2555;
  double t1237;
  double t1593;
  double t1617;
  double t1682;
  double t1707;
  double t1728;
  double t2565;
  double t2694;
  double t2734;
  double t2802;
  double t2804;
  double t2808;
  double t3212;
  double t3219;
  double t3228;
  double t3002;
  double t3138;
  double t3188;
  double t3458;
  double t3461;
  double t3468;
  double t3336;
  double t3385;
  double t3426;
  double t3510;
  double t3567;
  double t3577;
  double t3452;
  double t3476;
  double t3477;
  double t3655;
  double t3693;
  double t3715;
  double t3493;
  double t3623;
  double t3626;
  double t3807;
  double t3813;
  double t3855;
  double t3643;
  double t3736;
  double t3737;
  double t2778;
  double t2863;
  double t2899;
  double t1630;
  double t1769;
  double t1813;
  double t3754;
  double t3868;
  double t3880;
  double t3908;
  double t3923;
  double t3950;
  double t3892;
  double t3998;
  double t4002;
  double t4077;
  double t4091;
  double t4125;
  double t229;
  double t4193;
  double t4215;
  double t3321;
  double t4005;
  double t4019;
  double t4047;
  double t4060;
  double t4138;
  double t4163;
  double t4185;
  double t4266;
  double t4267;
  double t4283;
  double t4285;
  double t85;
  double t4325;
  double t4454;
  double t4379;
  double t4437;
  double t4449;
  double t5048;
  double t5023;
  double t5024;
  double t5050;
  double t5081;
  double t5038;
  double t5054;
  double t5057;
  double t4988;
  double t5124;
  double t5131;
  double t5135;
  double t5160;
  double t5069;
  double t5141;
  double t5156;
  double t4986;
  double t5162;
  double t5164;
  double t5189;
  double t5211;
  double t5158;
  double t5197;
  double t5202;
  double t4984;
  double t5220;
  double t5229;
  double t5231;
  double t2900;
  double t3231;
  double t3303;
  double t5339;
  double t5348;
  double t5373;
  double t5412;
  double t5429;
  double t5434;
  double t5383;
  double t5447;
  double t5450;
  double t5472;
  double t5490;
  double t5493;
  double t5453;
  double t5499;
  double t5505;
  double t5511;
  double t5520;
  double t5525;
  double t5507;
  double t5526;
  double t5538;
  double t5551;
  double t5556;
  double t5558;
  double t4295;
  double t5656;
  double t5659;
  double t5668;
  double t5678;
  double t5698;
  double t5701;
  double t5671;
  double t5719;
  double t5728;
  double t5745;
  double t5749;
  double t5752;
  double t5731;
  double t5753;
  double t5761;
  double t5773;
  double t5779;
  double t5784;
  double t5765;
  double t5786;
  double t5795;
  double t5824;
  double t5826;
  double t5829;
  double t4767;
  double t4802;
  double t4817;
  double t5208;
  double t5241;
  double t5242;
  double t5263;
  double t5264;
  double t5266;
  double t5274;
  double t5316;
  double t5329;
  double t4533;
  double t4545;
  double t4559;
  double t5547;
  double t5559;
  double t5573;
  double t5582;
  double t5614;
  double t5624;
  double t5634;
  double t5646;
  double t5650;
  double t4703;
  double t4718;
  double t4733;
  double t5796;
  double t5831;
  double t5833;
  double t5838;
  double t5854;
  double t5858;
  double t5862;
  double t5870;
  double t5875;
  double t4949;
  double t4951;
  double t4957;
  double t4857;
  double t4893;
  double t4898;
  double t4917;
  double t5956;
  double t5959;
  double t5960;
  double t5989;
  double t5994;
  double t5996;
  double t6028;
  double t6036;
  double t6041;
  double t6126;
  double t6132;
  double t6172;
  double t6176;
  double t6207;
  double t6209;
  double t6242;
  double t6244;
  double t6295;
  double t6297;
  double t6105;
  double t6106;
  double t6139;
  double t6140;
  double t6141;
  double t6188;
  double t6189;
  double t6191;
  double t6197;
  double t6202;
  double t6203;
  double t6212;
  double t6214;
  double t6219;
  double t6229;
  double t6232;
  double t6233;
  double t6253;
  double t6269;
  double t6273;
  double t6283;
  double t6288;
  double t6293;
  double t6298;
  double t6299;
  double t6312;
  double t6329;
  double t6331;
  double t6333;
  double t6095;
  double t6101;
  double t6102;
  double t6103;
  double t6108;
  double t6113;
  double t6115;
  double t6125;
  double t6147;
  double t6148;
  double t6150;
  double t6153;
  double t6156;
  double t6195;
  double t6204;
  double t6221;
  double t6238;
  double t6274;
  double t6294;
  double t6327;
  double t6344;
  double t6348;
  double t6353;
  double t6355;
  double t6371;
  double t6374;
  double t6379;
  double t6380;
  double t6389;
  double t6394;
  double t6401;
  double t6406;
  double t6408;
  double t6412;
  double t6416;
  double t6420;
  double t6421;
  double t6423;
  double t6588;
  double t6591;
  double t6688;
  double t6690;
  double t6716;
  double t6721;
  double t6766;
  double t6772;
  double t6576;
  double t6578;
  double t6612;
  double t6615;
  double t6617;
  double t6624;
  double t6634;
  double t6593;
  double t6595;
  double t6596;
  double t6650;
  double t6655;
  double t6664;
  double t6699;
  double t6701;
  double t6702;
  double t6705;
  double t6706;
  double t6707;
  double t6736;
  double t6737;
  double t6738;
  double t6752;
  double t6753;
  double t6756;
  double t6774;
  double t6782;
  double t6787;
  double t6797;
  double t6798;
  double t6799;
  double t6819;
  double t6821;
  double t6825;
  double t6844;
  double t6847;
  double t6853;
  double t6480;
  double t6493;
  double t6494;
  double t6495;
  double t6512;
  double t6513;
  double t6517;
  double t6520;
  double t6521;
  double t6522;
  double t6525;
  double t6530;
  double t6535;
  double t6536;
  double t6542;
  double t6543;
  double t6368;
  double t6427;
  double t6433;
  double t6584;
  double t6597;
  double t6600;
  double t6643;
  double t6676;
  double t6703;
  double t6711;
  double t6751;
  double t6763;
  double t6791;
  double t6802;
  double t6804;
  double t6805;
  double t6807;
  double t6809;
  double t6811;
  double t6815;
  double t6816;
  double t6832;
  double t6843;
  double t6854;
  double t6857;
  double t6859;
  double t6864;
  double t6866;
  double t6873;
  double t6875;
  double t6880;
  double t6881;
  double t6886;
  double t6888;
  double t6890;
  double t6893;
  double t6896;
  double t6897;
  double t6898;
  double t6899;
  double t6900;
  double t6902;
  double t6903;
  double t6907;
  double t6908;
  double t6912;
  double t6914;
  double t6917;
  double t6919;
  double t6920;
  double t6922;
  double t6927;
  double t6934;
  double t6938;
  double t6439;
  double t6454;
  double t6458;
  t421 = Cos(var1[8]);
  t490 = Cos(var1[10]);
  t532 = Sin(var1[9]);
  t488 = Cos(var1[9]);
  t646 = Sin(var1[10]);
  t410 = Cos(var1[11]);
  t737 = -1.*t421*t490*t532;
  t798 = -1.*t421*t488*t646;
  t887 = t737 + t798;
  t496 = t421*t488*t490;
  t672 = -1.*t421*t532*t646;
  t698 = t496 + t672;
  t1014 = Sin(var1[11]);
  t303 = Cos(var1[12]);
  t1115 = t410*t887;
  t1135 = -1.*t698*t1014;
  t1152 = t1115 + t1135;
  t715 = t410*t698;
  t1023 = t887*t1014;
  t1102 = t715 + t1023;
  t1190 = Sin(var1[12]);
  t267 = Cos(var1[13]);
  t1247 = t303*t1152;
  t1473 = -1.*t1102*t1190;
  t1504 = t1247 + t1473;
  t1113 = t303*t1102;
  t1196 = t1152*t1190;
  t1202 = t1113 + t1196;
  t1575 = Sin(var1[13]);
  t1963 = Cos(var1[7]);
  t1826 = Sin(var1[7]);
  t1888 = Sin(var1[8]);
  t2118 = t1963*t488;
  t2179 = -1.*t1826*t1888*t532;
  t2185 = t2118 + t2179;
  t1904 = t488*t1826*t1888;
  t2018 = t1963*t532;
  t2077 = t1904 + t2018;
  t2381 = t490*t2185;
  t2397 = -1.*t2077*t646;
  t2431 = t2381 + t2397;
  t2085 = t490*t2077;
  t2239 = t2185*t646;
  t2344 = t2085 + t2239;
  t2464 = t410*t2431;
  t2521 = -1.*t2344*t1014;
  t2534 = t2464 + t2521;
  t2363 = t410*t2344;
  t2439 = t2431*t1014;
  t2440 = t2363 + t2439;
  t2579 = t303*t2534;
  t2587 = -1.*t2440*t1190;
  t2646 = t2579 + t2587;
  t2459 = t303*t2440;
  t2542 = t2534*t1190;
  t2555 = t2459 + t2542;
  t1237 = t267*t1202;
  t1593 = t1504*t1575;
  t1617 = t1237 + t1593;
  t1682 = t267*t1504;
  t1707 = -1.*t1202*t1575;
  t1728 = t1682 + t1707;
  t2565 = t267*t2555;
  t2694 = t2646*t1575;
  t2734 = t2565 + t2694;
  t2802 = t267*t2646;
  t2804 = -1.*t2555*t1575;
  t2808 = t2802 + t2804;
  t3212 = 0.642788*t2734;
  t3219 = 0.766044*t2808;
  t3228 = t3212 + t3219;
  t3002 = -0.766044*t1617;
  t3138 = 0.642788*t1728;
  t3188 = t3002 + t3138;
  t3458 = -1.*t488*t1826;
  t3461 = -1.*t1963*t1888*t532;
  t3468 = t3458 + t3461;
  t3336 = t1963*t488*t1888;
  t3385 = -1.*t1826*t532;
  t3426 = t3336 + t3385;
  t3510 = t490*t3468;
  t3567 = -1.*t3426*t646;
  t3577 = t3510 + t3567;
  t3452 = t490*t3426;
  t3476 = t3468*t646;
  t3477 = t3452 + t3476;
  t3655 = t410*t3577;
  t3693 = -1.*t3477*t1014;
  t3715 = t3655 + t3693;
  t3493 = t410*t3477;
  t3623 = t3577*t1014;
  t3626 = t3493 + t3623;
  t3807 = t303*t3715;
  t3813 = -1.*t3626*t1190;
  t3855 = t3807 + t3813;
  t3643 = t303*t3626;
  t3736 = t3715*t1190;
  t3737 = t3643 + t3736;
  t2778 = -0.766044*t2734;
  t2863 = 0.642788*t2808;
  t2899 = t2778 + t2863;
  t1630 = 0.642788*t1617;
  t1769 = 0.766044*t1728;
  t1813 = t1630 + t1769;
  t3754 = t267*t3737;
  t3868 = t3855*t1575;
  t3880 = t3754 + t3868;
  t3908 = t267*t3855;
  t3923 = -1.*t3737*t1575;
  t3950 = t3908 + t3923;
  t3892 = -0.766044*t3880;
  t3998 = 0.642788*t3950;
  t4002 = t3892 + t3998;
  t4077 = 0.642788*t3880;
  t4091 = 0.766044*t3950;
  t4125 = t4077 + t4091;
  t229 = Cos(var1[1]);
  t4193 = t1813*t4002;
  t4215 = -1.*t3188*t4125;
  t3321 = t1963*t421*t3188;
  t4005 = t1888*t4002;
  t4019 = t3321 + t4005;
  t4047 = -1.*t3228*t4019;
  t4060 = t1963*t421*t1813;
  t4138 = t1888*t4125;
  t4163 = t4060 + t4138;
  t4185 = t2899*t4163;
  t4266 = t4193 + t4215;
  t4267 = -1.*t421*t1826*t4266;
  t4283 = 0. + t4047 + t4185 + t4267;
  t4285 = 1/t4283;
  t85 = Cos(var1[0]);
  t4325 = Sin(var1[0]);
  t4454 = Sin(var1[1]);
  t4379 = t4125*t2899;
  t4437 = -1.*t4002*t3228;
  t4449 = 0. + t4379 + t4437;
  t5048 = Cos(var1[3]);
  t5023 = Cos(var1[2]);
  t5024 = Sin(var1[3]);
  t5050 = Sin(var1[2]);
  t5081 = Cos(var1[4]);
  t5038 = -1.*t229*t5023*t5024;
  t5054 = -1.*t5048*t229*t5050;
  t5057 = t5038 + t5054;
  t4988 = Sin(var1[4]);
  t5124 = t5048*t229*t5023;
  t5131 = -1.*t229*t5024*t5050;
  t5135 = t5124 + t5131;
  t5160 = Cos(var1[5]);
  t5069 = t4988*t5057;
  t5141 = t5081*t5135;
  t5156 = t5069 + t5141;
  t4986 = Sin(var1[5]);
  t5162 = t5081*t5057;
  t5164 = -1.*t4988*t5135;
  t5189 = t5162 + t5164;
  t5211 = Cos(var1[6]);
  t5158 = -1.*t4986*t5156;
  t5197 = t5160*t5189;
  t5202 = t5158 + t5197;
  t4984 = Sin(var1[6]);
  t5220 = t5160*t5156;
  t5229 = t4986*t5189;
  t5231 = t5220 + t5229;
  t2900 = -1.*t1813*t2899;
  t3231 = t3188*t3228;
  t3303 = 0. + t2900 + t3231;
  t5339 = t85*t5023*t4454;
  t5348 = -1.*t4325*t5050;
  t5373 = t5339 + t5348;
  t5412 = -1.*t5023*t4325;
  t5429 = -1.*t85*t4454*t5050;
  t5434 = t5412 + t5429;
  t5383 = -1.*t5024*t5373;
  t5447 = t5048*t5434;
  t5450 = t5383 + t5447;
  t5472 = t5048*t5373;
  t5490 = t5024*t5434;
  t5493 = t5472 + t5490;
  t5453 = t4988*t5450;
  t5499 = t5081*t5493;
  t5505 = t5453 + t5499;
  t5511 = t5081*t5450;
  t5520 = -1.*t4988*t5493;
  t5525 = t5511 + t5520;
  t5507 = -1.*t4986*t5505;
  t5526 = t5160*t5525;
  t5538 = t5507 + t5526;
  t5551 = t5160*t5505;
  t5556 = t4986*t5525;
  t5558 = t5551 + t5556;
  t4295 = 0. + t4193 + t4215;
  t5656 = t5023*t4325*t4454;
  t5659 = t85*t5050;
  t5668 = t5656 + t5659;
  t5678 = t85*t5023;
  t5698 = -1.*t4325*t4454*t5050;
  t5701 = t5678 + t5698;
  t5671 = -1.*t5024*t5668;
  t5719 = t5048*t5701;
  t5728 = t5671 + t5719;
  t5745 = t5048*t5668;
  t5749 = t5024*t5701;
  t5752 = t5745 + t5749;
  t5731 = t4988*t5728;
  t5753 = t5081*t5752;
  t5761 = t5731 + t5753;
  t5773 = t5081*t5728;
  t5779 = -1.*t4988*t5752;
  t5784 = t5773 + t5779;
  t5765 = -1.*t4986*t5761;
  t5786 = t5160*t5784;
  t5795 = t5765 + t5786;
  t5824 = t5160*t5761;
  t5826 = t4986*t5784;
  t5829 = t5824 + t5826;
  t4767 = -1.*t421*t1826*t4002;
  t4802 = t1963*t421*t2899;
  t4817 = 0. + t4767 + t4802;
  t5208 = t4984*t5202;
  t5241 = t5211*t5231;
  t5242 = t5208 + t5241;
  t5263 = 0.642788*t5242;
  t5264 = t5211*t5202;
  t5266 = -1.*t4984*t5231;
  t5274 = t5264 + t5266;
  t5316 = 0.766044*t5274;
  t5329 = t5263 + t5316;
  t4533 = t421*t1826*t3188;
  t4545 = t1888*t2899;
  t4559 = 0. + t4533 + t4545;
  t5547 = t4984*t5538;
  t5559 = t5211*t5558;
  t5573 = t5547 + t5559;
  t5582 = 0.642788*t5573;
  t5614 = t5211*t5538;
  t5624 = -1.*t4984*t5558;
  t5634 = t5614 + t5624;
  t5646 = 0.766044*t5634;
  t5650 = t5582 + t5646;
  t4703 = -1.*t1963*t421*t3188;
  t4718 = -1.*t1888*t4002;
  t4733 = 0. + t4703 + t4718;
  t5796 = t4984*t5795;
  t5831 = t5211*t5829;
  t5833 = t5796 + t5831;
  t5838 = 0.642788*t5833;
  t5854 = t5211*t5795;
  t5858 = -1.*t4984*t5829;
  t5862 = t5854 + t5858;
  t5870 = 0.766044*t5862;
  t5875 = t5838 + t5870;
  t4949 = t421*t1826*t4125;
  t4951 = -1.*t1963*t421*t3228;
  t4957 = 0. + t4949 + t4951;
  t4857 = -1.*t421*t1826*t1813;
  t4893 = -1.*t1888*t3228;
  t4898 = 0. + t4857 + t4893;
  t4917 = 0. + t4060 + t4138;
  t5956 = -0.766044*t5242;
  t5959 = 0.642788*t5274;
  t5960 = t5956 + t5959;
  t5989 = -0.766044*t5573;
  t5994 = 0.642788*t5634;
  t5996 = t5989 + t5994;
  t6028 = -0.766044*t5833;
  t6036 = 0.642788*t5862;
  t6041 = t6028 + t6036;
  t6126 = -1.*t488;
  t6132 = 1. + t6126;
  t6172 = -1.*t490;
  t6176 = 1. + t6172;
  t6207 = -1.*t410;
  t6209 = 1. + t6207;
  t6242 = -1.*t303;
  t6244 = 1. + t6242;
  t6295 = -1.*t267;
  t6297 = 1. + t6295;
  t6105 = -1.*t421;
  t6106 = 1. + t6105;
  t6139 = -0.049*t6132;
  t6140 = -0.09*t532;
  t6141 = 0. + t6139 + t6140;
  t6188 = -0.049*t6176;
  t6189 = -0.21*t646;
  t6191 = 0. + t6188 + t6189;
  t6197 = -0.21*t6176;
  t6202 = 0.049*t646;
  t6203 = 0. + t6197 + t6202;
  t6212 = -0.0016*t6209;
  t6214 = -0.2707*t1014;
  t6219 = 0. + t6212 + t6214;
  t6229 = -0.2707*t6209;
  t6232 = 0.0016*t1014;
  t6233 = 0. + t6229 + t6232;
  t6253 = 0.0184*t6244;
  t6269 = -0.7055*t1190;
  t6273 = 0. + t6253 + t6269;
  t6283 = -0.7055*t6244;
  t6288 = -0.0184*t1190;
  t6293 = 0. + t6283 + t6288;
  t6298 = -0.0216*t6297;
  t6299 = -1.1135*t1575;
  t6312 = 0. + t6298 + t6299;
  t6329 = -1.1135*t6297;
  t6331 = 0.0216*t1575;
  t6333 = 0. + t6329 + t6331;
  t6095 = -1.*t1963;
  t6101 = 1. + t6095;
  t6102 = -0.135*t6101;
  t6103 = -0.1305*t1963*t421;
  t6108 = -0.135*t6106;
  t6113 = 0.049*t1888;
  t6115 = 0. + t6108 + t6113;
  t6125 = t1963*t6115;
  t6147 = t1963*t1888*t6141;
  t6148 = -0.09*t6132;
  t6150 = 0.049*t532;
  t6153 = 0. + t6148 + t6150;
  t6156 = -1.*t1826*t6153;
  t6195 = t3426*t6191;
  t6204 = t3468*t6203;
  t6221 = t3477*t6219;
  t6238 = t3577*t6233;
  t6274 = t3626*t6273;
  t6294 = t3715*t6293;
  t6327 = t3737*t6312;
  t6344 = t3855*t6333;
  t6348 = 0.0306*t3880;
  t6353 = -1.1312*t3950;
  t6355 = 0. + t6102 + t6103 + t6125 + t6147 + t6156 + t6195 + t6204 + t6221 + t6238 + t6274 + t6294 + t6327 + t6344 + t6348 + t6353;
  t6371 = -0.049*t6106;
  t6374 = -0.004500000000000004*t1888;
  t6379 = t421*t6141;
  t6380 = t421*t488*t6191;
  t6389 = -1.*t421*t532*t6203;
  t6394 = t698*t6219;
  t6401 = t887*t6233;
  t6406 = t1102*t6273;
  t6408 = t1152*t6293;
  t6412 = t1202*t6312;
  t6416 = t1504*t6333;
  t6420 = 0.0306*t1617;
  t6421 = -1.1312*t1728;
  t6423 = 0. + t6371 + t6374 + t6379 + t6380 + t6389 + t6394 + t6401 + t6406 + t6408 + t6412 + t6416 + t6420 + t6421;
  t6588 = -1.*t5048;
  t6591 = 1. + t6588;
  t6688 = -1.*t5081;
  t6690 = 1. + t6688;
  t6716 = -1.*t5160;
  t6721 = 1. + t6716;
  t6766 = -1.*t5211;
  t6772 = 1. + t6766;
  t6576 = -1.*t229;
  t6578 = 1. + t6576;
  t6612 = -1.*t5023;
  t6615 = 1. + t6612;
  t6617 = -0.049*t6615;
  t6624 = -0.09*t5050;
  t6634 = 0. + t6617 + t6624;
  t6593 = -0.049*t6591;
  t6595 = -0.21*t5024;
  t6596 = 0. + t6593 + t6595;
  t6650 = -0.21*t6591;
  t6655 = 0.049*t5024;
  t6664 = 0. + t6650 + t6655;
  t6699 = -0.2707*t6690;
  t6701 = 0.0016*t4988;
  t6702 = 0. + t6699 + t6701;
  t6705 = -0.0016*t6690;
  t6706 = -0.2707*t4988;
  t6707 = 0. + t6705 + t6706;
  t6736 = 0.0184*t6721;
  t6737 = -0.7055*t4986;
  t6738 = 0. + t6736 + t6737;
  t6752 = -0.7055*t6721;
  t6753 = -0.0184*t4986;
  t6756 = 0. + t6752 + t6753;
  t6774 = -1.1135*t6772;
  t6782 = 0.0216*t4984;
  t6787 = 0. + t6774 + t6782;
  t6797 = -0.0216*t6772;
  t6798 = -1.1135*t4984;
  t6799 = 0. + t6797 + t6798;
  t6819 = 0.135*t6578;
  t6821 = 0.049*t4454;
  t6825 = 0. + t6819 + t6821;
  t6844 = -0.09*t6615;
  t6847 = 0.049*t5050;
  t6853 = 0. + t6844 + t6847;
  t6480 = 0.135*t1826;
  t6493 = -0.1305*t421*t1826;
  t6494 = t1826*t6115;
  t6495 = t1826*t1888*t6141;
  t6512 = t1963*t6153;
  t6513 = t2077*t6191;
  t6517 = t2185*t6203;
  t6520 = t2344*t6219;
  t6521 = t2431*t6233;
  t6522 = t2440*t6273;
  t6525 = t2534*t6293;
  t6530 = t2555*t6312;
  t6535 = t2646*t6333;
  t6536 = 0.0306*t2734;
  t6542 = -1.1312*t2808;
  t6543 = 0. + t6480 + t6493 + t6494 + t6495 + t6512 + t6513 + t6517 + t6520 + t6521 + t6522 + t6525 + t6530 + t6535 + t6536 + t6542;
  t6368 = t3188*t6355;
  t6427 = -1.*t6423*t4002;
  t6433 = t6368 + t6427;
  t6584 = -0.049*t6578;
  t6597 = t229*t5023*t6596;
  t6600 = 0.004500000000000004*t4454;
  t6643 = t229*t6634;
  t6676 = -1.*t229*t6664*t5050;
  t6703 = t6702*t5057;
  t6711 = t6707*t5135;
  t6751 = t6738*t5156;
  t6763 = t6756*t5189;
  t6791 = t6787*t5202;
  t6802 = t6799*t5231;
  t6804 = 0.0306*t5242;
  t6805 = -1.1312*t5274;
  t6807 = 0. + t6584 + t6597 + t6600 + t6643 + t6676 + t6703 + t6711 + t6751 + t6763 + t6791 + t6802 + t6804 + t6805;
  t6809 = -1.*t85;
  t6811 = 1. + t6809;
  t6815 = 0.135*t6811;
  t6816 = 0.1305*t85*t229;
  t6832 = t85*t6825;
  t6843 = t85*t4454*t6634;
  t6854 = -1.*t4325*t6853;
  t6857 = t6596*t5373;
  t6859 = t6664*t5434;
  t6864 = t6702*t5450;
  t6866 = t6707*t5493;
  t6873 = t6738*t5505;
  t6875 = t6756*t5525;
  t6880 = t6787*t5538;
  t6881 = t6799*t5558;
  t6886 = 0.0306*t5573;
  t6888 = -1.1312*t5634;
  t6890 = 0. + t6815 + t6816 + t6832 + t6843 + t6854 + t6857 + t6859 + t6864 + t6866 + t6873 + t6875 + t6880 + t6881 + t6886 + t6888;
  t6893 = -0.135*t4325;
  t6896 = 0.1305*t229*t4325;
  t6897 = t4325*t6825;
  t6898 = t4325*t4454*t6634;
  t6899 = t85*t6853;
  t6900 = t6596*t5668;
  t6902 = t6664*t5701;
  t6903 = t6702*t5728;
  t6907 = t6707*t5752;
  t6908 = t6738*t5761;
  t6912 = t6756*t5784;
  t6914 = t6787*t5795;
  t6917 = t6799*t5829;
  t6919 = 0.0306*t5833;
  t6920 = -1.1312*t5862;
  t6922 = 0. + t6893 + t6896 + t6897 + t6898 + t6899 + t6900 + t6902 + t6903 + t6907 + t6908 + t6912 + t6914 + t6917 + t6919 + t6920;
  t6927 = t1963*t421*t6423;
  t6934 = t1888*t6355;
  t6938 = t6927 + t6934;
  t6439 = t1813*t6355;
  t6454 = -1.*t6423*t4125;
  t6458 = t6439 + t6454;

  p_output1(0)=0. - 1.*t229*t4285*t4295*t4325 + t4285*t4449*t4454 - 1.*t229*t3303*t4285*t85;
  p_output1(1)=0. - 1.*t229*t4285*t4325*t4733 + t4285*t4454*t4817 - 1.*t229*t4285*t4559*t85;
  p_output1(2)=0. - 1.*t229*t4285*t4325*t4917 + t4285*t4454*t4957 - 1.*t229*t4285*t4898*t85;
  p_output1(3)=0.;
  p_output1(4)=0. + t4285*t4449*t5329 + t3303*t4285*t5650 + t4285*t4295*t5875;
  p_output1(5)=0. + t4285*t4817*t5329 + t4285*t4559*t5650 + t4285*t4733*t5875;
  p_output1(6)=0. + t4285*t4957*t5329 + t4285*t4898*t5650 + t4285*t4917*t5875;
  p_output1(7)=0.;
  p_output1(8)=0. + t4285*t4449*t5960 + t3303*t4285*t5996 + t4285*t4295*t6041;
  p_output1(9)=0. + t4285*t4817*t5960 + t4285*t4559*t5996 + t4285*t4733*t6041;
  p_output1(10)=0. + t4285*t4957*t5960 + t4285*t4898*t5996 + t4285*t4917*t6041;
  p_output1(11)=0.;
  p_output1(12)=t4285*(-1.*t3228*t6433 + t2899*t6458 - 1.*t4266*t6543) + t4285*t4449*t6807 + t3303*t4285*t6890 + t4285*t4295*t6922;
  p_output1(13)=t4285*t4817*t6807 + t4285*t4559*t6890 + t4285*t4733*t6922 + t4285*(-1.*t1826*t421*t6433 + t4019*t6543 - 1.*t2899*t6938);
  p_output1(14)=t4285*t4957*t6807 + t4285*t4898*t6890 + t4285*t4917*t6922 + t4285*(t1826*t421*t6458 - 1.*t4163*t6543 + t3228*t6938);
  p_output1(15)=0. + (t4047 + t4185 + t4267)*t4285;
}


       
Eigen::Matrix<double,4,4> H_RightToeBottom_to_LeftToeBottom(const Eigen::Matrix<double,14,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,4,4>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



