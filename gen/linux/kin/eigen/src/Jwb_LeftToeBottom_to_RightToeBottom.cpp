/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 23:21:48 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jwb_LeftToeBottom_to_RightToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,14> &p_output1, const Eigen::Matrix<double,14,1> &var1)
{
  double t75;
  double t386;
  double t313;
  double t333;
  double t426;
  double t473;
  double t365;
  double t440;
  double t447;
  double t279;
  double t475;
  double t495;
  double t496;
  double t572;
  double t464;
  double t513;
  double t520;
  double t161;
  double t577;
  double t605;
  double t612;
  double t689;
  double t525;
  double t641;
  double t660;
  double t160;
  double t715;
  double t735;
  double t754;
  double t789;
  double t683;
  double t760;
  double t761;
  double t105;
  double t797;
  double t800;
  double t821;
  double t1094;
  double t1107;
  double t1144;
  double t1151;
  double t1177;
  double t1195;
  double t1199;
  double t1167;
  double t1202;
  double t1209;
  double t1222;
  double t1223;
  double t1238;
  double t1219;
  double t1286;
  double t1294;
  double t1306;
  double t1344;
  double t1347;
  double t1501;
  double t1504;
  double t1519;
  double t1534;
  double t1575;
  double t1592;
  double t1532;
  double t1608;
  double t1631;
  double t1648;
  double t1650;
  double t1655;
  double t1641;
  double t1657;
  double t1659;
  double t1703;
  double t1707;
  double t1711;
  double t1674;
  double t1714;
  double t1744;
  double t1754;
  double t1769;
  double t1773;
  double t788;
  double t918;
  double t919;
  double t924;
  double t956;
  double t969;
  double t1303;
  double t1376;
  double t1391;
  double t1446;
  double t1453;
  double t1471;
  double t1746;
  double t1795;
  double t1807;
  double t1839;
  double t1842;
  double t1844;
  double t1939;
  double t1940;
  double t1941;
  double t1808;
  double t1859;
  double t1867;
  double t1405;
  double t1472;
  double t1480;
  double t1953;
  double t1956;
  double t1965;
  double t921;
  double t976;
  double t1058;
  double t1495;
  double t1877;
  double t1882;
  double t1890;
  double t1891;
  double t1892;
  double t1924;
  double t1945;
  double t1967;
  double t1989;
  double t1991;
  double t2017;
  double t2033;
  double t2059;
  double t2089;
  double t2369;
  double t2313;
  double t2330;
  double t2350;
  double t2371;
  double t2304;
  double t2407;
  double t2463;
  double t2470;
  double t2351;
  double t2377;
  double t2385;
  double t2472;
  double t2297;
  double t2516;
  double t2517;
  double t2527;
  double t2391;
  double t2488;
  double t2506;
  double t2533;
  double t2223;
  double t2581;
  double t2599;
  double t2611;
  double t2510;
  double t2545;
  double t2557;
  double t2663;
  double t2222;
  double t2820;
  double t2823;
  double t2842;
  double t2563;
  double t2674;
  double t2675;
  double t2888;
  double t2097;
  double t2169;
  double t3173;
  double t3215;
  double t3280;
  double t3289;
  double t3174;
  double t3197;
  double t3209;
  double t3338;
  double t3372;
  double t3420;
  double t3210;
  double t3297;
  double t3318;
  double t3539;
  double t3559;
  double t3564;
  double t3327;
  double t3460;
  double t3467;
  double t3768;
  double t3776;
  double t3805;
  double t3696;
  double t3702;
  double t3727;
  double t3859;
  double t3866;
  double t3896;
  double t3740;
  double t3823;
  double t3829;
  double t3956;
  double t3960;
  double t3970;
  double t3843;
  double t3908;
  double t3943;
  double t4110;
  double t4138;
  double t4142;
  double t3952;
  double t3985;
  double t4027;
  double t2710;
  double t2963;
  double t2970;
  double t3010;
  double t3043;
  double t3070;
  double t3510;
  double t3576;
  double t3602;
  double t3611;
  double t3636;
  double t3645;
  double t4083;
  double t4161;
  double t4172;
  double t4220;
  double t4221;
  double t4237;
  double t4334;
  double t4338;
  double t4342;
  double t3158;
  double t3160;
  double t3166;
  double t4369;
  double t4410;
  double t4430;
  double t3656;
  double t3664;
  double t3686;
  double t4513;
  double t4522;
  double t4540;
  double t4273;
  double t4279;
  double t4283;
  double t2997;
  double t3096;
  double t3138;
  double t4349;
  double t3608;
  double t3647;
  double t3650;
  double t4461;
  double t4474;
  double t4501;
  double t4185;
  double t4240;
  double t4266;
  double t4559;
  double t4573;
  double t4645;
  double t2090;
  double t2189;
  double t2220;
  double t4792;
  double t4794;
  double t4842;
  double t4870;
  double t4697;
  double t4733;
  double t4747;
  double t4786;
  double t4960;
  double t4994;
  double t4997;
  double t5010;
  double t5016;
  double t5020;
  double t5059;
  double t4354;
  double t4509;
  double t4649;
  double t4657;
  double t3171;
  double t3690;
  double t4311;
  double t4327;
  double t4962;
  double t5012;
  double t5076;
  double t5115;
  double t5130;
  double t5139;
  double t5151;
  double t5152;
  double t5157;
  double t5170;
  double t5180;
  double t5205;
  double t5356;
  double t5388;
  double t5395;
  double t5397;
  double t5686;
  double t5688;
  double t5695;
  double t5732;
  double t5750;
  double t5769;
  double t5720;
  double t5773;
  double t5800;
  double t5854;
  double t5884;
  double t5949;
  double t5806;
  double t5953;
  double t5956;
  double t6040;
  double t6043;
  double t6074;
  double t5538;
  double t5550;
  double t5563;
  double t5117;
  double t5272;
  double t5322;
  double t5346;
  double t5353;
  double t5404;
  double t5415;
  double t5418;
  double t5456;
  double t5479;
  double t5499;
  double t5528;
  double t5583;
  double t5597;
  double t5600;
  double t5643;
  double t5647;
  double t6235;
  double t6243;
  double t6295;
  double t6217;
  double t6312;
  double t6325;
  double t6342;
  double t6355;
  double t6335;
  double t6362;
  double t6367;
  double t6383;
  double t6385;
  double t6393;
  double t96;
  double t5992;
  double t6075;
  double t6085;
  double t6089;
  double t6105;
  double t6108;
  double t6123;
  double t6129;
  double t6155;
  double t6159;
  double t6163;
  double t6375;
  double t6409;
  double t6416;
  double t6423;
  double t6436;
  double t6439;
  double t6461;
  double t6472;
  double t6487;
  double t6496;
  double t6501;
  double t6182;
  double t6192;
  double t6521;
  double t6525;
  double t6534;
  double t6542;
  double t6554;
  double t6945;
  double t6965;
  double t6974;
  double t6631;
  double t6633;
  double t7011;
  double t7015;
  double t7040;
  double t6642;
  double t6667;
  double t6689;
  double t6727;
  double t6741;
  double t6849;
  double t6858;
  double t6867;
  double t6882;
  double t6899;
  double t6905;
  double t6933;
  double t4694;
  double t4911;
  double t4921;
  double t4925;
  double t4928;
  double t6574;
  double t6585;
  double t6591;
  double t6611;
  double t6612;
  double t6771;
  double t6784;
  double t6806;
  double t6812;
  double t6832;
  double t7163;
  double t7181;
  double t7189;
  double t7201;
  double t7211;
  double t7215;
  double t7240;
  double t7241;
  double t7247;
  double t7259;
  double t7262;
  double t7263;
  double t7250;
  double t7264;
  double t7272;
  double t7276;
  double t7285;
  double t7288;
  double t7273;
  double t7296;
  double t7304;
  double t7310;
  double t7321;
  double t7323;
  double t7406;
  double t7413;
  double t7414;
  double t7405;
  double t7432;
  double t7440;
  double t7452;
  double t7469;
  double t7444;
  double t7470;
  double t7474;
  double t7476;
  double t7477;
  double t7493;
  double t7305;
  double t7325;
  double t7340;
  double t7355;
  double t7365;
  double t7371;
  double t7475;
  double t7494;
  double t7506;
  double t7511;
  double t7529;
  double t7530;
  t75 = Sin(var1[1]);
  t386 = Cos(var1[0]);
  t313 = Cos(var1[2]);
  t333 = Sin(var1[0]);
  t426 = Sin(var1[2]);
  t473 = Cos(var1[3]);
  t365 = t313*t333*t75;
  t440 = t386*t426;
  t447 = t365 + t440;
  t279 = Sin(var1[3]);
  t475 = t386*t313;
  t495 = -1.*t333*t75*t426;
  t496 = t475 + t495;
  t572 = Cos(var1[4]);
  t464 = -1.*t279*t447;
  t513 = t473*t496;
  t520 = t464 + t513;
  t161 = Sin(var1[4]);
  t577 = t473*t447;
  t605 = t279*t496;
  t612 = t577 + t605;
  t689 = Cos(var1[5]);
  t525 = t161*t520;
  t641 = t572*t612;
  t660 = t525 + t641;
  t160 = Sin(var1[5]);
  t715 = t572*t520;
  t735 = -1.*t161*t612;
  t754 = t715 + t735;
  t789 = Cos(var1[6]);
  t683 = -1.*t160*t660;
  t760 = t689*t754;
  t761 = t683 + t760;
  t105 = Sin(var1[6]);
  t797 = t689*t660;
  t800 = t160*t754;
  t821 = t797 + t800;
  t1094 = Cos(var1[1]);
  t1107 = -1.*t1094*t313*t279;
  t1144 = -1.*t473*t1094*t426;
  t1151 = t1107 + t1144;
  t1177 = t473*t1094*t313;
  t1195 = -1.*t1094*t279*t426;
  t1199 = t1177 + t1195;
  t1167 = t161*t1151;
  t1202 = t572*t1199;
  t1209 = t1167 + t1202;
  t1222 = t572*t1151;
  t1223 = -1.*t161*t1199;
  t1238 = t1222 + t1223;
  t1219 = -1.*t160*t1209;
  t1286 = t689*t1238;
  t1294 = t1219 + t1286;
  t1306 = t689*t1209;
  t1344 = t160*t1238;
  t1347 = t1306 + t1344;
  t1501 = t386*t313*t75;
  t1504 = -1.*t333*t426;
  t1519 = t1501 + t1504;
  t1534 = -1.*t313*t333;
  t1575 = -1.*t386*t75*t426;
  t1592 = t1534 + t1575;
  t1532 = -1.*t279*t1519;
  t1608 = t473*t1592;
  t1631 = t1532 + t1608;
  t1648 = t473*t1519;
  t1650 = t279*t1592;
  t1655 = t1648 + t1650;
  t1641 = t161*t1631;
  t1657 = t572*t1655;
  t1659 = t1641 + t1657;
  t1703 = t572*t1631;
  t1707 = -1.*t161*t1655;
  t1711 = t1703 + t1707;
  t1674 = -1.*t160*t1659;
  t1714 = t689*t1711;
  t1744 = t1674 + t1714;
  t1754 = t689*t1659;
  t1769 = t160*t1711;
  t1773 = t1754 + t1769;
  t788 = t105*t761;
  t918 = t789*t821;
  t919 = t788 + t918;
  t924 = t789*t761;
  t956 = -1.*t105*t821;
  t969 = t924 + t956;
  t1303 = t105*t1294;
  t1376 = t789*t1347;
  t1391 = t1303 + t1376;
  t1446 = t789*t1294;
  t1453 = -1.*t105*t1347;
  t1471 = t1446 + t1453;
  t1746 = t105*t1744;
  t1795 = t789*t1773;
  t1807 = t1746 + t1795;
  t1839 = t789*t1744;
  t1842 = -1.*t105*t1773;
  t1844 = t1839 + t1842;
  t1939 = 0.642788*t1391;
  t1940 = 0.766044*t1471;
  t1941 = t1939 + t1940;
  t1808 = -0.766044*t1807;
  t1859 = 0.642788*t1844;
  t1867 = t1808 + t1859;
  t1405 = -0.766044*t1391;
  t1472 = 0.642788*t1471;
  t1480 = t1405 + t1472;
  t1953 = 0.642788*t1807;
  t1956 = 0.766044*t1844;
  t1965 = t1953 + t1956;
  t921 = 0.642788*t919;
  t976 = 0.766044*t969;
  t1058 = t921 + t976;
  t1495 = t386*t1094*t1480;
  t1877 = t75*t1867;
  t1882 = t1495 + t1877;
  t1890 = -1.*t1058*t1882;
  t1891 = -0.766044*t919;
  t1892 = 0.642788*t969;
  t1924 = t1891 + t1892;
  t1945 = t386*t1094*t1941;
  t1967 = t75*t1965;
  t1989 = t1945 + t1967;
  t1991 = t1924*t1989;
  t2017 = t1941*t1867;
  t2033 = -1.*t1480*t1965;
  t2059 = t2017 + t2033;
  t2089 = -1.*t1094*t333*t2059;
  t2369 = Cos(var1[7]);
  t2313 = Cos(var1[9]);
  t2330 = Sin(var1[7]);
  t2350 = Sin(var1[8]);
  t2371 = Sin(var1[9]);
  t2304 = Cos(var1[10]);
  t2407 = t2369*t2313;
  t2463 = -1.*t2330*t2350*t2371;
  t2470 = t2407 + t2463;
  t2351 = t2313*t2330*t2350;
  t2377 = t2369*t2371;
  t2385 = t2351 + t2377;
  t2472 = Sin(var1[10]);
  t2297 = Cos(var1[11]);
  t2516 = t2304*t2470;
  t2517 = -1.*t2385*t2472;
  t2527 = t2516 + t2517;
  t2391 = t2304*t2385;
  t2488 = t2470*t2472;
  t2506 = t2391 + t2488;
  t2533 = Sin(var1[11]);
  t2223 = Cos(var1[12]);
  t2581 = t2297*t2527;
  t2599 = -1.*t2506*t2533;
  t2611 = t2581 + t2599;
  t2510 = t2297*t2506;
  t2545 = t2527*t2533;
  t2557 = t2510 + t2545;
  t2663 = Sin(var1[12]);
  t2222 = Cos(var1[13]);
  t2820 = t2223*t2611;
  t2823 = -1.*t2557*t2663;
  t2842 = t2820 + t2823;
  t2563 = t2223*t2557;
  t2674 = t2611*t2663;
  t2675 = t2563 + t2674;
  t2888 = Sin(var1[13]);
  t2097 = 0. + t1890 + t1991 + t2089;
  t2169 = 1/t2097;
  t3173 = Cos(var1[8]);
  t3215 = -1.*t3173*t2304*t2371;
  t3280 = -1.*t3173*t2313*t2472;
  t3289 = t3215 + t3280;
  t3174 = t3173*t2313*t2304;
  t3197 = -1.*t3173*t2371*t2472;
  t3209 = t3174 + t3197;
  t3338 = t2297*t3289;
  t3372 = -1.*t3209*t2533;
  t3420 = t3338 + t3372;
  t3210 = t2297*t3209;
  t3297 = t3289*t2533;
  t3318 = t3210 + t3297;
  t3539 = t2223*t3420;
  t3559 = -1.*t3318*t2663;
  t3564 = t3539 + t3559;
  t3327 = t2223*t3318;
  t3460 = t3420*t2663;
  t3467 = t3327 + t3460;
  t3768 = -1.*t2313*t2330;
  t3776 = -1.*t2369*t2350*t2371;
  t3805 = t3768 + t3776;
  t3696 = t2369*t2313*t2350;
  t3702 = -1.*t2330*t2371;
  t3727 = t3696 + t3702;
  t3859 = t2304*t3805;
  t3866 = -1.*t3727*t2472;
  t3896 = t3859 + t3866;
  t3740 = t2304*t3727;
  t3823 = t3805*t2472;
  t3829 = t3740 + t3823;
  t3956 = t2297*t3896;
  t3960 = -1.*t3829*t2533;
  t3970 = t3956 + t3960;
  t3843 = t2297*t3829;
  t3908 = t3896*t2533;
  t3943 = t3843 + t3908;
  t4110 = t2223*t3970;
  t4138 = -1.*t3943*t2663;
  t4142 = t4110 + t4138;
  t3952 = t2223*t3943;
  t3985 = t3970*t2663;
  t4027 = t3952 + t3985;
  t2710 = t2222*t2675;
  t2963 = t2842*t2888;
  t2970 = t2710 + t2963;
  t3010 = t2222*t2842;
  t3043 = -1.*t2675*t2888;
  t3070 = t3010 + t3043;
  t3510 = t2222*t3467;
  t3576 = t3564*t2888;
  t3602 = t3510 + t3576;
  t3611 = t2222*t3564;
  t3636 = -1.*t3467*t2888;
  t3645 = t3611 + t3636;
  t4083 = t2222*t4027;
  t4161 = t4142*t2888;
  t4172 = t4083 + t4161;
  t4220 = t2222*t4142;
  t4221 = -1.*t4027*t2888;
  t4237 = t4220 + t4221;
  t4334 = -0.766044*t2970;
  t4338 = 0.642788*t3070;
  t4342 = t4334 + t4338;
  t3158 = -1.*t386*t1094*t1480;
  t3160 = -1.*t75*t1867;
  t3166 = 0. + t3158 + t3160;
  t4369 = -0.766044*t3602;
  t4410 = 0.642788*t3645;
  t4430 = t4369 + t4410;
  t3656 = -1.*t1094*t333*t1867;
  t3664 = t386*t1094*t1924;
  t3686 = 0. + t3656 + t3664;
  t4513 = -0.766044*t4172;
  t4522 = 0.642788*t4237;
  t4540 = t4513 + t4522;
  t4273 = t1094*t333*t1480;
  t4279 = t75*t1924;
  t4283 = 0. + t4273 + t4279;
  t2997 = 0.642788*t2970;
  t3096 = 0.766044*t3070;
  t3138 = t2997 + t3096;
  t4349 = 0. + t1945 + t1967;
  t3608 = 0.642788*t3602;
  t3647 = 0.766044*t3645;
  t3650 = t3608 + t3647;
  t4461 = t1094*t333*t1965;
  t4474 = -1.*t386*t1094*t1058;
  t4501 = 0. + t4461 + t4474;
  t4185 = 0.642788*t4172;
  t4240 = 0.766044*t4237;
  t4266 = t4185 + t4240;
  t4559 = -1.*t1094*t333*t1941;
  t4573 = -1.*t75*t1058;
  t4645 = 0. + t4559 + t4573;
  t2090 = t1890 + t1991 + t2089;
  t2189 = t2090*t2169;
  t2220 = 0. + t2189;
  t4792 = t3138*t4349*t2169;
  t4794 = t3650*t4501*t2169;
  t4842 = t4266*t4645*t2169;
  t4870 = 0. + t4792 + t4794 + t4842;
  t4697 = t4342*t3166*t2169;
  t4733 = t4430*t3686*t2169;
  t4747 = t4540*t4283*t2169;
  t4786 = 0. + t4697 + t4733 + t4747;
  t4960 = 0. + t2017 + t2033;
  t4994 = -1.*t1941*t1924;
  t4997 = t1480*t1058;
  t5010 = 0. + t4994 + t4997;
  t5016 = t1965*t1924;
  t5020 = -1.*t1867*t1058;
  t5059 = 0. + t5016 + t5020;
  t4354 = t4342*t4349*t2169;
  t4509 = t4430*t4501*t2169;
  t4649 = t4540*t4645*t2169;
  t4657 = 0. + t4354 + t4509 + t4649;
  t3171 = t3138*t3166*t2169;
  t3690 = t3650*t3686*t2169;
  t4311 = t4266*t4283*t2169;
  t4327 = 0. + t3171 + t3690 + t4311;
  t4962 = -1.*t3173*t2330*t4960*t2169;
  t5012 = -1.*t2369*t3173*t5010*t2169;
  t5076 = t2350*t5059*t2169;
  t5115 = 0. + t4962 + t5012 + t5076;
  t5130 = -1.*t3173*t2330*t3166*t2169;
  t5139 = t2350*t3686*t2169;
  t5151 = -1.*t2369*t3173*t4283*t2169;
  t5152 = 0. + t5130 + t5139 + t5151;
  t5157 = t4342*t4960*t2169;
  t5170 = t4540*t5010*t2169;
  t5180 = t4430*t5059*t2169;
  t5205 = 0. + t5157 + t5170 + t5180;
  t5356 = t3138*t4960*t2169;
  t5388 = t4266*t5010*t2169;
  t5395 = t3650*t5059*t2169;
  t5397 = 0. + t5356 + t5388 + t5395;
  t5686 = 0.642788*t789;
  t5688 = -0.766044*t105;
  t5695 = t5686 + t5688;
  t5732 = -0.766044*t789;
  t5750 = -0.642788*t105;
  t5769 = t5732 + t5750;
  t5720 = -1.*t160*t5695;
  t5773 = t689*t5769;
  t5800 = 0. + t5720 + t5773;
  t5854 = t689*t5695;
  t5884 = t160*t5769;
  t5949 = 0. + t5854 + t5884;
  t5806 = t161*t5800;
  t5953 = t572*t5949;
  t5956 = 0. + t5806 + t5953;
  t6040 = t572*t5800;
  t6043 = -1.*t161*t5949;
  t6074 = 0. + t6040 + t6043;
  t5538 = -1.*t4327*t5205;
  t5550 = t4786*t5397;
  t5563 = t5538 + t5550;
  t5117 = t4786*t5115;
  t5272 = -1.*t5152*t5205;
  t5322 = t5117 + t5272;
  t5346 = -1.*t4870*t5322;
  t5353 = t4327*t5115;
  t5404 = -1.*t5152*t5397;
  t5415 = t5353 + t5404;
  t5418 = t4657*t5415;
  t5456 = -1.*t3173*t2330*t4349*t2169;
  t5479 = t2350*t4501*t2169;
  t5499 = -1.*t2369*t3173*t4645*t2169;
  t5528 = 0. + t5456 + t5479 + t5499;
  t5583 = t5528*t5563;
  t5597 = t5346 + t5418 + t5583;
  t5600 = t2220*t5597;
  t5643 = 0. + t5600;
  t5647 = 1/t5643;
  t6235 = 0.766044*t789;
  t6243 = 0.642788*t105;
  t6295 = t6235 + t6243;
  t6217 = t160*t5695;
  t6312 = t689*t6295;
  t6325 = 0. + t6217 + t6312;
  t6342 = -1.*t160*t6295;
  t6355 = 0. + t5854 + t6342;
  t6335 = -1.*t161*t6325;
  t6362 = t572*t6355;
  t6367 = 0. + t6335 + t6362;
  t6383 = t572*t6325;
  t6385 = t161*t6355;
  t6393 = 0. + t6383 + t6385;
  t96 = 0. + t75;
  t5992 = -1.*t279*t5956;
  t6075 = t473*t6074;
  t6085 = 0. + t5992 + t6075;
  t6089 = t313*t6085;
  t6105 = t473*t5956;
  t6108 = t279*t6074;
  t6123 = 0. + t6105 + t6108;
  t6129 = -1.*t6123*t426;
  t6155 = 0. + t6089 + t6129;
  t6159 = t1094*t6155;
  t6163 = 0. + t6159;
  t6375 = t473*t6367;
  t6409 = -1.*t279*t6393;
  t6416 = 0. + t6375 + t6409;
  t6423 = t313*t6416;
  t6436 = t279*t6367;
  t6439 = t473*t6393;
  t6461 = 0. + t6436 + t6439;
  t6472 = -1.*t6461*t426;
  t6487 = 0. + t6423 + t6472;
  t6496 = t1094*t6487;
  t6501 = 0. + t6496;
  t6182 = t2220*t5563;
  t6192 = 0. + t6182;
  t6521 = -1.*t4870*t5205;
  t6525 = t4657*t5397;
  t6534 = t6521 + t6525;
  t6542 = -1.*t2220*t6534;
  t6554 = 0. + t6542;
  t6945 = t313*t6123;
  t6965 = t6085*t426;
  t6974 = 0. + t6945 + t6965;
  t6631 = -1.*t2220*t5322;
  t6633 = 0. + t6631;
  t7011 = t313*t6461;
  t7015 = t6416*t426;
  t7040 = 0. + t7011 + t7015;
  t6642 = t4657*t5115;
  t6667 = -1.*t5528*t5205;
  t6689 = t6642 + t6667;
  t6727 = t2220*t6689;
  t6741 = 0. + t6727;
  t6849 = t2220*t5415;
  t6858 = 0. + t6849;
  t6867 = t4870*t5115;
  t6882 = -1.*t5528*t5397;
  t6899 = t6867 + t6882;
  t6905 = -1.*t2220*t6899;
  t6933 = 0. + t6905;
  t4694 = t4327*t4657;
  t4911 = -1.*t4786*t4870;
  t4921 = t4694 + t4911;
  t4925 = t2220*t4921;
  t4928 = 0. + t4925;
  t6574 = -1.*t4786*t5528;
  t6585 = t5152*t4657;
  t6591 = t6574 + t6585;
  t6611 = -1.*t2220*t6591;
  t6612 = 0. + t6611;
  t6771 = -1.*t4327*t5528;
  t6784 = t5152*t4870;
  t6806 = t6771 + t6784;
  t6812 = t2220*t6806;
  t6832 = 0. + t6812;
  t7163 = -1.*t4928*t5647;
  t7181 = 0. + t7163;
  t7189 = -1.*t6612*t5647;
  t7201 = 0. + t7189;
  t7211 = -1.*t6832*t5647;
  t7215 = 0. + t7211;
  t7240 = 0.642788*t2222;
  t7241 = -0.766044*t2888;
  t7247 = t7240 + t7241;
  t7259 = 0.766044*t2222;
  t7262 = 0.642788*t2888;
  t7263 = t7259 + t7262;
  t7250 = t2663*t7247;
  t7264 = t2223*t7263;
  t7272 = 0. + t7250 + t7264;
  t7276 = t2223*t7247;
  t7285 = -1.*t2663*t7263;
  t7288 = 0. + t7276 + t7285;
  t7273 = -1.*t2533*t7272;
  t7296 = t2297*t7288;
  t7304 = 0. + t7273 + t7296;
  t7310 = t2297*t7272;
  t7321 = t2533*t7288;
  t7323 = 0. + t7310 + t7321;
  t7406 = -0.766044*t2222;
  t7413 = -0.642788*t2888;
  t7414 = t7406 + t7413;
  t7405 = -1.*t2663*t7247;
  t7432 = t2223*t7414;
  t7440 = 0. + t7405 + t7432;
  t7452 = t2663*t7414;
  t7469 = 0. + t7276 + t7452;
  t7444 = t2533*t7440;
  t7470 = t2297*t7469;
  t7474 = 0. + t7444 + t7470;
  t7476 = t2297*t7440;
  t7477 = -1.*t2533*t7469;
  t7493 = 0. + t7476 + t7477;
  t7305 = t2472*t7304;
  t7325 = t2304*t7323;
  t7340 = 0. + t7305 + t7325;
  t7355 = t2304*t7304;
  t7365 = -1.*t2472*t7323;
  t7371 = 0. + t7355 + t7365;
  t7475 = -1.*t2472*t7474;
  t7494 = t2304*t7493;
  t7506 = 0. + t7475 + t7494;
  t7511 = t2304*t7474;
  t7529 = t2472*t7493;
  t7530 = 0. + t7511 + t7529;

  p_output1(0)=-1.*t5647*t6163*t6192 - 1.*t5647*t6501*t6554 - 1.*t4928*t5647*t96;
  p_output1(1)=-1.*t5647*t6163*t6633 - 1.*t5647*t6501*t6741 - 1.*t5647*t6612*t96;
  p_output1(2)=-1.*t5647*t6163*t6858 - 1.*t5647*t6501*t6933 - 1.*t5647*t6832*t96;
  p_output1(3)=0. - 1.*t5647*t6192*t6974 - 1.*t5647*t6554*t7040;
  p_output1(4)=0. - 1.*t5647*t6633*t6974 - 1.*t5647*t6741*t7040;
  p_output1(5)=0. - 1.*t5647*t6858*t6974 - 1.*t5647*t6933*t7040;
  p_output1(6)=t7181;
  p_output1(7)=t7201;
  p_output1(8)=t7215;
  p_output1(9)=t7181;
  p_output1(10)=t7201;
  p_output1(11)=t7215;
  p_output1(12)=t7181;
  p_output1(13)=t7201;
  p_output1(14)=t7215;
  p_output1(15)=t7181;
  p_output1(16)=t7201;
  p_output1(17)=t7215;
  p_output1(18)=t7181;
  p_output1(19)=t7201;
  p_output1(20)=t7215;
  p_output1(21)=0. + t2350;
  p_output1(22)=0. + t3173*(0. - 1.*t2371*t7340 + t2313*t7371);
  p_output1(23)=0. + t3173*(0. + t2313*t7506 - 1.*t2371*t7530);
  p_output1(24)=0.;
  p_output1(25)=0. + t2313*t7340 + t2371*t7371;
  p_output1(26)=0. + t2371*t7506 + t2313*t7530;
  p_output1(27)=1.;
  p_output1(28)=0.;
  p_output1(29)=0.;
  p_output1(30)=1.;
  p_output1(31)=0.;
  p_output1(32)=0.;
  p_output1(33)=1.;
  p_output1(34)=0.;
  p_output1(35)=0.;
  p_output1(36)=1.;
  p_output1(37)=0.;
  p_output1(38)=0.;
  p_output1(39)=1.;
  p_output1(40)=0.;
  p_output1(41)=0.;
}


       
Eigen::Matrix<double,3,14> Jwb_LeftToeBottom_to_RightToeBottom(const Eigen::Matrix<double,14,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,14>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



