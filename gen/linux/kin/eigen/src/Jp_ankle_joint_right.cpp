/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 22:44:34 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_ankle_joint_right.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  double t839;
  double t1038;
  double t978;
  double t1033;
  double t1067;
  double t569;
  double t621;
  double t626;
  double t802;
  double t941;
  double t1034;
  double t1146;
  double t1163;
  double t1211;
  double t1293;
  double t1333;
  double t1350;
  double t11;
  double t1411;
  double t1447;
  double t1601;
  double t1683;
  double t1716;
  double t1719;
  double t1825;
  double t2035;
  double t2130;
  double t2233;
  double t2799;
  double t2801;
  double t2830;
  double t2852;
  double t2861;
  double t2878;
  double t2894;
  double t2980;
  double t2984;
  double t3041;
  double t3080;
  double t3091;
  double t3131;
  double t3307;
  double t3317;
  double t3340;
  double t3478;
  double t3603;
  double t3606;
  double t3625;
  double t3853;
  double t3874;
  double t3913;
  double t4028;
  double t4115;
  double t4146;
  double t4182;
  double t4244;
  double t4248;
  double t4380;
  double t4521;
  double t4525;
  double t4567;
  double t773;
  double t814;
  double t830;
  double t958;
  double t975;
  double t1215;
  double t1219;
  double t1230;
  double t1273;
  double t1352;
  double t1372;
  double t1408;
  double t4985;
  double t5006;
  double t5016;
  double t5160;
  double t5213;
  double t5373;
  double t1730;
  double t1903;
  double t1982;
  double t5467;
  double t5480;
  double t5534;
  double t2741;
  double t2765;
  double t2775;
  double t2884;
  double t2966;
  double t2969;
  double t5625;
  double t5662;
  double t5675;
  double t5798;
  double t5825;
  double t5826;
  double t3072;
  double t3074;
  double t3077;
  double t3364;
  double t3537;
  double t3583;
  double t5879;
  double t5900;
  double t5906;
  double t5941;
  double t5963;
  double t5979;
  double t3762;
  double t3783;
  double t3797;
  double t4179;
  double t4196;
  double t4242;
  double t6017;
  double t6020;
  double t6044;
  double t6099;
  double t6149;
  double t6156;
  double t4404;
  double t4449;
  double t4462;
  double t6188;
  double t6228;
  double t6229;
  double t6287;
  double t6306;
  double t6327;
  double t6757;
  double t6772;
  double t6796;
  double t6806;
  double t6814;
  double t6818;
  double t6854;
  double t6885;
  double t6932;
  double t6944;
  double t6947;
  double t6965;
  double t6990;
  double t6997;
  double t7006;
  double t7012;
  double t7015;
  double t7026;
  double t7117;
  double t7208;
  double t7221;
  double t7266;
  double t7301;
  double t7307;
  double t7314;
  double t7351;
  double t7356;
  double t7534;
  double t7543;
  double t7550;
  double t7562;
  double t7564;
  double t7569;
  double t7685;
  double t7689;
  double t7710;
  double t7717;
  double t7748;
  double t7761;
  double t7785;
  double t7787;
  double t7805;
  double t7837;
  double t7843;
  double t7859;
  double t7883;
  double t7895;
  double t7902;
  double t7916;
  double t7955;
  double t7956;
  double t8012;
  double t8031;
  double t8041;
  double t8241;
  double t8265;
  double t8273;
  double t8288;
  double t8290;
  double t8305;
  double t8344;
  double t8347;
  double t8352;
  double t8360;
  double t8368;
  double t8373;
  double t8381;
  double t8382;
  double t8388;
  double t8400;
  double t8417;
  double t8420;
  double t8437;
  double t8439;
  double t8468;
  double t8513;
  double t8553;
  double t8566;
  double t8578;
  double t8587;
  double t8599;
  double t8679;
  double t8680;
  double t8689;
  double t8735;
  double t8737;
  double t8721;
  double t8723;
  double t8725;
  double t8758;
  double t8771;
  double t8774;
  double t8786;
  double t8787;
  double t8794;
  double t8807;
  double t8813;
  double t8820;
  double t8822;
  double t8850;
  double t8851;
  double t8872;
  double t8885;
  double t8888;
  double t8892;
  double t8899;
  double t8919;
  double t8993;
  double t9023;
  double t9029;
  double t9059;
  double t9064;
  double t9076;
  double t9040;
  double t9041;
  double t9135;
  double t9154;
  double t9180;
  double t9189;
  double t9198;
  double t9217;
  double t9220;
  double t9233;
  double t9245;
  double t9249;
  double t9264;
  double t9279;
  double t9281;
  double t9293;
  double t9296;
  double t9311;
  double t9313;
  double t9316;
  double t9455;
  double t9460;
  double t9465;
  double t9441;
  double t9450;
  double t9451;
  double t9494;
  double t9502;
  double t9506;
  double t9519;
  double t9530;
  double t9531;
  double t9533;
  double t9534;
  double t9547;
  double t9554;
  double t9561;
  double t9567;
  double t9586;
  double t9605;
  double t9611;
  double t9616;
  double t9618;
  double t9635;
  double t9708;
  double t9709;
  double t9728;
  double t9737;
  double t9750;
  double t9757;
  double t9768;
  double t9772;
  double t9783;
  double t9784;
  double t9789;
  double t9793;
  double t9800;
  double t9802;
  double t9811;
  double t9812;
  double t9818;
  double t9829;
  double t9830;
  double t9831;
  double t9886;
  double t9888;
  double t9896;
  double t9931;
  double t9932;
  double t9901;
  double t9908;
  double t9964;
  double t9972;
  double t9973;
  double t9981;
  double t9987;
  double t9995;
  double t10001;
  double t10013;
  double t10014;
  double t10025;
  double t10031;
  double t10033;
  double t10040;
  double t10043;
  double t10045;
  double t10053;
  double t10057;
  double t10059;
  double t9452;
  double t9478;
  double t9479;
  double t9487;
  double t9508;
  double t9532;
  double t9553;
  double t9569;
  double t9612;
  double t9648;
  double t9650;
  double t9657;
  double t9661;
  double t9667;
  double t9681;
  double t9682;
  double t9690;
  double t9697;
  double t5722;
  double t5724;
  double t5756;
  double t10172;
  double t10177;
  double t10185;
  double t10199;
  double t10203;
  double t10209;
  double t10212;
  double t10214;
  double t10217;
  double t10228;
  double t10237;
  double t10238;
  double t10119;
  double t10132;
  double t10142;
  double t10150;
  double t10151;
  double t10281;
  double t10284;
  double t10285;
  double t10288;
  double t10289;
  double t10295;
  double t10311;
  double t10312;
  double t10313;
  double t10317;
  double t10324;
  double t10328;
  double t10331;
  double t10336;
  double t10339;
  double t10348;
  double t10352;
  double t10357;
  double t10381;
  double t10384;
  double t10385;
  double t10387;
  double t10389;
  double t10393;
  double t10420;
  double t10421;
  double t10424;
  double t10428;
  double t10429;
  double t10431;
  double t10437;
  double t10443;
  double t10446;
  double t10451;
  double t10452;
  double t10459;
  double t10486;
  double t10487;
  double t10491;
  double t10496;
  double t10497;
  double t10504;
  double t10506;
  double t10509;
  double t10512;
  double t10513;
  double t10517;
  double t10521;
  double t10522;
  double t10524;
  double t10474;
  double t10475;
  double t10477;
  double t10478;
  double t10479;
  double t10558;
  double t10559;
  double t10562;
  double t10566;
  double t10567;
  double t10569;
  double t10572;
  double t10573;
  double t10574;
  double t10576;
  double t10577;
  double t10578;
  double t10581;
  double t10582;
  double t10583;
  double t10589;
  double t10592;
  double t10593;
  double t10597;
  double t10598;
  double t10600;
  double t10619;
  double t10620;
  double t10621;
  double t10623;
  double t10624;
  double t10625;
  double t10630;
  double t10633;
  double t10634;
  double t10638;
  double t10639;
  double t10640;
  double t10643;
  double t10645;
  double t10646;
  double t10651;
  double t10652;
  double t10653;
  double t10657;
  double t10658;
  double t10660;
  double t10682;
  double t10684;
  double t10687;
  double t10688;
  double t10689;
  double t10691;
  double t10692;
  double t10671;
  double t10672;
  double t10673;
  double t10676;
  double t10677;
  double t10711;
  double t10712;
  double t10713;
  double t10717;
  double t10718;
  double t10720;
  double t10721;
  double t10723;
  double t10724;
  double t10725;
  double t10728;
  double t10729;
  double t10732;
  double t10747;
  double t10748;
  double t10749;
  double t10752;
  double t10753;
  double t10755;
  double t10756;
  double t10758;
  double t10759;
  double t10761;
  double t10763;
  double t10764;
  double t10765;
  double t10792;
  double t10793;
  double t6379;
  double t10780;
  double t10783;
  double t10786;
  double t10787;
  double t10788;
  double t10812;
  double t10815;
  double t10816;
  double t10818;
  double t10819;
  double t10821;
  double t10822;
  double t10835;
  double t10836;
  double t10838;
  double t10840;
  double t10841;
  double t10843;
  double t10845;
  double t6350;
  double t6412;
  double t10805;
  double t10856;
  double t10857;
  double t10858;
  double t10860;
  double t10861;
  double t10868;
  double t10869;
  double t10870;
  double t10825;
  double t10829;
  double t10880;
  double t10881;
  double t10882;
  double t10848;
  double t10852;
  t839 = Sin(var1[3]);
  t1038 = Cos(var1[3]);
  t978 = Cos(var1[5]);
  t1033 = Sin(var1[4]);
  t1067 = Sin(var1[5]);
  t569 = Cos(var1[14]);
  t621 = -1.*t569;
  t626 = 1. + t621;
  t802 = Sin(var1[14]);
  t941 = Sin(var1[13]);
  t1034 = -1.*t978*t839*t1033;
  t1146 = t1038*t1067;
  t1163 = t1034 + t1146;
  t1211 = Cos(var1[13]);
  t1293 = -1.*t1038*t978;
  t1333 = -1.*t839*t1033*t1067;
  t1350 = t1293 + t1333;
  t11 = Cos(var1[4]);
  t1411 = t941*t1163;
  t1447 = t1211*t1350;
  t1601 = t1411 + t1447;
  t1683 = Cos(var1[15]);
  t1716 = -1.*t1683;
  t1719 = 1. + t1716;
  t1825 = Sin(var1[15]);
  t2035 = t1211*t1163;
  t2130 = -1.*t941*t1350;
  t2233 = t2035 + t2130;
  t2799 = -1.*t569*t11*t839;
  t2801 = t802*t1601;
  t2830 = t2799 + t2801;
  t2852 = Cos(var1[16]);
  t2861 = -1.*t2852;
  t2878 = 1. + t2861;
  t2894 = Sin(var1[16]);
  t2980 = t1825*t2233;
  t2984 = t1683*t2830;
  t3041 = t2980 + t2984;
  t3080 = t1683*t2233;
  t3091 = -1.*t1825*t2830;
  t3131 = t3080 + t3091;
  t3307 = Cos(var1[17]);
  t3317 = -1.*t3307;
  t3340 = 1. + t3317;
  t3478 = Sin(var1[17]);
  t3603 = -1.*t2894*t3041;
  t3606 = t2852*t3131;
  t3625 = t3603 + t3606;
  t3853 = t2852*t3041;
  t3874 = t2894*t3131;
  t3913 = t3853 + t3874;
  t4028 = Cos(var1[18]);
  t4115 = -1.*t4028;
  t4146 = 1. + t4115;
  t4182 = Sin(var1[18]);
  t4244 = t3478*t3625;
  t4248 = t3307*t3913;
  t4380 = t4244 + t4248;
  t4521 = t3307*t3625;
  t4525 = -1.*t3478*t3913;
  t4567 = t4521 + t4525;
  t773 = -0.049*t626;
  t814 = -0.135*t802;
  t830 = 0. + t773 + t814;
  t958 = 0.135*t941;
  t975 = 0. + t958;
  t1215 = -1.*t1211;
  t1219 = 1. + t1215;
  t1230 = -0.135*t1219;
  t1273 = 0. + t1230;
  t1352 = -0.135*t626;
  t1372 = 0.049*t802;
  t1408 = 0. + t1352 + t1372;
  t4985 = t1038*t978*t1033;
  t5006 = t839*t1067;
  t5016 = t4985 + t5006;
  t5160 = -1.*t978*t839;
  t5213 = t1038*t1033*t1067;
  t5373 = t5160 + t5213;
  t1730 = -0.09*t1719;
  t1903 = 0.049*t1825;
  t1982 = 0. + t1730 + t1903;
  t5467 = t941*t5016;
  t5480 = t1211*t5373;
  t5534 = t5467 + t5480;
  t2741 = -0.049*t1719;
  t2765 = -0.09*t1825;
  t2775 = 0. + t2741 + t2765;
  t2884 = -0.049*t2878;
  t2966 = -0.21*t2894;
  t2969 = 0. + t2884 + t2966;
  t5625 = t1211*t5016;
  t5662 = -1.*t941*t5373;
  t5675 = t5625 + t5662;
  t5798 = t569*t1038*t11;
  t5825 = t802*t5534;
  t5826 = t5798 + t5825;
  t3072 = -0.21*t2878;
  t3074 = 0.049*t2894;
  t3077 = 0. + t3072 + t3074;
  t3364 = -0.2707*t3340;
  t3537 = 0.0016*t3478;
  t3583 = 0. + t3364 + t3537;
  t5879 = t1825*t5675;
  t5900 = t1683*t5826;
  t5906 = t5879 + t5900;
  t5941 = t1683*t5675;
  t5963 = -1.*t1825*t5826;
  t5979 = t5941 + t5963;
  t3762 = -0.0016*t3340;
  t3783 = -0.2707*t3478;
  t3797 = 0. + t3762 + t3783;
  t4179 = 0.0184*t4146;
  t4196 = -0.7055*t4182;
  t4242 = 0. + t4179 + t4196;
  t6017 = -1.*t2894*t5906;
  t6020 = t2852*t5979;
  t6044 = t6017 + t6020;
  t6099 = t2852*t5906;
  t6149 = t2894*t5979;
  t6156 = t6099 + t6149;
  t4404 = -0.7055*t4146;
  t4449 = -0.0184*t4182;
  t4462 = 0. + t4404 + t4449;
  t6188 = t3478*t6044;
  t6228 = t3307*t6156;
  t6229 = t6188 + t6228;
  t6287 = t3307*t6044;
  t6306 = -1.*t3478*t6156;
  t6327 = t6287 + t6306;
  t6757 = t1038*t11*t978*t941;
  t6772 = t1211*t1038*t11*t1067;
  t6796 = t6757 + t6772;
  t6806 = t1211*t1038*t11*t978;
  t6814 = -1.*t1038*t11*t941*t1067;
  t6818 = t6806 + t6814;
  t6854 = -1.*t569*t1038*t1033;
  t6885 = t802*t6796;
  t6932 = t6854 + t6885;
  t6944 = t1825*t6818;
  t6947 = t1683*t6932;
  t6965 = t6944 + t6947;
  t6990 = t1683*t6818;
  t6997 = -1.*t1825*t6932;
  t7006 = t6990 + t6997;
  t7012 = -1.*t2894*t6965;
  t7015 = t2852*t7006;
  t7026 = t7012 + t7015;
  t7117 = t2852*t6965;
  t7208 = t2894*t7006;
  t7221 = t7117 + t7208;
  t7266 = t3478*t7026;
  t7301 = t3307*t7221;
  t7307 = t7266 + t7301;
  t7314 = t3307*t7026;
  t7351 = -1.*t3478*t7221;
  t7356 = t7314 + t7351;
  t7534 = t11*t978*t941*t839;
  t7543 = t1211*t11*t839*t1067;
  t7550 = t7534 + t7543;
  t7562 = t1211*t11*t978*t839;
  t7564 = -1.*t11*t941*t839*t1067;
  t7569 = t7562 + t7564;
  t7685 = -1.*t569*t839*t1033;
  t7689 = t802*t7550;
  t7710 = t7685 + t7689;
  t7717 = t1825*t7569;
  t7748 = t1683*t7710;
  t7761 = t7717 + t7748;
  t7785 = t1683*t7569;
  t7787 = -1.*t1825*t7710;
  t7805 = t7785 + t7787;
  t7837 = -1.*t2894*t7761;
  t7843 = t2852*t7805;
  t7859 = t7837 + t7843;
  t7883 = t2852*t7761;
  t7895 = t2894*t7805;
  t7902 = t7883 + t7895;
  t7916 = t3478*t7859;
  t7955 = t3307*t7902;
  t7956 = t7916 + t7955;
  t8012 = t3307*t7859;
  t8031 = -1.*t3478*t7902;
  t8041 = t8012 + t8031;
  t8241 = -1.*t978*t941*t1033;
  t8265 = -1.*t1211*t1033*t1067;
  t8273 = t8241 + t8265;
  t8288 = -1.*t1211*t978*t1033;
  t8290 = t941*t1033*t1067;
  t8305 = t8288 + t8290;
  t8344 = -1.*t569*t11;
  t8347 = t802*t8273;
  t8352 = t8344 + t8347;
  t8360 = t1825*t8305;
  t8368 = t1683*t8352;
  t8373 = t8360 + t8368;
  t8381 = t1683*t8305;
  t8382 = -1.*t1825*t8352;
  t8388 = t8381 + t8382;
  t8400 = -1.*t2894*t8373;
  t8417 = t2852*t8388;
  t8420 = t8400 + t8417;
  t8437 = t2852*t8373;
  t8439 = t2894*t8388;
  t8468 = t8437 + t8439;
  t8513 = t3478*t8420;
  t8553 = t3307*t8468;
  t8566 = t8513 + t8553;
  t8578 = t3307*t8420;
  t8587 = -1.*t3478*t8468;
  t8599 = t8578 + t8587;
  t8679 = t978*t839;
  t8680 = -1.*t1038*t1033*t1067;
  t8689 = t8679 + t8680;
  t8735 = t941*t8689;
  t8737 = t5625 + t8735;
  t8721 = -1.*t941*t5016;
  t8723 = t1211*t8689;
  t8725 = t8721 + t8723;
  t8758 = t1825*t8725;
  t8771 = t1683*t802*t8737;
  t8774 = t8758 + t8771;
  t8786 = t1683*t8725;
  t8787 = -1.*t802*t1825*t8737;
  t8794 = t8786 + t8787;
  t8807 = -1.*t2894*t8774;
  t8813 = t2852*t8794;
  t8820 = t8807 + t8813;
  t8822 = t2852*t8774;
  t8850 = t2894*t8794;
  t8851 = t8822 + t8850;
  t8872 = t3478*t8820;
  t8885 = t3307*t8851;
  t8888 = t8872 + t8885;
  t8892 = t3307*t8820;
  t8899 = -1.*t3478*t8851;
  t8919 = t8892 + t8899;
  t8993 = t978*t839*t1033;
  t9023 = -1.*t1038*t1067;
  t9029 = t8993 + t9023;
  t9059 = t1211*t9029;
  t9064 = t941*t1350;
  t9076 = t9059 + t9064;
  t9040 = -1.*t941*t9029;
  t9041 = t9040 + t1447;
  t9135 = t1825*t9041;
  t9154 = t1683*t802*t9076;
  t9180 = t9135 + t9154;
  t9189 = t1683*t9041;
  t9198 = -1.*t802*t1825*t9076;
  t9217 = t9189 + t9198;
  t9220 = -1.*t2894*t9180;
  t9233 = t2852*t9217;
  t9245 = t9220 + t9233;
  t9249 = t2852*t9180;
  t9264 = t2894*t9217;
  t9279 = t9249 + t9264;
  t9281 = t3478*t9245;
  t9293 = t3307*t9279;
  t9296 = t9281 + t9293;
  t9311 = t3307*t9245;
  t9313 = -1.*t3478*t9279;
  t9316 = t9311 + t9313;
  t9455 = t1211*t11*t978;
  t9460 = -1.*t11*t941*t1067;
  t9465 = t9455 + t9460;
  t9441 = -1.*t11*t978*t941;
  t9450 = -1.*t1211*t11*t1067;
  t9451 = t9441 + t9450;
  t9494 = t1825*t9451;
  t9502 = t1683*t802*t9465;
  t9506 = t9494 + t9502;
  t9519 = t1683*t9451;
  t9530 = -1.*t802*t1825*t9465;
  t9531 = t9519 + t9530;
  t9533 = -1.*t2894*t9506;
  t9534 = t2852*t9531;
  t9547 = t9533 + t9534;
  t9554 = t2852*t9506;
  t9561 = t2894*t9531;
  t9567 = t9554 + t9561;
  t9586 = t3478*t9547;
  t9605 = t3307*t9567;
  t9611 = t9586 + t9605;
  t9616 = t3307*t9547;
  t9618 = -1.*t3478*t9567;
  t9635 = t9616 + t9618;
  t9708 = -1.*t1211*t5373;
  t9709 = t8721 + t9708;
  t9728 = t1825*t9709;
  t9737 = t1683*t802*t5675;
  t9750 = t9728 + t9737;
  t9757 = t1683*t9709;
  t9768 = -1.*t802*t1825*t5675;
  t9772 = t9757 + t9768;
  t9783 = -1.*t2894*t9750;
  t9784 = t2852*t9772;
  t9789 = t9783 + t9784;
  t9793 = t2852*t9750;
  t9800 = t2894*t9772;
  t9802 = t9793 + t9800;
  t9811 = t3478*t9789;
  t9812 = t3307*t9802;
  t9818 = t9811 + t9812;
  t9829 = t3307*t9789;
  t9830 = -1.*t3478*t9802;
  t9831 = t9829 + t9830;
  t9886 = t1038*t978;
  t9888 = t839*t1033*t1067;
  t9896 = t9886 + t9888;
  t9931 = -1.*t941*t9896;
  t9932 = t9059 + t9931;
  t9901 = -1.*t1211*t9896;
  t9908 = t9040 + t9901;
  t9964 = t1825*t9908;
  t9972 = t1683*t802*t9932;
  t9973 = t9964 + t9972;
  t9981 = t1683*t9908;
  t9987 = -1.*t802*t1825*t9932;
  t9995 = t9981 + t9987;
  t10001 = -1.*t2894*t9973;
  t10013 = t2852*t9995;
  t10014 = t10001 + t10013;
  t10025 = t2852*t9973;
  t10031 = t2894*t9995;
  t10033 = t10025 + t10031;
  t10040 = t3478*t10014;
  t10043 = t3307*t10033;
  t10045 = t10040 + t10043;
  t10053 = t3307*t10014;
  t10057 = -1.*t3478*t10033;
  t10059 = t10053 + t10057;
  t9452 = t1982*t9451;
  t9478 = -0.1305*t569*t9465;
  t9479 = t1408*t9465;
  t9487 = t802*t2775*t9465;
  t9508 = t2969*t9506;
  t9532 = t3077*t9531;
  t9553 = t3583*t9547;
  t9569 = t3797*t9567;
  t9612 = t4242*t9611;
  t9648 = t4462*t9635;
  t9650 = -1.*t4182*t9611;
  t9657 = t4028*t9635;
  t9661 = t9650 + t9657;
  t9667 = -0.7055*t9661;
  t9681 = t4028*t9611;
  t9682 = t4182*t9635;
  t9690 = t9681 + t9682;
  t9697 = 0.0184*t9690;
  t5722 = -1.*t1038*t11*t802;
  t5724 = t569*t5534;
  t5756 = t5722 + t5724;
  t10172 = -1.*t2852*t1825*t5756;
  t10177 = -1.*t1683*t2894*t5756;
  t10185 = t10172 + t10177;
  t10199 = t1683*t2852*t5756;
  t10203 = -1.*t1825*t2894*t5756;
  t10209 = t10199 + t10203;
  t10212 = t3478*t10185;
  t10214 = t3307*t10209;
  t10217 = t10212 + t10214;
  t10228 = t3307*t10185;
  t10237 = -1.*t3478*t10209;
  t10238 = t10228 + t10237;
  t10119 = -0.135*t569;
  t10132 = -0.049*t802;
  t10142 = t10119 + t10132;
  t10150 = 0.049*t569;
  t10151 = t10150 + t814;
  t10281 = t941*t9029;
  t10284 = t1211*t9896;
  t10285 = t10281 + t10284;
  t10288 = -1.*t11*t802*t839;
  t10289 = t569*t10285;
  t10295 = t10288 + t10289;
  t10311 = -1.*t2852*t1825*t10295;
  t10312 = -1.*t1683*t2894*t10295;
  t10313 = t10311 + t10312;
  t10317 = t1683*t2852*t10295;
  t10324 = -1.*t1825*t2894*t10295;
  t10328 = t10317 + t10324;
  t10331 = t3478*t10313;
  t10336 = t3307*t10328;
  t10339 = t10331 + t10336;
  t10348 = t3307*t10313;
  t10352 = -1.*t3478*t10328;
  t10357 = t10348 + t10352;
  t10381 = t11*t978*t941;
  t10384 = t1211*t11*t1067;
  t10385 = t10381 + t10384;
  t10387 = t802*t1033;
  t10389 = t569*t10385;
  t10393 = t10387 + t10389;
  t10420 = -1.*t2852*t1825*t10393;
  t10421 = -1.*t1683*t2894*t10393;
  t10424 = t10420 + t10421;
  t10428 = t1683*t2852*t10393;
  t10429 = -1.*t1825*t2894*t10393;
  t10431 = t10428 + t10429;
  t10437 = t3478*t10424;
  t10443 = t3307*t10431;
  t10446 = t10437 + t10443;
  t10451 = t3307*t10424;
  t10452 = -1.*t3478*t10431;
  t10459 = t10451 + t10452;
  t10486 = -1.*t1825*t5675;
  t10487 = -1.*t1683*t5826;
  t10491 = t10486 + t10487;
  t10496 = t2894*t10491;
  t10497 = t10496 + t6020;
  t10504 = t2852*t10491;
  t10506 = -1.*t2894*t5979;
  t10509 = t10504 + t10506;
  t10512 = -1.*t3478*t10497;
  t10513 = t3307*t10509;
  t10517 = t10512 + t10513;
  t10521 = t3307*t10497;
  t10522 = t3478*t10509;
  t10524 = t10521 + t10522;
  t10474 = 0.049*t1683;
  t10475 = t10474 + t2765;
  t10477 = -0.09*t1683;
  t10478 = -0.049*t1825;
  t10479 = t10477 + t10478;
  t10558 = t569*t11*t839;
  t10559 = t802*t10285;
  t10562 = t10558 + t10559;
  t10566 = -1.*t1825*t9932;
  t10567 = -1.*t1683*t10562;
  t10569 = t10566 + t10567;
  t10572 = t1683*t9932;
  t10573 = -1.*t1825*t10562;
  t10574 = t10572 + t10573;
  t10576 = t2894*t10569;
  t10577 = t2852*t10574;
  t10578 = t10576 + t10577;
  t10581 = t2852*t10569;
  t10582 = -1.*t2894*t10574;
  t10583 = t10581 + t10582;
  t10589 = -1.*t3478*t10578;
  t10592 = t3307*t10583;
  t10593 = t10589 + t10592;
  t10597 = t3307*t10578;
  t10598 = t3478*t10583;
  t10600 = t10597 + t10598;
  t10619 = -1.*t569*t1033;
  t10620 = t802*t10385;
  t10621 = t10619 + t10620;
  t10623 = -1.*t1825*t9465;
  t10624 = -1.*t1683*t10621;
  t10625 = t10623 + t10624;
  t10630 = t1683*t9465;
  t10633 = -1.*t1825*t10621;
  t10634 = t10630 + t10633;
  t10638 = t2894*t10625;
  t10639 = t2852*t10634;
  t10640 = t10638 + t10639;
  t10643 = t2852*t10625;
  t10645 = -1.*t2894*t10634;
  t10646 = t10643 + t10645;
  t10651 = -1.*t3478*t10640;
  t10652 = t3307*t10646;
  t10653 = t10651 + t10652;
  t10657 = t3307*t10640;
  t10658 = t3478*t10646;
  t10660 = t10657 + t10658;
  t10682 = -1.*t2852*t5906;
  t10684 = t10682 + t10506;
  t10687 = -1.*t3478*t6044;
  t10688 = t3307*t10684;
  t10689 = t10687 + t10688;
  t10691 = t3478*t10684;
  t10692 = t6287 + t10691;
  t10671 = -0.21*t2852;
  t10672 = -0.049*t2894;
  t10673 = t10671 + t10672;
  t10676 = 0.049*t2852;
  t10677 = t10676 + t2966;
  t10711 = t1825*t9932;
  t10712 = t1683*t10562;
  t10713 = t10711 + t10712;
  t10717 = -1.*t2894*t10713;
  t10718 = t10717 + t10577;
  t10720 = -1.*t2852*t10713;
  t10721 = t10720 + t10582;
  t10723 = -1.*t3478*t10718;
  t10724 = t3307*t10721;
  t10725 = t10723 + t10724;
  t10728 = t3307*t10718;
  t10729 = t3478*t10721;
  t10732 = t10728 + t10729;
  t10747 = t1825*t9465;
  t10748 = t1683*t10621;
  t10749 = t10747 + t10748;
  t10752 = -1.*t2894*t10749;
  t10753 = t10752 + t10639;
  t10755 = -1.*t2852*t10749;
  t10756 = t10755 + t10645;
  t10758 = -1.*t3478*t10753;
  t10759 = t3307*t10756;
  t10761 = t10758 + t10759;
  t10763 = t3307*t10753;
  t10764 = t3478*t10756;
  t10765 = t10763 + t10764;
  t10792 = -1.*t3307*t6156;
  t10793 = t10687 + t10792;
  t6379 = t4028*t6327;
  t10780 = 0.0016*t3307;
  t10783 = t10780 + t3783;
  t10786 = -0.2707*t3307;
  t10787 = -0.0016*t3478;
  t10788 = t10786 + t10787;
  t10812 = t2852*t10713;
  t10815 = t2894*t10574;
  t10816 = t10812 + t10815;
  t10818 = -1.*t3307*t10816;
  t10819 = t10723 + t10818;
  t10821 = -1.*t3478*t10816;
  t10822 = t10728 + t10821;
  t10835 = t2852*t10749;
  t10836 = t2894*t10634;
  t10838 = t10835 + t10836;
  t10840 = -1.*t3307*t10838;
  t10841 = t10758 + t10840;
  t10843 = -1.*t3478*t10838;
  t10845 = t10763 + t10843;
  t6350 = -1.*t4182*t6229;
  t6412 = t6350 + t6379;
  t10805 = -1.*t4182*t6327;
  t10856 = -0.7055*t4028;
  t10857 = 0.0184*t4182;
  t10858 = t10856 + t10857;
  t10860 = -0.0184*t4028;
  t10861 = t10860 + t4196;
  t10868 = t3478*t10718;
  t10869 = t3307*t10816;
  t10870 = t10868 + t10869;
  t10825 = t4028*t10822;
  t10829 = -1.*t4182*t10822;
  t10880 = t3478*t10753;
  t10881 = t3307*t10838;
  t10882 = t10880 + t10881;
  t10848 = t4028*t10845;
  t10852 = -1.*t4182*t10845;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1273*t1350 + t1408*t1601 + t1982*t2233 + t2775*t2830 + t2969*t3041 + t3077*t3131 + t3583*t3625 + t3797*t3913 + t4242*t4380 + t4462*t4567 - 0.7055*(-1.*t4182*t4380 + t4028*t4567) + 0.0184*(t4028*t4380 + t4182*t4567) - 1.*t11*t830*t839 - 0.1305*(t1601*t569 + t11*t802*t839) + t1163*t975;
  p_output1(10)=t1273*t5373 + t1408*t5534 + t1982*t5675 - 0.1305*t5756 + t2775*t5826 + t2969*t5906 + t3077*t5979 + t3583*t6044 + t3797*t6156 + t4242*t6229 + t4462*t6327 + 0.0184*(t4028*t6229 + t4182*t6327) - 0.7055*t6412 + t1038*t11*t830 + t5016*t975;
  p_output1(11)=0;
  p_output1(12)=t1038*t1067*t11*t1273 + t1408*t6796 + t1982*t6818 + t2775*t6932 + t2969*t6965 + t3077*t7006 + t3583*t7026 + t3797*t7221 + t4242*t7307 + t4462*t7356 - 0.7055*(-1.*t4182*t7307 + t4028*t7356) + 0.0184*(t4028*t7307 + t4182*t7356) - 0.1305*(t569*t6796 + t1033*t1038*t802) - 1.*t1033*t1038*t830 + t1038*t11*t975*t978;
  p_output1(13)=t1408*t7550 + t1982*t7569 + t2775*t7710 + t2969*t7761 + t3077*t7805 + t3583*t7859 + t3797*t7902 + t4242*t7956 + t4462*t8041 - 0.7055*(-1.*t4182*t7956 + t4028*t8041) + 0.0184*(t4028*t7956 + t4182*t8041) + t1067*t11*t1273*t839 - 1.*t1033*t830*t839 - 0.1305*(t569*t7550 + t1033*t802*t839) + t11*t839*t975*t978;
  p_output1(14)=-1.*t1033*t1067*t1273 + t1408*t8273 - 0.1305*(t11*t802 + t569*t8273) - 1.*t11*t830 + t1982*t8305 + t2775*t8352 + t2969*t8373 + t3077*t8388 + t3583*t8420 + t3797*t8468 + t4242*t8566 + t4462*t8599 - 0.7055*(-1.*t4182*t8566 + t4028*t8599) + 0.0184*(t4028*t8566 + t4182*t8599) - 1.*t1033*t975*t978;
  p_output1(15)=t1273*t5016 + t1982*t8725 + t1408*t8737 - 0.1305*t569*t8737 + t2775*t802*t8737 + t2969*t8774 + t3077*t8794 + t3583*t8820 + t3797*t8851 + t4242*t8888 + t4462*t8919 - 0.7055*(-1.*t4182*t8888 + t4028*t8919) + 0.0184*(t4028*t8888 + t4182*t8919) + t8689*t975;
  p_output1(16)=t1273*t9029 + t1982*t9041 + t1408*t9076 - 0.1305*t569*t9076 + t2775*t802*t9076 + t2969*t9180 + t3077*t9217 + t3583*t9245 + t3797*t9279 + t4242*t9296 + t4462*t9316 - 0.7055*(-1.*t4182*t9296 + t4028*t9316) + 0.0184*(t4028*t9296 + t4182*t9316) + t1350*t975;
  p_output1(17)=t9452 + t9478 + t9479 + t9487 + t9508 + t9532 + t9553 + t9569 + t9612 + t9648 + t9667 + t9697 - 1.*t1067*t11*t975 + t11*t1273*t978;
  p_output1(18)=0;
  p_output1(19)=0;
  p_output1(20)=0;
  p_output1(21)=0;
  p_output1(22)=0;
  p_output1(23)=0;
  p_output1(24)=0;
  p_output1(25)=0;
  p_output1(26)=0;
  p_output1(27)=0;
  p_output1(28)=0;
  p_output1(29)=0;
  p_output1(30)=0;
  p_output1(31)=0;
  p_output1(32)=0;
  p_output1(33)=0;
  p_output1(34)=0;
  p_output1(35)=0;
  p_output1(36)=0;
  p_output1(37)=0;
  p_output1(38)=0;
  p_output1(39)=0.135*t1211*t5016 + t1408*t5675 - 0.1305*t5675*t569 + t2775*t5675*t802 - 0.135*t5373*t941 + t1982*t9709 + t2969*t9750 + t3077*t9772 + t3583*t9789 + t3797*t9802 + t4242*t9818 + t4462*t9831 - 0.7055*(-1.*t4182*t9818 + t4028*t9831) + 0.0184*(t4028*t9818 + t4182*t9831);
  p_output1(40)=t10014*t3583 + t10033*t3797 - 0.7055*(t10059*t4028 - 1.*t10045*t4182) + 0.0184*(t10045*t4028 + t10059*t4182) + t10045*t4242 + t10059*t4462 + 0.135*t1211*t9029 - 0.135*t941*t9896 + t1982*t9908 + t1408*t9932 - 0.1305*t569*t9932 + t2775*t802*t9932 + t2969*t9973 + t3077*t9995;
  p_output1(41)=-0.135*t1067*t11*t941 + t9452 + t9478 + t9479 + t9487 + t9508 + t9532 + t9553 + t9569 + t9612 + t9648 + t9667 + t9697 + 0.135*t11*t1211*t978;
  p_output1(42)=t10142*t1038*t11 + t10185*t3583 + t10209*t3797 - 0.7055*(t10238*t4028 - 1.*t10217*t4182) + 0.0184*(t10217*t4028 + t10238*t4182) + t10217*t4242 + t10238*t4462 + t10151*t5534 + t2775*t5756 + t1683*t2969*t5756 - 1.*t1825*t3077*t5756 - 0.1305*(-1.*t1038*t11*t569 - 1.*t5534*t802);
  p_output1(43)=t10151*t10285 + t10295*t2775 + t10295*t1683*t2969 - 1.*t10295*t1825*t3077 + t10313*t3583 + t10328*t3797 - 0.7055*(t10357*t4028 - 1.*t10339*t4182) + 0.0184*(t10339*t4028 + t10357*t4182) + t10339*t4242 + t10357*t4462 - 0.1305*(t2799 - 1.*t10285*t802) + t10142*t11*t839;
  p_output1(44)=-1.*t10142*t1033 + t10151*t10385 + t10393*t2775 + t10393*t1683*t2969 - 1.*t10393*t1825*t3077 + t10424*t3583 + t10431*t3797 - 0.7055*(t10459*t4028 - 1.*t10446*t4182) + 0.0184*(t10446*t4028 + t10459*t4182) + t10446*t4242 + t10459*t4462 - 0.1305*(t1033*t569 - 1.*t10385*t802);
  p_output1(45)=t10491*t3077 + t10509*t3583 + t10497*t3797 + 0.0184*(t10524*t4028 + t10517*t4182) - 0.7055*(t10517*t4028 - 1.*t10524*t4182) + t10524*t4242 + t10517*t4462 + t10475*t5675 + t10479*t5826 + t2969*t5979;
  p_output1(46)=t10479*t10562 + t10574*t2969 + t10569*t3077 + t10583*t3583 + t10578*t3797 + 0.0184*(t10600*t4028 + t10593*t4182) - 0.7055*(t10593*t4028 - 1.*t10600*t4182) + t10600*t4242 + t10593*t4462 + t10475*t9932;
  p_output1(47)=t10479*t10621 + t10634*t2969 + t10625*t3077 + t10646*t3583 + t10640*t3797 + 0.0184*(t10660*t4028 + t10653*t4182) - 0.7055*(t10653*t4028 - 1.*t10660*t4182) + t10660*t4242 + t10653*t4462 + t10475*t9465;
  p_output1(48)=t10684*t3583 + 0.0184*(t10692*t4028 + t10689*t4182) - 0.7055*(t10689*t4028 - 1.*t10692*t4182) + t10692*t4242 + t10689*t4462 + t10673*t5906 + t10677*t5979 + t3797*t6044;
  p_output1(49)=t10574*t10677 + t10673*t10713 + t10721*t3583 + t10718*t3797 + 0.0184*(t10732*t4028 + t10725*t4182) - 0.7055*(t10725*t4028 - 1.*t10732*t4182) + t10732*t4242 + t10725*t4462;
  p_output1(50)=t10634*t10677 + t10673*t10749 + t10756*t3583 + t10753*t3797 + 0.0184*(t10765*t4028 + t10761*t4182) - 0.7055*(t10761*t4028 - 1.*t10765*t4182) + t10765*t4242 + t10761*t4462;
  p_output1(51)=-0.7055*(t10805 + t10793*t4028) + t10793*t4462 + t10783*t6044 + t10788*t6156 + t4242*t6327 + 0.0184*(t10793*t4182 + t6379);
  p_output1(52)=t10718*t10783 + t10788*t10816 - 0.7055*(t10829 + t10819*t4028) + 0.0184*(t10825 + t10819*t4182) + t10822*t4242 + t10819*t4462;
  p_output1(53)=t10753*t10783 + t10788*t10838 - 0.7055*(t10852 + t10841*t4028) + 0.0184*(t10848 + t10841*t4182) + t10845*t4242 + t10841*t4462;
  p_output1(54)=t10858*t6229 - 0.7055*(t10805 - 1.*t4028*t6229) + t10861*t6327 + 0.0184*t6412;
  p_output1(55)=t10822*t10861 + t10858*t10870 - 0.7055*(t10829 - 1.*t10870*t4028) + 0.0184*(t10825 - 1.*t10870*t4182);
  p_output1(56)=t10845*t10861 + t10858*t10882 - 0.7055*(t10852 - 1.*t10882*t4028) + 0.0184*(t10848 - 1.*t10882*t4182);
  p_output1(57)=0;
  p_output1(58)=0;
  p_output1(59)=0;
}


       
Eigen::Matrix<double,3,20> Jp_ankle_joint_right(const Eigen::Matrix<double,20,1> &var1)
//void Jp_ankle_joint_right(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,20>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



