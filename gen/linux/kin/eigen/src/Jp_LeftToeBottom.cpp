/*
 * Automatically Generated from Mathematica.
 * Tue 8 Jan 2019 22:44:39 GMT-05:00
 */
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include "Jp_LeftToeBottom.h"

#ifdef _MSC_VER
  #define INLINE __forceinline /* use __forceinline (VC++ specific) */
#else
  #define INLINE static inline        /* use standard inline */
#endif

/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
INLINE double Power(double x, double y) { return pow(x, y); }
INLINE double Sqrt(double x) { return sqrt(x); }

INLINE double Abs(double x) { return fabs(x); }

INLINE double Exp(double x) { return exp(x); }
INLINE double Log(double x) { return log(x); }

INLINE double Sin(double x) { return sin(x); }
INLINE double Cos(double x) { return cos(x); }
INLINE double Tan(double x) { return tan(x); }

INLINE double Csc(double x) { return 1.0/sin(x); }
INLINE double Sec(double x) { return 1.0/cos(x); }

INLINE double ArcSin(double x) { return asin(x); }
INLINE double ArcCos(double x) { return acos(x); }


/* update ArcTan function to use atan2 instead. */
INLINE double ArcTan(double x, double y) { return atan2(y,x); }

INLINE double Sinh(double x) { return sinh(x); }
INLINE double Cosh(double x) { return cosh(x); }
INLINE double Tanh(double x) { return tanh(x); }

#define E 2.71828182845904523536029
#define Pi 3.14159265358979323846264
#define Degree 0.01745329251994329576924

/*
 * Sub functions
 */
static void output1(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  double t266;
  double t408;
  double t426;
  double t264;
  double t430;
  double t83;
  double t287;
  double t525;
  double t526;
  double t685;
  double t737;
  double t762;
  double t776;
  double t928;
  double t989;
  double t992;
  double t1144;
  double t909;
  double t917;
  double t924;
  double t1334;
  double t1665;
  double t1713;
  double t1725;
  double t1749;
  double t1631;
  double t1657;
  double t1663;
  double t1925;
  double t1943;
  double t1974;
  double t2250;
  double t2305;
  double t2358;
  double t2381;
  double t2462;
  double t2487;
  double t2506;
  double t2591;
  double t2603;
  double t2700;
  double t2746;
  double t2763;
  double t2837;
  double t2872;
  double t2927;
  double t3004;
  double t3026;
  double t3248;
  double t3259;
  double t3408;
  double t3429;
  double t3431;
  double t3448;
  double t3513;
  double t3596;
  double t3620;
  double t3629;
  double t3743;
  double t3795;
  double t3796;
  double t3912;
  double t3948;
  double t3959;
  double t3990;
  double t4147;
  double t4148;
  double t4181;
  double t4258;
  double t4259;
  double t4271;
  double t92;
  double t174;
  double t204;
  double t226;
  double t837;
  double t862;
  double t4514;
  double t4553;
  double t4560;
  double t4632;
  double t4686;
  double t4713;
  double t999;
  double t1157;
  double t1175;
  double t1341;
  double t1366;
  double t1418;
  double t4962;
  double t4974;
  double t5033;
  double t1736;
  double t1751;
  double t1755;
  double t2004;
  double t2086;
  double t2091;
  double t2373;
  double t2384;
  double t2417;
  double t5199;
  double t5286;
  double t5289;
  double t5361;
  double t5413;
  double t5434;
  double t2515;
  double t2546;
  double t2559;
  double t2856;
  double t2888;
  double t2895;
  double t5617;
  double t5636;
  double t5747;
  double t5827;
  double t5846;
  double t5850;
  double t3154;
  double t3188;
  double t3226;
  double t3496;
  double t3522;
  double t3590;
  double t5928;
  double t5976;
  double t5995;
  double t6038;
  double t6042;
  double t6075;
  double t3664;
  double t3732;
  double t3735;
  double t3986;
  double t3992;
  double t4042;
  double t6113;
  double t6128;
  double t6132;
  double t6153;
  double t6162;
  double t6168;
  double t4204;
  double t4214;
  double t4235;
  double t6173;
  double t6174;
  double t6199;
  double t6263;
  double t6268;
  double t6280;
  double t6482;
  double t6501;
  double t6502;
  double t6602;
  double t6633;
  double t6674;
  double t6700;
  double t6709;
  double t6749;
  double t6761;
  double t6770;
  double t6771;
  double t6782;
  double t6807;
  double t6820;
  double t6857;
  double t6873;
  double t6877;
  double t6903;
  double t6908;
  double t6909;
  double t6934;
  double t6957;
  double t6964;
  double t7001;
  double t7006;
  double t7007;
  double t7045;
  double t7048;
  double t7071;
  double t7123;
  double t7129;
  double t7133;
  double t7296;
  double t7303;
  double t7328;
  double t7374;
  double t7375;
  double t7380;
  double t7392;
  double t7402;
  double t7403;
  double t7422;
  double t7431;
  double t7433;
  double t7462;
  double t7475;
  double t7484;
  double t7508;
  double t7523;
  double t7545;
  double t7574;
  double t7590;
  double t7600;
  double t7631;
  double t7669;
  double t7681;
  double t7722;
  double t7732;
  double t7746;
  double t7755;
  double t7770;
  double t7784;
  double t7790;
  double t7794;
  double t7825;
  double t7977;
  double t7982;
  double t7987;
  double t8057;
  double t8064;
  double t8066;
  double t8098;
  double t8099;
  double t8105;
  double t8117;
  double t8127;
  double t8138;
  double t8148;
  double t8167;
  double t8184;
  double t8208;
  double t8209;
  double t8228;
  double t8245;
  double t8273;
  double t8278;
  double t8315;
  double t8319;
  double t8325;
  double t8328;
  double t8332;
  double t8340;
  double t8347;
  double t8348;
  double t8349;
  double t8356;
  double t8374;
  double t8379;
  double t8463;
  double t8466;
  double t8471;
  double t8477;
  double t8481;
  double t8500;
  double t8501;
  double t8502;
  double t8513;
  double t8514;
  double t8515;
  double t8531;
  double t8538;
  double t8541;
  double t8547;
  double t8571;
  double t8583;
  double t8590;
  double t8604;
  double t8606;
  double t8635;
  double t8638;
  double t8647;
  double t8660;
  double t8662;
  double t8679;
  double t8688;
  double t8690;
  double t8706;
  double t8722;
  double t8725;
  double t8727;
  double t8821;
  double t8827;
  double t8828;
  double t8856;
  double t8862;
  double t8864;
  double t8878;
  double t8892;
  double t8906;
  double t8913;
  double t8920;
  double t8925;
  double t8928;
  double t8932;
  double t8940;
  double t8942;
  double t8943;
  double t8954;
  double t8960;
  double t8965;
  double t8976;
  double t8988;
  double t9000;
  double t9017;
  double t9020;
  double t9026;
  double t9031;
  double t9033;
  double t9035;
  double t9041;
  double t9042;
  double t9047;
  double t9105;
  double t9108;
  double t9112;
  double t9122;
  double t9146;
  double t9150;
  double t9166;
  double t9176;
  double t9196;
  double t9212;
  double t9217;
  double t9222;
  double t9246;
  double t9256;
  double t9274;
  double t9282;
  double t9284;
  double t9293;
  double t9306;
  double t9311;
  double t9321;
  double t9326;
  double t9327;
  double t9330;
  double t9341;
  double t9346;
  double t9350;
  double t9352;
  double t9353;
  double t9357;
  double t9517;
  double t9554;
  double t9570;
  double t9586;
  double t9602;
  double t9629;
  double t9666;
  double t9671;
  double t9681;
  double t9683;
  double t9685;
  double t9692;
  double t9696;
  double t9709;
  double t9720;
  double t9727;
  double t9752;
  double t9760;
  double t9767;
  double t9770;
  double t9781;
  double t9784;
  double t9790;
  double t9795;
  double t9799;
  double t9800;
  double t9971;
  double t9995;
  double t9999;
  double t10016;
  double t10025;
  double t10062;
  double t10064;
  double t10091;
  double t10098;
  double t10100;
  double t10119;
  double t10124;
  double t10128;
  double t10147;
  double t10148;
  double t10154;
  double t10161;
  double t10163;
  double t10170;
  double t10185;
  double t10187;
  double t10191;
  double t10208;
  double t10210;
  double t10214;
  double t10227;
  double t10234;
  double t10240;
  double t10254;
  double t10262;
  double t10269;
  double t9113;
  double t9114;
  double t9120;
  double t9154;
  double t9204;
  double t9236;
  double t9277;
  double t9304;
  double t9324;
  double t9337;
  double t9351;
  double t9358;
  double t9362;
  double t9378;
  double t9389;
  double t9390;
  double t9398;
  double t9406;
  double t9409;
  double t9429;
  double t5097;
  double t5114;
  double t5162;
  double t10401;
  double t10405;
  double t10411;
  double t10417;
  double t10424;
  double t10447;
  double t10457;
  double t10463;
  double t10464;
  double t10469;
  double t10472;
  double t10474;
  double t10483;
  double t10491;
  double t10493;
  double t10503;
  double t10504;
  double t10505;
  double t10351;
  double t10359;
  double t10360;
  double t10370;
  double t10374;
  double t10555;
  double t10565;
  double t10569;
  double t10577;
  double t10581;
  double t10583;
  double t10617;
  double t10618;
  double t10622;
  double t10628;
  double t10630;
  double t10639;
  double t10646;
  double t10649;
  double t10652;
  double t10658;
  double t10659;
  double t10661;
  double t10665;
  double t10669;
  double t10670;
  double t10674;
  double t10676;
  double t10684;
  double t10740;
  double t10741;
  double t10743;
  double t10746;
  double t10747;
  double t10748;
  double t10773;
  double t10774;
  double t10776;
  double t10780;
  double t10786;
  double t10797;
  double t10802;
  double t10814;
  double t10817;
  double t10826;
  double t10827;
  double t10833;
  double t10836;
  double t10841;
  double t10842;
  double t10850;
  double t10853;
  double t10854;
  double t10896;
  double t10897;
  double t10900;
  double t10908;
  double t10912;
  double t10915;
  double t10920;
  double t10924;
  double t10933;
  double t10935;
  double t10938;
  double t10941;
  double t10944;
  double t10946;
  double t10950;
  double t10954;
  double t10955;
  double t10960;
  double t10962;
  double t10966;
  double t10885;
  double t10886;
  double t10890;
  double t10892;
  double t10893;
  double t10986;
  double t10987;
  double t10990;
  double t10998;
  double t10999;
  double t11002;
  double t11006;
  double t11010;
  double t11012;
  double t11018;
  double t11019;
  double t11023;
  double t11027;
  double t11028;
  double t11029;
  double t11032;
  double t11033;
  double t11036;
  double t11039;
  double t11041;
  double t11042;
  double t11050;
  double t11051;
  double t11054;
  double t11063;
  double t11064;
  double t11066;
  double t11095;
  double t11100;
  double t11103;
  double t11106;
  double t11109;
  double t11110;
  double t11113;
  double t11114;
  double t11117;
  double t11120;
  double t11123;
  double t11125;
  double t11130;
  double t11131;
  double t11138;
  double t11141;
  double t11145;
  double t11146;
  double t11149;
  double t11151;
  double t11152;
  double t11155;
  double t11156;
  double t11158;
  double t11165;
  double t11169;
  double t11170;
  double t11206;
  double t11210;
  double t11219;
  double t11220;
  double t11223;
  double t11226;
  double t11227;
  double t11230;
  double t11233;
  double t11234;
  double t11236;
  double t11237;
  double t11239;
  double t11191;
  double t11194;
  double t11195;
  double t11198;
  double t11200;
  double t11266;
  double t11270;
  double t11271;
  double t11275;
  double t11278;
  double t11283;
  double t11287;
  double t11295;
  double t11297;
  double t11298;
  double t11301;
  double t11302;
  double t11303;
  double t11305;
  double t11306;
  double t11307;
  double t11311;
  double t11312;
  double t11315;
  double t11332;
  double t11333;
  double t11337;
  double t11340;
  double t11341;
  double t11343;
  double t11344;
  double t11346;
  double t11347;
  double t11348;
  double t11350;
  double t11351;
  double t11353;
  double t11356;
  double t11357;
  double t11358;
  double t11361;
  double t11362;
  double t11365;
  double t11387;
  double t11389;
  double t11394;
  double t11395;
  double t11397;
  double t11398;
  double t11399;
  double t11376;
  double t11377;
  double t11381;
  double t11382;
  double t11385;
  double t11416;
  double t11418;
  double t11420;
  double t11424;
  double t11425;
  double t11427;
  double t11428;
  double t11430;
  double t11431;
  double t11432;
  double t11434;
  double t11435;
  double t11436;
  double t11450;
  double t11451;
  double t11452;
  double t11455;
  double t11456;
  double t11461;
  double t11462;
  double t11465;
  double t11466;
  double t11468;
  double t11470;
  double t11471;
  double t11472;
  double t11497;
  double t11498;
  double t6421;
  double t11489;
  double t11490;
  double t11491;
  double t11493;
  double t11494;
  double t11509;
  double t11510;
  double t11511;
  double t11514;
  double t11515;
  double t11517;
  double t11518;
  double t11531;
  double t11532;
  double t11533;
  double t11537;
  double t11538;
  double t11540;
  double t11541;
  double t11500;
  double t6429;
  double t6437;
  double t11552;
  double t11553;
  double t11555;
  double t11556;
  double t11557;
  double t11522;
  double t11565;
  double t11566;
  double t11567;
  double t11526;
  double t11543;
  double t11578;
  double t11579;
  double t11581;
  double t11547;
  t266 = Cos(var1[5]);
  t408 = Sin(var1[3]);
  t426 = Sin(var1[4]);
  t264 = Cos(var1[3]);
  t430 = Sin(var1[5]);
  t83 = Cos(var1[6]);
  t287 = -1.*t264*t266;
  t525 = -1.*t408*t426*t430;
  t526 = t287 + t525;
  t685 = -1.*t266*t408*t426;
  t737 = t264*t430;
  t762 = t685 + t737;
  t776 = Sin(var1[6]);
  t928 = Cos(var1[7]);
  t989 = -1.*t928;
  t992 = 1. + t989;
  t1144 = Sin(var1[7]);
  t909 = t83*t526;
  t917 = t762*t776;
  t924 = t909 + t917;
  t1334 = Cos(var1[4]);
  t1665 = Cos(var1[8]);
  t1713 = -1.*t1665;
  t1725 = 1. + t1713;
  t1749 = Sin(var1[8]);
  t1631 = -1.*t1334*t928*t408;
  t1657 = t924*t1144;
  t1663 = t1631 + t1657;
  t1925 = t83*t762;
  t1943 = -1.*t526*t776;
  t1974 = t1925 + t1943;
  t2250 = Cos(var1[9]);
  t2305 = -1.*t2250;
  t2358 = 1. + t2305;
  t2381 = Sin(var1[9]);
  t2462 = t1665*t1663;
  t2487 = t1974*t1749;
  t2506 = t2462 + t2487;
  t2591 = t1665*t1974;
  t2603 = -1.*t1663*t1749;
  t2700 = t2591 + t2603;
  t2746 = Cos(var1[10]);
  t2763 = -1.*t2746;
  t2837 = 1. + t2763;
  t2872 = Sin(var1[10]);
  t2927 = -1.*t2381*t2506;
  t3004 = t2250*t2700;
  t3026 = t2927 + t3004;
  t3248 = t2250*t2506;
  t3259 = t2381*t2700;
  t3408 = t3248 + t3259;
  t3429 = Cos(var1[11]);
  t3431 = -1.*t3429;
  t3448 = 1. + t3431;
  t3513 = Sin(var1[11]);
  t3596 = t2872*t3026;
  t3620 = t2746*t3408;
  t3629 = t3596 + t3620;
  t3743 = t2746*t3026;
  t3795 = -1.*t2872*t3408;
  t3796 = t3743 + t3795;
  t3912 = Cos(var1[12]);
  t3948 = -1.*t3912;
  t3959 = 1. + t3948;
  t3990 = Sin(var1[12]);
  t4147 = -1.*t3513*t3629;
  t4148 = t3429*t3796;
  t4181 = t4147 + t4148;
  t4258 = t3429*t3629;
  t4259 = t3513*t3796;
  t4271 = t4258 + t4259;
  t92 = -1.*t83;
  t174 = 1. + t92;
  t204 = 0.135*t174;
  t226 = 0. + t204;
  t837 = -0.135*t776;
  t862 = 0. + t837;
  t4514 = -1.*t266*t408;
  t4553 = t264*t426*t430;
  t4560 = t4514 + t4553;
  t4632 = t264*t266*t426;
  t4686 = t408*t430;
  t4713 = t4632 + t4686;
  t999 = 0.135*t992;
  t1157 = 0.049*t1144;
  t1175 = 0. + t999 + t1157;
  t1341 = -0.049*t992;
  t1366 = 0.135*t1144;
  t1418 = 0. + t1341 + t1366;
  t4962 = t83*t4560;
  t4974 = t4713*t776;
  t5033 = t4962 + t4974;
  t1736 = -0.049*t1725;
  t1751 = -0.09*t1749;
  t1755 = 0. + t1736 + t1751;
  t2004 = -0.09*t1725;
  t2086 = 0.049*t1749;
  t2091 = 0. + t2004 + t2086;
  t2373 = -0.049*t2358;
  t2384 = -0.21*t2381;
  t2417 = 0. + t2373 + t2384;
  t5199 = t264*t1334*t928;
  t5286 = t5033*t1144;
  t5289 = t5199 + t5286;
  t5361 = t83*t4713;
  t5413 = -1.*t4560*t776;
  t5434 = t5361 + t5413;
  t2515 = -0.21*t2358;
  t2546 = 0.049*t2381;
  t2559 = 0. + t2515 + t2546;
  t2856 = -0.2707*t2837;
  t2888 = 0.0016*t2872;
  t2895 = 0. + t2856 + t2888;
  t5617 = t1665*t5289;
  t5636 = t5434*t1749;
  t5747 = t5617 + t5636;
  t5827 = t1665*t5434;
  t5846 = -1.*t5289*t1749;
  t5850 = t5827 + t5846;
  t3154 = -0.0016*t2837;
  t3188 = -0.2707*t2872;
  t3226 = 0. + t3154 + t3188;
  t3496 = 0.0184*t3448;
  t3522 = -0.7055*t3513;
  t3590 = 0. + t3496 + t3522;
  t5928 = -1.*t2381*t5747;
  t5976 = t2250*t5850;
  t5995 = t5928 + t5976;
  t6038 = t2250*t5747;
  t6042 = t2381*t5850;
  t6075 = t6038 + t6042;
  t3664 = -0.7055*t3448;
  t3732 = -0.0184*t3513;
  t3735 = 0. + t3664 + t3732;
  t3986 = -1.1135*t3959;
  t3992 = 0.0216*t3990;
  t4042 = 0. + t3986 + t3992;
  t6113 = t2872*t5995;
  t6128 = t2746*t6075;
  t6132 = t6113 + t6128;
  t6153 = t2746*t5995;
  t6162 = -1.*t2872*t6075;
  t6168 = t6153 + t6162;
  t4204 = -0.0216*t3959;
  t4214 = -1.1135*t3990;
  t4235 = 0. + t4204 + t4214;
  t6173 = -1.*t3513*t6132;
  t6174 = t3429*t6168;
  t6199 = t6173 + t6174;
  t6263 = t3429*t6132;
  t6268 = t3513*t6168;
  t6280 = t6263 + t6268;
  t6482 = t264*t1334*t83*t430;
  t6501 = t264*t1334*t266*t776;
  t6502 = t6482 + t6501;
  t6602 = -1.*t264*t928*t426;
  t6633 = t6502*t1144;
  t6674 = t6602 + t6633;
  t6700 = t264*t1334*t266*t83;
  t6709 = -1.*t264*t1334*t430*t776;
  t6749 = t6700 + t6709;
  t6761 = t1665*t6674;
  t6770 = t6749*t1749;
  t6771 = t6761 + t6770;
  t6782 = t1665*t6749;
  t6807 = -1.*t6674*t1749;
  t6820 = t6782 + t6807;
  t6857 = -1.*t2381*t6771;
  t6873 = t2250*t6820;
  t6877 = t6857 + t6873;
  t6903 = t2250*t6771;
  t6908 = t2381*t6820;
  t6909 = t6903 + t6908;
  t6934 = t2872*t6877;
  t6957 = t2746*t6909;
  t6964 = t6934 + t6957;
  t7001 = t2746*t6877;
  t7006 = -1.*t2872*t6909;
  t7007 = t7001 + t7006;
  t7045 = -1.*t3513*t6964;
  t7048 = t3429*t7007;
  t7071 = t7045 + t7048;
  t7123 = t3429*t6964;
  t7129 = t3513*t7007;
  t7133 = t7123 + t7129;
  t7296 = t1334*t83*t408*t430;
  t7303 = t1334*t266*t408*t776;
  t7328 = t7296 + t7303;
  t7374 = -1.*t928*t408*t426;
  t7375 = t7328*t1144;
  t7380 = t7374 + t7375;
  t7392 = t1334*t266*t83*t408;
  t7402 = -1.*t1334*t408*t430*t776;
  t7403 = t7392 + t7402;
  t7422 = t1665*t7380;
  t7431 = t7403*t1749;
  t7433 = t7422 + t7431;
  t7462 = t1665*t7403;
  t7475 = -1.*t7380*t1749;
  t7484 = t7462 + t7475;
  t7508 = -1.*t2381*t7433;
  t7523 = t2250*t7484;
  t7545 = t7508 + t7523;
  t7574 = t2250*t7433;
  t7590 = t2381*t7484;
  t7600 = t7574 + t7590;
  t7631 = t2872*t7545;
  t7669 = t2746*t7600;
  t7681 = t7631 + t7669;
  t7722 = t2746*t7545;
  t7732 = -1.*t2872*t7600;
  t7746 = t7722 + t7732;
  t7755 = -1.*t3513*t7681;
  t7770 = t3429*t7746;
  t7784 = t7755 + t7770;
  t7790 = t3429*t7681;
  t7794 = t3513*t7746;
  t7825 = t7790 + t7794;
  t7977 = -1.*t83*t426*t430;
  t7982 = -1.*t266*t426*t776;
  t7987 = t7977 + t7982;
  t8057 = -1.*t1334*t928;
  t8064 = t7987*t1144;
  t8066 = t8057 + t8064;
  t8098 = -1.*t266*t83*t426;
  t8099 = t426*t430*t776;
  t8105 = t8098 + t8099;
  t8117 = t1665*t8066;
  t8127 = t8105*t1749;
  t8138 = t8117 + t8127;
  t8148 = t1665*t8105;
  t8167 = -1.*t8066*t1749;
  t8184 = t8148 + t8167;
  t8208 = -1.*t2381*t8138;
  t8209 = t2250*t8184;
  t8228 = t8208 + t8209;
  t8245 = t2250*t8138;
  t8273 = t2381*t8184;
  t8278 = t8245 + t8273;
  t8315 = t2872*t8228;
  t8319 = t2746*t8278;
  t8325 = t8315 + t8319;
  t8328 = t2746*t8228;
  t8332 = -1.*t2872*t8278;
  t8340 = t8328 + t8332;
  t8347 = -1.*t3513*t8325;
  t8348 = t3429*t8340;
  t8349 = t8347 + t8348;
  t8356 = t3429*t8325;
  t8374 = t3513*t8340;
  t8379 = t8356 + t8374;
  t8463 = t266*t408;
  t8466 = -1.*t264*t426*t430;
  t8471 = t8463 + t8466;
  t8477 = t8471*t776;
  t8481 = t5361 + t8477;
  t8500 = t83*t8471;
  t8501 = -1.*t4713*t776;
  t8502 = t8500 + t8501;
  t8513 = t1665*t8481*t1144;
  t8514 = t8502*t1749;
  t8515 = t8513 + t8514;
  t8531 = t1665*t8502;
  t8538 = -1.*t8481*t1144*t1749;
  t8541 = t8531 + t8538;
  t8547 = -1.*t2381*t8515;
  t8571 = t2250*t8541;
  t8583 = t8547 + t8571;
  t8590 = t2250*t8515;
  t8604 = t2381*t8541;
  t8606 = t8590 + t8604;
  t8635 = t2872*t8583;
  t8638 = t2746*t8606;
  t8647 = t8635 + t8638;
  t8660 = t2746*t8583;
  t8662 = -1.*t2872*t8606;
  t8679 = t8660 + t8662;
  t8688 = -1.*t3513*t8647;
  t8690 = t3429*t8679;
  t8706 = t8688 + t8690;
  t8722 = t3429*t8647;
  t8725 = t3513*t8679;
  t8727 = t8722 + t8725;
  t8821 = t266*t408*t426;
  t8827 = -1.*t264*t430;
  t8828 = t8821 + t8827;
  t8856 = t83*t8828;
  t8862 = t526*t776;
  t8864 = t8856 + t8862;
  t8878 = -1.*t8828*t776;
  t8892 = t909 + t8878;
  t8906 = t1665*t8864*t1144;
  t8913 = t8892*t1749;
  t8920 = t8906 + t8913;
  t8925 = t1665*t8892;
  t8928 = -1.*t8864*t1144*t1749;
  t8932 = t8925 + t8928;
  t8940 = -1.*t2381*t8920;
  t8942 = t2250*t8932;
  t8943 = t8940 + t8942;
  t8954 = t2250*t8920;
  t8960 = t2381*t8932;
  t8965 = t8954 + t8960;
  t8976 = t2872*t8943;
  t8988 = t2746*t8965;
  t9000 = t8976 + t8988;
  t9017 = t2746*t8943;
  t9020 = -1.*t2872*t8965;
  t9026 = t9017 + t9020;
  t9031 = -1.*t3513*t9000;
  t9033 = t3429*t9026;
  t9035 = t9031 + t9033;
  t9041 = t3429*t9000;
  t9042 = t3513*t9026;
  t9047 = t9041 + t9042;
  t9105 = t1334*t266*t83;
  t9108 = -1.*t1334*t430*t776;
  t9112 = t9105 + t9108;
  t9122 = -1.*t1334*t83*t430;
  t9146 = -1.*t1334*t266*t776;
  t9150 = t9122 + t9146;
  t9166 = t1665*t9112*t1144;
  t9176 = t9150*t1749;
  t9196 = t9166 + t9176;
  t9212 = t1665*t9150;
  t9217 = -1.*t9112*t1144*t1749;
  t9222 = t9212 + t9217;
  t9246 = -1.*t2381*t9196;
  t9256 = t2250*t9222;
  t9274 = t9246 + t9256;
  t9282 = t2250*t9196;
  t9284 = t2381*t9222;
  t9293 = t9282 + t9284;
  t9306 = t2872*t9274;
  t9311 = t2746*t9293;
  t9321 = t9306 + t9311;
  t9326 = t2746*t9274;
  t9327 = -1.*t2872*t9293;
  t9330 = t9326 + t9327;
  t9341 = -1.*t3513*t9321;
  t9346 = t3429*t9330;
  t9350 = t9341 + t9346;
  t9352 = t3429*t9321;
  t9353 = t3513*t9330;
  t9357 = t9352 + t9353;
  t9517 = -1.*t83*t4560;
  t9554 = t9517 + t8501;
  t9570 = t1665*t5434*t1144;
  t9586 = t9554*t1749;
  t9602 = t9570 + t9586;
  t9629 = t1665*t9554;
  t9666 = -1.*t5434*t1144*t1749;
  t9671 = t9629 + t9666;
  t9681 = -1.*t2381*t9602;
  t9683 = t2250*t9671;
  t9685 = t9681 + t9683;
  t9692 = t2250*t9602;
  t9696 = t2381*t9671;
  t9709 = t9692 + t9696;
  t9720 = t2872*t9685;
  t9727 = t2746*t9709;
  t9752 = t9720 + t9727;
  t9760 = t2746*t9685;
  t9767 = -1.*t2872*t9709;
  t9770 = t9760 + t9767;
  t9781 = -1.*t3513*t9752;
  t9784 = t3429*t9770;
  t9790 = t9781 + t9784;
  t9795 = t3429*t9752;
  t9799 = t3513*t9770;
  t9800 = t9795 + t9799;
  t9971 = t264*t266;
  t9995 = t408*t426*t430;
  t9999 = t9971 + t9995;
  t10016 = -1.*t9999*t776;
  t10025 = t8856 + t10016;
  t10062 = -1.*t83*t9999;
  t10064 = t10062 + t8878;
  t10091 = t1665*t10025*t1144;
  t10098 = t10064*t1749;
  t10100 = t10091 + t10098;
  t10119 = t1665*t10064;
  t10124 = -1.*t10025*t1144*t1749;
  t10128 = t10119 + t10124;
  t10147 = -1.*t2381*t10100;
  t10148 = t2250*t10128;
  t10154 = t10147 + t10148;
  t10161 = t2250*t10100;
  t10163 = t2381*t10128;
  t10170 = t10161 + t10163;
  t10185 = t2872*t10154;
  t10187 = t2746*t10170;
  t10191 = t10185 + t10187;
  t10208 = t2746*t10154;
  t10210 = -1.*t2872*t10170;
  t10214 = t10208 + t10210;
  t10227 = -1.*t3513*t10191;
  t10234 = t3429*t10214;
  t10240 = t10227 + t10234;
  t10254 = t3429*t10191;
  t10262 = t3513*t10214;
  t10269 = t10254 + t10262;
  t9113 = 0.1305*t928*t9112;
  t9114 = t9112*t1175;
  t9120 = t9112*t1144*t1755;
  t9154 = t9150*t2091;
  t9204 = t2417*t9196;
  t9236 = t2559*t9222;
  t9277 = t2895*t9274;
  t9304 = t3226*t9293;
  t9324 = t3590*t9321;
  t9337 = t3735*t9330;
  t9351 = t4042*t9350;
  t9358 = t4235*t9357;
  t9362 = t3990*t9350;
  t9378 = t3912*t9357;
  t9389 = t9362 + t9378;
  t9390 = 0.0306*t9389;
  t9398 = t3912*t9350;
  t9406 = -1.*t3990*t9357;
  t9409 = t9398 + t9406;
  t9429 = -1.1312*t9409;
  t5097 = t928*t5033;
  t5114 = -1.*t264*t1334*t1144;
  t5162 = t5097 + t5114;
  t10401 = -1.*t1665*t2381*t5162;
  t10405 = -1.*t2250*t5162*t1749;
  t10411 = t10401 + t10405;
  t10417 = t2250*t1665*t5162;
  t10424 = -1.*t2381*t5162*t1749;
  t10447 = t10417 + t10424;
  t10457 = t2872*t10411;
  t10463 = t2746*t10447;
  t10464 = t10457 + t10463;
  t10469 = t2746*t10411;
  t10472 = -1.*t2872*t10447;
  t10474 = t10469 + t10472;
  t10483 = -1.*t3513*t10464;
  t10491 = t3429*t10474;
  t10493 = t10483 + t10491;
  t10503 = t3429*t10464;
  t10504 = t3513*t10474;
  t10505 = t10503 + t10504;
  t10351 = 0.135*t928;
  t10359 = -0.049*t1144;
  t10360 = t10351 + t10359;
  t10370 = 0.049*t928;
  t10374 = t10370 + t1366;
  t10555 = t83*t9999;
  t10565 = t8828*t776;
  t10569 = t10555 + t10565;
  t10577 = t928*t10569;
  t10581 = -1.*t1334*t408*t1144;
  t10583 = t10577 + t10581;
  t10617 = -1.*t1665*t2381*t10583;
  t10618 = -1.*t2250*t10583*t1749;
  t10622 = t10617 + t10618;
  t10628 = t2250*t1665*t10583;
  t10630 = -1.*t2381*t10583*t1749;
  t10639 = t10628 + t10630;
  t10646 = t2872*t10622;
  t10649 = t2746*t10639;
  t10652 = t10646 + t10649;
  t10658 = t2746*t10622;
  t10659 = -1.*t2872*t10639;
  t10661 = t10658 + t10659;
  t10665 = -1.*t3513*t10652;
  t10669 = t3429*t10661;
  t10670 = t10665 + t10669;
  t10674 = t3429*t10652;
  t10676 = t3513*t10661;
  t10684 = t10674 + t10676;
  t10740 = t1334*t83*t430;
  t10741 = t1334*t266*t776;
  t10743 = t10740 + t10741;
  t10746 = t928*t10743;
  t10747 = t426*t1144;
  t10748 = t10746 + t10747;
  t10773 = -1.*t1665*t2381*t10748;
  t10774 = -1.*t2250*t10748*t1749;
  t10776 = t10773 + t10774;
  t10780 = t2250*t1665*t10748;
  t10786 = -1.*t2381*t10748*t1749;
  t10797 = t10780 + t10786;
  t10802 = t2872*t10776;
  t10814 = t2746*t10797;
  t10817 = t10802 + t10814;
  t10826 = t2746*t10776;
  t10827 = -1.*t2872*t10797;
  t10833 = t10826 + t10827;
  t10836 = -1.*t3513*t10817;
  t10841 = t3429*t10833;
  t10842 = t10836 + t10841;
  t10850 = t3429*t10817;
  t10853 = t3513*t10833;
  t10854 = t10850 + t10853;
  t10896 = -1.*t1665*t5289;
  t10897 = -1.*t5434*t1749;
  t10900 = t10896 + t10897;
  t10908 = t2381*t10900;
  t10912 = t10908 + t5976;
  t10915 = t2250*t10900;
  t10920 = -1.*t2381*t5850;
  t10924 = t10915 + t10920;
  t10933 = -1.*t2872*t10912;
  t10935 = t2746*t10924;
  t10938 = t10933 + t10935;
  t10941 = t2746*t10912;
  t10944 = t2872*t10924;
  t10946 = t10941 + t10944;
  t10950 = t3513*t10938;
  t10954 = t3429*t10946;
  t10955 = t10950 + t10954;
  t10960 = t3429*t10938;
  t10962 = -1.*t3513*t10946;
  t10966 = t10960 + t10962;
  t10885 = 0.049*t1665;
  t10886 = t10885 + t1751;
  t10890 = -0.09*t1665;
  t10892 = -0.049*t1749;
  t10893 = t10890 + t10892;
  t10986 = t1334*t928*t408;
  t10987 = t10569*t1144;
  t10990 = t10986 + t10987;
  t10998 = -1.*t1665*t10990;
  t10999 = -1.*t10025*t1749;
  t11002 = t10998 + t10999;
  t11006 = t1665*t10025;
  t11010 = -1.*t10990*t1749;
  t11012 = t11006 + t11010;
  t11018 = t2381*t11002;
  t11019 = t2250*t11012;
  t11023 = t11018 + t11019;
  t11027 = t2250*t11002;
  t11028 = -1.*t2381*t11012;
  t11029 = t11027 + t11028;
  t11032 = -1.*t2872*t11023;
  t11033 = t2746*t11029;
  t11036 = t11032 + t11033;
  t11039 = t2746*t11023;
  t11041 = t2872*t11029;
  t11042 = t11039 + t11041;
  t11050 = t3513*t11036;
  t11051 = t3429*t11042;
  t11054 = t11050 + t11051;
  t11063 = t3429*t11036;
  t11064 = -1.*t3513*t11042;
  t11066 = t11063 + t11064;
  t11095 = -1.*t928*t426;
  t11100 = t10743*t1144;
  t11103 = t11095 + t11100;
  t11106 = -1.*t1665*t11103;
  t11109 = -1.*t9112*t1749;
  t11110 = t11106 + t11109;
  t11113 = t1665*t9112;
  t11114 = -1.*t11103*t1749;
  t11117 = t11113 + t11114;
  t11120 = t2381*t11110;
  t11123 = t2250*t11117;
  t11125 = t11120 + t11123;
  t11130 = t2250*t11110;
  t11131 = -1.*t2381*t11117;
  t11138 = t11130 + t11131;
  t11141 = -1.*t2872*t11125;
  t11145 = t2746*t11138;
  t11146 = t11141 + t11145;
  t11149 = t2746*t11125;
  t11151 = t2872*t11138;
  t11152 = t11149 + t11151;
  t11155 = t3513*t11146;
  t11156 = t3429*t11152;
  t11158 = t11155 + t11156;
  t11165 = t3429*t11146;
  t11169 = -1.*t3513*t11152;
  t11170 = t11165 + t11169;
  t11206 = -1.*t2250*t5747;
  t11210 = t11206 + t10920;
  t11219 = -1.*t2872*t5995;
  t11220 = t2746*t11210;
  t11223 = t11219 + t11220;
  t11226 = t2872*t11210;
  t11227 = t6153 + t11226;
  t11230 = t3513*t11223;
  t11233 = t3429*t11227;
  t11234 = t11230 + t11233;
  t11236 = t3429*t11223;
  t11237 = -1.*t3513*t11227;
  t11239 = t11236 + t11237;
  t11191 = -0.21*t2250;
  t11194 = -0.049*t2381;
  t11195 = t11191 + t11194;
  t11198 = 0.049*t2250;
  t11200 = t11198 + t2384;
  t11266 = t1665*t10990;
  t11270 = t10025*t1749;
  t11271 = t11266 + t11270;
  t11275 = -1.*t2381*t11271;
  t11278 = t11275 + t11019;
  t11283 = -1.*t2250*t11271;
  t11287 = t11283 + t11028;
  t11295 = -1.*t2872*t11278;
  t11297 = t2746*t11287;
  t11298 = t11295 + t11297;
  t11301 = t2746*t11278;
  t11302 = t2872*t11287;
  t11303 = t11301 + t11302;
  t11305 = t3513*t11298;
  t11306 = t3429*t11303;
  t11307 = t11305 + t11306;
  t11311 = t3429*t11298;
  t11312 = -1.*t3513*t11303;
  t11315 = t11311 + t11312;
  t11332 = t1665*t11103;
  t11333 = t9112*t1749;
  t11337 = t11332 + t11333;
  t11340 = -1.*t2381*t11337;
  t11341 = t11340 + t11123;
  t11343 = -1.*t2250*t11337;
  t11344 = t11343 + t11131;
  t11346 = -1.*t2872*t11341;
  t11347 = t2746*t11344;
  t11348 = t11346 + t11347;
  t11350 = t2746*t11341;
  t11351 = t2872*t11344;
  t11353 = t11350 + t11351;
  t11356 = t3513*t11348;
  t11357 = t3429*t11353;
  t11358 = t11356 + t11357;
  t11361 = t3429*t11348;
  t11362 = -1.*t3513*t11353;
  t11365 = t11361 + t11362;
  t11387 = -1.*t2746*t6075;
  t11389 = t11219 + t11387;
  t11394 = t3513*t11389;
  t11395 = t11394 + t6174;
  t11397 = t3429*t11389;
  t11398 = -1.*t3513*t6168;
  t11399 = t11397 + t11398;
  t11376 = 0.0016*t2746;
  t11377 = t11376 + t3188;
  t11381 = -0.2707*t2746;
  t11382 = -0.0016*t2872;
  t11385 = t11381 + t11382;
  t11416 = t2250*t11271;
  t11418 = t2381*t11012;
  t11420 = t11416 + t11418;
  t11424 = -1.*t2746*t11420;
  t11425 = t11295 + t11424;
  t11427 = -1.*t2872*t11420;
  t11428 = t11301 + t11427;
  t11430 = t3513*t11425;
  t11431 = t3429*t11428;
  t11432 = t11430 + t11431;
  t11434 = t3429*t11425;
  t11435 = -1.*t3513*t11428;
  t11436 = t11434 + t11435;
  t11450 = t2250*t11337;
  t11451 = t2381*t11117;
  t11452 = t11450 + t11451;
  t11455 = -1.*t2746*t11452;
  t11456 = t11346 + t11455;
  t11461 = -1.*t2872*t11452;
  t11462 = t11350 + t11461;
  t11465 = t3513*t11456;
  t11466 = t3429*t11462;
  t11468 = t11465 + t11466;
  t11470 = t3429*t11456;
  t11471 = -1.*t3513*t11462;
  t11472 = t11470 + t11471;
  t11497 = -1.*t3429*t6132;
  t11498 = t11497 + t11398;
  t6421 = t3912*t6199;
  t11489 = -0.7055*t3429;
  t11490 = 0.0184*t3513;
  t11491 = t11489 + t11490;
  t11493 = -0.0184*t3429;
  t11494 = t11493 + t3522;
  t11509 = t2872*t11278;
  t11510 = t2746*t11420;
  t11511 = t11509 + t11510;
  t11514 = -1.*t3513*t11511;
  t11515 = t11514 + t11431;
  t11517 = -1.*t3429*t11511;
  t11518 = t11517 + t11435;
  t11531 = t2872*t11341;
  t11532 = t2746*t11452;
  t11533 = t11531 + t11532;
  t11537 = -1.*t3513*t11533;
  t11538 = t11537 + t11466;
  t11540 = -1.*t3429*t11533;
  t11541 = t11540 + t11471;
  t11500 = -1.*t3990*t6199;
  t6429 = -1.*t3990*t6280;
  t6437 = t6421 + t6429;
  t11552 = 0.0216*t3912;
  t11553 = t11552 + t4214;
  t11555 = -1.1135*t3912;
  t11556 = -0.0216*t3990;
  t11557 = t11555 + t11556;
  t11522 = -1.*t3990*t11515;
  t11565 = t3429*t11511;
  t11566 = t3513*t11428;
  t11567 = t11565 + t11566;
  t11526 = t3912*t11515;
  t11543 = -1.*t3990*t11538;
  t11578 = t3429*t11533;
  t11579 = t3513*t11462;
  t11581 = t11578 + t11579;
  t11547 = t3912*t11538;

  p_output1(0)=1.;
  p_output1(1)=0;
  p_output1(2)=0;
  p_output1(3)=0;
  p_output1(4)=1.;
  p_output1(5)=0;
  p_output1(6)=0;
  p_output1(7)=0;
  p_output1(8)=1.;
  p_output1(9)=t1663*t1755 + t1974*t2091 + t2417*t2506 + t2559*t2700 + t2895*t3026 + t3226*t3408 + t3590*t3629 + t3735*t3796 - 1.*t1334*t1418*t408 + t4042*t4181 + t4235*t4271 + 0.0306*(t3990*t4181 + t3912*t4271) - 1.1312*(t3912*t4181 - 1.*t3990*t4271) + t226*t526 + t762*t862 + t1175*t924 + 0.1305*(t1144*t1334*t408 + t924*t928);
  p_output1(10)=t1334*t1418*t264 + t226*t4560 + t1175*t5033 + 0.1305*t5162 + t1755*t5289 + t2091*t5434 + t2417*t5747 + t2559*t5850 + t2895*t5995 + t3226*t6075 + t3590*t6132 + t3735*t6168 + t4042*t6199 + t4235*t6280 + 0.0306*(t3990*t6199 + t3912*t6280) - 1.1312*t6437 + t4713*t862;
  p_output1(11)=0;
  p_output1(12)=-1.*t1418*t264*t426 + t1334*t226*t264*t430 + t1175*t6502 + t1755*t6674 + t2091*t6749 + t2417*t6771 + t2559*t6820 + t2895*t6877 + t3226*t6909 + t3590*t6964 + t3735*t7007 + t4042*t7071 + t4235*t7133 + 0.0306*(t3990*t7071 + t3912*t7133) - 1.1312*(t3912*t7071 - 1.*t3990*t7133) + t1334*t264*t266*t862 + 0.1305*(t1144*t264*t426 + t6502*t928);
  p_output1(13)=-1.*t1418*t408*t426 + t1334*t226*t408*t430 + t1175*t7328 + t1755*t7380 + t2091*t7403 + t2417*t7433 + t2559*t7484 + t2895*t7545 + t3226*t7600 + t3590*t7681 + t3735*t7746 + t4042*t7784 + t4235*t7825 + 0.0306*(t3990*t7784 + t3912*t7825) - 1.1312*(t3912*t7784 - 1.*t3990*t7825) + t1334*t266*t408*t862 + 0.1305*(t1144*t408*t426 + t7328*t928);
  p_output1(14)=-1.*t1334*t1418 - 1.*t226*t426*t430 + t1175*t7987 + t1755*t8066 + t2091*t8105 + t2417*t8138 + t2559*t8184 + t2895*t8228 + t3226*t8278 + t3590*t8325 + t3735*t8340 + t4042*t8349 + t4235*t8379 + 0.0306*(t3990*t8349 + t3912*t8379) - 1.1312*(t3912*t8349 - 1.*t3990*t8379) - 1.*t266*t426*t862 + 0.1305*(t1144*t1334 + t7987*t928);
  p_output1(15)=t226*t4713 + t1175*t8481 + t1144*t1755*t8481 + t2091*t8502 + t2417*t8515 + t2559*t8541 + t2895*t8583 + t3226*t8606 + t8471*t862 + t3590*t8647 + t3735*t8679 + t4042*t8706 + t4235*t8727 + 0.0306*(t3990*t8706 + t3912*t8727) - 1.1312*(t3912*t8706 - 1.*t3990*t8727) + 0.1305*t8481*t928;
  p_output1(16)=t526*t862 + t226*t8828 + t1175*t8864 + t1144*t1755*t8864 + t2091*t8892 + t2417*t8920 + t2559*t8932 + t2895*t8943 + t3226*t8965 + t3590*t9000 + t3735*t9026 + t4042*t9035 + t4235*t9047 + 0.0306*(t3990*t9035 + t3912*t9047) - 1.1312*(t3912*t9035 - 1.*t3990*t9047) + 0.1305*t8864*t928;
  p_output1(17)=t1334*t226*t266 - 1.*t1334*t430*t862 + t9113 + t9114 + t9120 + t9154 + t9204 + t9236 + t9277 + t9304 + t9324 + t9337 + t9351 + t9358 + t9390 + t9429;
  p_output1(18)=t1175*t5434 + t1144*t1755*t5434 + 0.135*t4560*t776 - 0.135*t4713*t83 + 0.1305*t5434*t928 + t2091*t9554 + t2417*t9602 + t2559*t9671 + t2895*t9685 + t3226*t9709 + t3590*t9752 + t3735*t9770 + t4042*t9790 + t4235*t9800 + 0.0306*(t3990*t9790 + t3912*t9800) - 1.1312*(t3912*t9790 - 1.*t3990*t9800);
  p_output1(19)=t10025*t1175 + t10025*t1144*t1755 + t10064*t2091 + t10100*t2417 + t10128*t2559 + t10154*t2895 + t10170*t3226 + t10191*t3590 + t10214*t3735 + 0.0306*(t10269*t3912 + t10240*t3990) - 1.1312*(t10240*t3912 - 1.*t10269*t3990) + t10240*t4042 + t10269*t4235 - 0.135*t83*t8828 + 0.1305*t10025*t928 + 0.135*t776*t9999;
  p_output1(20)=0.135*t1334*t430*t776 - 0.135*t1334*t266*t83 + t9113 + t9114 + t9120 + t9154 + t9204 + t9236 + t9277 + t9304 + t9324 + t9337 + t9351 + t9358 + t9390 + t9429;
  p_output1(21)=t10360*t1334*t264 + t10411*t2895 + t10447*t3226 + t10464*t3590 + t10474*t3735 + 0.0306*(t10505*t3912 + t10493*t3990) - 1.1312*(t10493*t3912 - 1.*t10505*t3990) + t10493*t4042 + t10505*t4235 + t10374*t5033 + t1755*t5162 + t1665*t2417*t5162 - 1.*t1749*t2559*t5162 + 0.1305*(-1.*t1144*t5033 - 1.*t1334*t264*t928);
  p_output1(22)=t10374*t10569 + 0.1305*(-1.*t10569*t1144 + t1631) + t10583*t1755 + t10583*t1665*t2417 - 1.*t10583*t1749*t2559 + t10622*t2895 + t10639*t3226 + t10652*t3590 + t10661*t3735 + 0.0306*(t10684*t3912 + t10670*t3990) - 1.1312*(t10670*t3912 - 1.*t10684*t3990) + t10670*t4042 + t10360*t1334*t408 + t10684*t4235;
  p_output1(23)=t10374*t10743 + t10748*t1755 + t10748*t1665*t2417 - 1.*t10748*t1749*t2559 + t10776*t2895 + t10797*t3226 + t10817*t3590 + t10833*t3735 + 0.0306*(t10854*t3912 + t10842*t3990) - 1.1312*(t10842*t3912 - 1.*t10854*t3990) + t10842*t4042 + t10854*t4235 - 1.*t10360*t426 + 0.1305*(-1.*t10743*t1144 + t426*t928);
  p_output1(24)=t10900*t2559 + t10924*t2895 + t10912*t3226 + t10946*t3590 + t10938*t3735 - 1.1312*(t10966*t3912 - 1.*t10955*t3990) + 0.0306*(t10955*t3912 + t10966*t3990) + t10966*t4042 + t10955*t4235 + t10893*t5289 + t10886*t5434 + t2417*t5850;
  p_output1(25)=t10025*t10886 + t10893*t10990 + t11012*t2417 + t11002*t2559 + t11029*t2895 + t11023*t3226 + t11042*t3590 + t11036*t3735 - 1.1312*(t11066*t3912 - 1.*t11054*t3990) + 0.0306*(t11054*t3912 + t11066*t3990) + t11066*t4042 + t11054*t4235;
  p_output1(26)=t10893*t11103 + t11117*t2417 + t11110*t2559 + t11138*t2895 + t11125*t3226 + t11152*t3590 + t11146*t3735 - 1.1312*(t11170*t3912 - 1.*t11158*t3990) + 0.0306*(t11158*t3912 + t11170*t3990) + t11170*t4042 + t11158*t4235 + t10886*t9112;
  p_output1(27)=t11210*t2895 + t11227*t3590 + t11223*t3735 - 1.1312*(t11239*t3912 - 1.*t11234*t3990) + 0.0306*(t11234*t3912 + t11239*t3990) + t11239*t4042 + t11234*t4235 + t11195*t5747 + t11200*t5850 + t3226*t5995;
  p_output1(28)=t11012*t11200 + t11195*t11271 + t11287*t2895 + t11278*t3226 + t11303*t3590 + t11298*t3735 - 1.1312*(t11315*t3912 - 1.*t11307*t3990) + 0.0306*(t11307*t3912 + t11315*t3990) + t11315*t4042 + t11307*t4235;
  p_output1(29)=t11117*t11200 + t11195*t11337 + t11344*t2895 + t11341*t3226 + t11353*t3590 + t11348*t3735 - 1.1312*(t11365*t3912 - 1.*t11358*t3990) + 0.0306*(t11358*t3912 + t11365*t3990) + t11365*t4042 + t11358*t4235;
  p_output1(30)=t11389*t3735 - 1.1312*(t11399*t3912 - 1.*t11395*t3990) + 0.0306*(t11395*t3912 + t11399*t3990) + t11399*t4042 + t11395*t4235 + t11377*t5995 + t11385*t6075 + t3590*t6168;
  p_output1(31)=t11278*t11377 + t11385*t11420 + t11428*t3590 + t11425*t3735 - 1.1312*(t11436*t3912 - 1.*t11432*t3990) + 0.0306*(t11432*t3912 + t11436*t3990) + t11436*t4042 + t11432*t4235;
  p_output1(32)=t11341*t11377 + t11385*t11452 + t11462*t3590 + t11456*t3735 - 1.1312*(t11472*t3912 - 1.*t11468*t3990) + 0.0306*(t11468*t3912 + t11472*t3990) + t11472*t4042 + t11468*t4235;
  p_output1(33)=-1.1312*(t11500 + t11498*t3912) + t11498*t4042 + t11491*t6132 + t11494*t6168 + t4235*t6199 + 0.0306*(t11498*t3990 + t6421);
  p_output1(34)=t11428*t11494 + t11491*t11511 - 1.1312*(t11522 + t11518*t3912) + 0.0306*(t11526 + t11518*t3990) + t11518*t4042 + t11515*t4235;
  p_output1(35)=t11462*t11494 + t11491*t11533 - 1.1312*(t11543 + t11541*t3912) + 0.0306*(t11547 + t11541*t3990) + t11541*t4042 + t11538*t4235;
  p_output1(36)=t11553*t6199 + t11557*t6280 - 1.1312*(t11500 - 1.*t3912*t6280) + 0.0306*t6437;
  p_output1(37)=t11515*t11553 + t11557*t11567 - 1.1312*(t11522 - 1.*t11567*t3912) + 0.0306*(t11526 - 1.*t11567*t3990);
  p_output1(38)=t11538*t11553 + t11557*t11581 - 1.1312*(t11543 - 1.*t11581*t3912) + 0.0306*(t11547 - 1.*t11581*t3990);
  p_output1(39)=0;
  p_output1(40)=0;
  p_output1(41)=0;
  p_output1(42)=0;
  p_output1(43)=0;
  p_output1(44)=0;
  p_output1(45)=0;
  p_output1(46)=0;
  p_output1(47)=0;
  p_output1(48)=0;
  p_output1(49)=0;
  p_output1(50)=0;
  p_output1(51)=0;
  p_output1(52)=0;
  p_output1(53)=0;
  p_output1(54)=0;
  p_output1(55)=0;
  p_output1(56)=0;
  p_output1(57)=0;
  p_output1(58)=0;
  p_output1(59)=0;
}


       
Eigen::Matrix<double,3,20> Jp_LeftToeBottom(const Eigen::Matrix<double,20,1> &var1)
//void Jp_LeftToeBottom(Eigen::Matrix<double,3,20> &p_output1, const Eigen::Matrix<double,20,1> &var1)
{
  /* Call Subroutines */
  Eigen::Matrix<double,3,20>  p_output1;
  
  output1(p_output1, var1);

  return p_output1;
}



